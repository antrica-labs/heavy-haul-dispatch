#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30128.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SingerDispatch
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	public partial class SingerDispatchDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAddress(Address instance);
    partial void UpdateAddress(Address instance);
    partial void DeleteAddress(Address instance);
    partial void InsertAddressType(AddressType instance);
    partial void UpdateAddressType(AddressType instance);
    partial void DeleteAddressType(AddressType instance);
    partial void InsertBillingType(BillingType instance);
    partial void UpdateBillingType(BillingType instance);
    partial void DeleteBillingType(BillingType instance);
    partial void InsertCommodity(Commodity instance);
    partial void UpdateCommodity(Commodity instance);
    partial void DeleteCommodity(Commodity instance);
    partial void InsertCompany(Company instance);
    partial void UpdateCompany(Company instance);
    partial void DeleteCompany(Company instance);
    partial void InsertCompanyPriorityLevel(CompanyPriorityLevel instance);
    partial void UpdateCompanyPriorityLevel(CompanyPriorityLevel instance);
    partial void DeleteCompanyPriorityLevel(CompanyPriorityLevel instance);
    partial void InsertContact(Contact instance);
    partial void UpdateContact(Contact instance);
    partial void DeleteContact(Contact instance);
    partial void InsertContactRoles(ContactRoles instance);
    partial void UpdateContactRoles(ContactRoles instance);
    partial void DeleteContactRoles(ContactRoles instance);
    partial void InsertContactType(ContactType instance);
    partial void UpdateContactType(ContactType instance);
    partial void DeleteContactType(ContactType instance);
    partial void InsertCountry(Country instance);
    partial void UpdateCountry(Country instance);
    partial void DeleteCountry(Country instance);
    partial void InsertEmployee(Employee instance);
    partial void UpdateEmployee(Employee instance);
    partial void DeleteEmployee(Employee instance);
    partial void InsertEquipmentType(EquipmentType instance);
    partial void UpdateEquipmentType(EquipmentType instance);
    partial void DeleteEquipmentType(EquipmentType instance);
    partial void InsertJobCommodity(JobCommodity instance);
    partial void UpdateJobCommodity(JobCommodity instance);
    partial void DeleteJobCommodity(JobCommodity instance);
    partial void InsertJob(Job instance);
    partial void UpdateJob(Job instance);
    partial void DeleteJob(Job instance);
    partial void InsertJobReferenceNumber(JobReferenceNumber instance);
    partial void UpdateJobReferenceNumber(JobReferenceNumber instance);
    partial void DeleteJobReferenceNumber(JobReferenceNumber instance);
    partial void InsertJobStatusType(JobStatusType instance);
    partial void UpdateJobStatusType(JobStatusType instance);
    partial void DeleteJobStatusType(JobStatusType instance);
    partial void InsertLoad(Load instance);
    partial void UpdateLoad(Load instance);
    partial void DeleteLoad(Load instance);
    partial void InsertPermit(Permit instance);
    partial void UpdatePermit(Permit instance);
    partial void DeletePermit(Permit instance);
    partial void InsertProvincesAndState(ProvincesAndState instance);
    partial void UpdateProvincesAndState(ProvincesAndState instance);
    partial void DeleteProvincesAndState(ProvincesAndState instance);
    partial void InsertQuoteCommodity(QuoteCommodity instance);
    partial void UpdateQuoteCommodity(QuoteCommodity instance);
    partial void DeleteQuoteCommodity(QuoteCommodity instance);
    partial void InsertQuote(Quote instance);
    partial void UpdateQuote(Quote instance);
    partial void DeleteQuote(Quote instance);
    partial void InsertQuoteSupplement(QuoteSupplement instance);
    partial void UpdateQuoteSupplement(QuoteSupplement instance);
    partial void DeleteQuoteSupplement(QuoteSupplement instance);
    partial void InsertQuoteStorageItem(QuoteStorageItem instance);
    partial void UpdateQuoteStorageItem(QuoteStorageItem instance);
    partial void DeleteQuoteStorageItem(QuoteStorageItem instance);
    partial void InsertInclusion(Inclusion instance);
    partial void UpdateInclusion(Inclusion instance);
    partial void DeleteInclusion(Inclusion instance);
    partial void InsertQuoteInclusion(QuoteInclusion instance);
    partial void UpdateQuoteInclusion(QuoteInclusion instance);
    partial void DeleteQuoteInclusion(QuoteInclusion instance);
    partial void InsertCondition(Condition instance);
    partial void UpdateCondition(Condition instance);
    partial void DeleteCondition(Condition instance);
    partial void InsertQuoteCondition(QuoteCondition instance);
    partial void UpdateQuoteCondition(QuoteCondition instance);
    partial void DeleteQuoteCondition(QuoteCondition instance);
    partial void InsertRate(Rate instance);
    partial void UpdateRate(Rate instance);
    partial void DeleteRate(Rate instance);
    partial void InsertRateType(RateType instance);
    partial void UpdateRateType(RateType instance);
    partial void DeleteRateType(RateType instance);
    partial void InsertSeason(Season instance);
    partial void UpdateSeason(Season instance);
    partial void DeleteSeason(Season instance);
    partial void InsertService(Service instance);
    partial void UpdateService(Service instance);
    partial void DeleteService(Service instance);
    partial void InsertServiceType(ServiceType instance);
    partial void UpdateServiceType(ServiceType instance);
    partial void DeleteServiceType(ServiceType instance);
    partial void InsertThirdPartyService(ThirdPartyService instance);
    partial void UpdateThirdPartyService(ThirdPartyService instance);
    partial void DeleteThirdPartyService(ThirdPartyService instance);
    partial void InsertEquipment(Equipment instance);
    partial void UpdateEquipment(Equipment instance);
    partial void DeleteEquipment(Equipment instance);
    partial void InsertEquipmentClass(EquipmentClass instance);
    partial void UpdateEquipmentClass(EquipmentClass instance);
    partial void DeleteEquipmentClass(EquipmentClass instance);
    partial void InsertDispatch(Dispatch instance);
    partial void UpdateDispatch(Dispatch instance);
    partial void DeleteDispatch(Dispatch instance);
    partial void InsertTrailerCombination(TrailerCombination instance);
    partial void UpdateTrailerCombination(TrailerCombination instance);
    partial void DeleteTrailerCombination(TrailerCombination instance);
    partial void InsertLoadUnloadMethod(LoadUnloadMethod instance);
    partial void UpdateLoadUnloadMethod(LoadUnloadMethod instance);
    partial void DeleteLoadUnloadMethod(LoadUnloadMethod instance);
    partial void InsertInvoice(Invoice instance);
    partial void UpdateInvoice(Invoice instance);
    partial void DeleteInvoice(Invoice instance);
    partial void InsertInvoiceReferenceNumber(InvoiceReferenceNumber instance);
    partial void UpdateInvoiceReferenceNumber(InvoiceReferenceNumber instance);
    partial void DeleteInvoiceReferenceNumber(InvoiceReferenceNumber instance);
    partial void InsertInvoiceLineItem(InvoiceLineItem instance);
    partial void UpdateInvoiceLineItem(InvoiceLineItem instance);
    partial void DeleteInvoiceLineItem(InvoiceLineItem instance);
    partial void InsertInvoiceExtra(InvoiceExtra instance);
    partial void UpdateInvoiceExtra(InvoiceExtra instance);
    partial void DeleteInvoiceExtra(InvoiceExtra instance);
    partial void InsertCustomerType(CustomerType instance);
    partial void UpdateCustomerType(CustomerType instance);
    partial void DeleteCustomerType(CustomerType instance);
    partial void InsertContactMethod(ContactMethod instance);
    partial void UpdateContactMethod(ContactMethod instance);
    partial void DeleteContactMethod(ContactMethod instance);
    partial void InsertConfiguration(Configuration instance);
    partial void UpdateConfiguration(Configuration instance);
    partial void DeleteConfiguration(Configuration instance);
    #endregion
		
		public SingerDispatchDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SingerDispatchDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SingerDispatchDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SingerDispatchDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Address> Addresses
		{
			get
			{
				return this.GetTable<Address>();
			}
		}
		
		public System.Data.Linq.Table<AddressType> AddressTypes
		{
			get
			{
				return this.GetTable<AddressType>();
			}
		}
		
		public System.Data.Linq.Table<BillingType> BillingTypes
		{
			get
			{
				return this.GetTable<BillingType>();
			}
		}
		
		public System.Data.Linq.Table<Commodity> Commodities
		{
			get
			{
				return this.GetTable<Commodity>();
			}
		}
		
		public System.Data.Linq.Table<Company> Companies
		{
			get
			{
				return this.GetTable<Company>();
			}
		}
		
		public System.Data.Linq.Table<CompanyPriorityLevel> CompanyPriorityLevels
		{
			get
			{
				return this.GetTable<CompanyPriorityLevel>();
			}
		}
		
		public System.Data.Linq.Table<Contact> Contacts
		{
			get
			{
				return this.GetTable<Contact>();
			}
		}
		
		public System.Data.Linq.Table<ContactRoles> ContactRoles
		{
			get
			{
				return this.GetTable<ContactRoles>();
			}
		}
		
		public System.Data.Linq.Table<ContactType> ContactTypes
		{
			get
			{
				return this.GetTable<ContactType>();
			}
		}
		
		public System.Data.Linq.Table<Country> Countries
		{
			get
			{
				return this.GetTable<Country>();
			}
		}
		
		public System.Data.Linq.Table<Employee> Employees
		{
			get
			{
				return this.GetTable<Employee>();
			}
		}
		
		public System.Data.Linq.Table<EquipmentType> EquipmentTypes
		{
			get
			{
				return this.GetTable<EquipmentType>();
			}
		}
		
		public System.Data.Linq.Table<JobCommodity> JobCommodities
		{
			get
			{
				return this.GetTable<JobCommodity>();
			}
		}
		
		public System.Data.Linq.Table<Job> Jobs
		{
			get
			{
				return this.GetTable<Job>();
			}
		}
		
		public System.Data.Linq.Table<JobReferenceNumber> JobReferenceNumbers
		{
			get
			{
				return this.GetTable<JobReferenceNumber>();
			}
		}
		
		public System.Data.Linq.Table<JobStatusType> JobStatusTypes
		{
			get
			{
				return this.GetTable<JobStatusType>();
			}
		}
		
		public System.Data.Linq.Table<Load> Loads
		{
			get
			{
				return this.GetTable<Load>();
			}
		}
		
		public System.Data.Linq.Table<Permit> Permits
		{
			get
			{
				return this.GetTable<Permit>();
			}
		}
		
		public System.Data.Linq.Table<ProvincesAndState> ProvincesAndStates
		{
			get
			{
				return this.GetTable<ProvincesAndState>();
			}
		}
		
		public System.Data.Linq.Table<QuoteCommodity> QuoteCommodities
		{
			get
			{
				return this.GetTable<QuoteCommodity>();
			}
		}
		
		public System.Data.Linq.Table<Quote> Quotes
		{
			get
			{
				return this.GetTable<Quote>();
			}
		}
		
		public System.Data.Linq.Table<QuoteSupplement> QuoteSupplements
		{
			get
			{
				return this.GetTable<QuoteSupplement>();
			}
		}
		
		public System.Data.Linq.Table<QuoteStorageItem> QuoteStorageItems
		{
			get
			{
				return this.GetTable<QuoteStorageItem>();
			}
		}
		
		public System.Data.Linq.Table<Inclusion> Inclusions
		{
			get
			{
				return this.GetTable<Inclusion>();
			}
		}
		
		public System.Data.Linq.Table<QuoteInclusion> QuoteInclusions
		{
			get
			{
				return this.GetTable<QuoteInclusion>();
			}
		}
		
		public System.Data.Linq.Table<Condition> Conditions
		{
			get
			{
				return this.GetTable<Condition>();
			}
		}
		
		public System.Data.Linq.Table<QuoteCondition> QuoteConditions
		{
			get
			{
				return this.GetTable<QuoteCondition>();
			}
		}
		
		public System.Data.Linq.Table<Rate> Rates
		{
			get
			{
				return this.GetTable<Rate>();
			}
		}
		
		public System.Data.Linq.Table<RateType> RateTypes
		{
			get
			{
				return this.GetTable<RateType>();
			}
		}
		
		public System.Data.Linq.Table<Season> Seasons
		{
			get
			{
				return this.GetTable<Season>();
			}
		}
		
		public System.Data.Linq.Table<Service> Services
		{
			get
			{
				return this.GetTable<Service>();
			}
		}
		
		public System.Data.Linq.Table<ServiceType> ServiceTypes
		{
			get
			{
				return this.GetTable<ServiceType>();
			}
		}
		
		public System.Data.Linq.Table<ThirdPartyService> ThirdPartyServices
		{
			get
			{
				return this.GetTable<ThirdPartyService>();
			}
		}
		
		public System.Data.Linq.Table<Equipment> Equipment
		{
			get
			{
				return this.GetTable<Equipment>();
			}
		}
		
		public System.Data.Linq.Table<EquipmentClass> EquipmentClasses
		{
			get
			{
				return this.GetTable<EquipmentClass>();
			}
		}
		
		public System.Data.Linq.Table<Dispatch> Dispatches
		{
			get
			{
				return this.GetTable<Dispatch>();
			}
		}
		
		public System.Data.Linq.Table<TrailerCombination> TrailerCombinations
		{
			get
			{
				return this.GetTable<TrailerCombination>();
			}
		}
		
		public System.Data.Linq.Table<LoadUnloadMethod> LoadUnloadMethods
		{
			get
			{
				return this.GetTable<LoadUnloadMethod>();
			}
		}
		
		public System.Data.Linq.Table<Invoice> Invoices
		{
			get
			{
				return this.GetTable<Invoice>();
			}
		}
		
		public System.Data.Linq.Table<InvoiceReferenceNumber> InvoiceReferenceNumbers
		{
			get
			{
				return this.GetTable<InvoiceReferenceNumber>();
			}
		}
		
		public System.Data.Linq.Table<InvoiceLineItem> InvoiceLineItems
		{
			get
			{
				return this.GetTable<InvoiceLineItem>();
			}
		}
		
		public System.Data.Linq.Table<InvoiceExtra> InvoiceExtras
		{
			get
			{
				return this.GetTable<InvoiceExtra>();
			}
		}
		
		public System.Data.Linq.Table<CustomerType> CustomerType
		{
			get
			{
				return this.GetTable<CustomerType>();
			}
		}
		
		public System.Data.Linq.Table<ContactMethod> ContactMethods
		{
			get
			{
				return this.GetTable<ContactMethod>();
			}
		}
		
		public System.Data.Linq.Table<Configuration> Configurations
		{
			get
			{
				return this.GetTable<Configuration>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class Address : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Nullable<long> _CompanyID;
		
		private System.Nullable<long> _AddressTypeID;
		
		private string _Line1;
		
		private string _Line2;
		
		private string _City;
		
		private System.Nullable<long> _ProvinceStateID;
		
		private string _PostalZip;
		
		private string _PrimaryPhone;
		
		private string _SecondaryPhone;
		
		private string _Fax;
		
		private string _Notes;
		
		private EntitySet<Contact> _Contacts;
		
		private EntitySet<Quote> _Quotes;
		
		private EntitySet<Invoice> _Invoices;
		
		private EntityRef<AddressType> _AddressType;
		
		private EntityRef<Company> _Company;
		
		private EntityRef<ProvincesAndState> _ProvincesAndState;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnCompanyIDChanging(System.Nullable<long> value);
    partial void OnCompanyIDChanged();
    partial void OnAddressTypeIDChanging(System.Nullable<long> value);
    partial void OnAddressTypeIDChanged();
    partial void OnLine1Changing(string value);
    partial void OnLine1Changed();
    partial void OnLine2Changing(string value);
    partial void OnLine2Changed();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnProvinceStateIDChanging(System.Nullable<long> value);
    partial void OnProvinceStateIDChanged();
    partial void OnPostalZipChanging(string value);
    partial void OnPostalZipChanged();
    partial void OnPrimaryPhoneChanging(string value);
    partial void OnPrimaryPhoneChanged();
    partial void OnSecondaryPhoneChanging(string value);
    partial void OnSecondaryPhoneChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    #endregion
		
		public Address()
		{
			this._Contacts = new EntitySet<Contact>(new Action<Contact>(this.attach_Contacts), new Action<Contact>(this.detach_Contacts));
			this._Quotes = new EntitySet<Quote>(new Action<Quote>(this.attach_Quotes), new Action<Quote>(this.detach_Quotes));
			this._Invoices = new EntitySet<Invoice>(new Action<Invoice>(this.attach_Invoices), new Action<Invoice>(this.detach_Invoices));
			this._AddressType = default(EntityRef<AddressType>);
			this._Company = default(EntityRef<Company>);
			this._ProvincesAndState = default(EntityRef<ProvincesAndState>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID")]
		public System.Nullable<long> CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					if (this._Company.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressTypeID")]
		public System.Nullable<long> AddressTypeID
		{
			get
			{
				return this._AddressTypeID;
			}
			set
			{
				if ((this._AddressTypeID != value))
				{
					if (this._AddressType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAddressTypeIDChanging(value);
					this.SendPropertyChanging();
					this._AddressTypeID = value;
					this.SendPropertyChanged("AddressTypeID");
					this.OnAddressTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Line1")]
		public string Line1
		{
			get
			{
				return this._Line1;
			}
			set
			{
				if ((this._Line1 != value))
				{
					this.OnLine1Changing(value);
					this.SendPropertyChanging();
					this._Line1 = value;
					this.SendPropertyChanged("Line1");
					this.OnLine1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Line2")]
		public string Line2
		{
			get
			{
				return this._Line2;
			}
			set
			{
				if ((this._Line2 != value))
				{
					this.OnLine2Changing(value);
					this.SendPropertyChanging();
					this._Line2 = value;
					this.SendPropertyChanged("Line2");
					this.OnLine2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProvinceStateID")]
		public System.Nullable<long> ProvinceStateID
		{
			get
			{
				return this._ProvinceStateID;
			}
			set
			{
				if ((this._ProvinceStateID != value))
				{
					if (this._ProvincesAndState.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProvinceStateIDChanging(value);
					this.SendPropertyChanging();
					this._ProvinceStateID = value;
					this.SendPropertyChanged("ProvinceStateID");
					this.OnProvinceStateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostalZip")]
		public string PostalZip
		{
			get
			{
				return this._PostalZip;
			}
			set
			{
				if ((this._PostalZip != value))
				{
					this.OnPostalZipChanging(value);
					this.SendPropertyChanging();
					this._PostalZip = value;
					this.SendPropertyChanged("PostalZip");
					this.OnPostalZipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrimaryPhone")]
		public string PrimaryPhone
		{
			get
			{
				return this._PrimaryPhone;
			}
			set
			{
				if ((this._PrimaryPhone != value))
				{
					this.OnPrimaryPhoneChanging(value);
					this.SendPropertyChanging();
					this._PrimaryPhone = value;
					this.SendPropertyChanged("PrimaryPhone");
					this.OnPrimaryPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecondaryPhone")]
		public string SecondaryPhone
		{
			get
			{
				return this._SecondaryPhone;
			}
			set
			{
				if ((this._SecondaryPhone != value))
				{
					this.OnSecondaryPhoneChanging(value);
					this.SendPropertyChanging();
					this._SecondaryPhone = value;
					this.SendPropertyChanged("SecondaryPhone");
					this.OnSecondaryPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fax")]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", UpdateCheck=UpdateCheck.Never)]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_Contact", Storage="_Contacts", ThisKey="ID", OtherKey="AddressID")]
		public EntitySet<Contact> Contacts
		{
			get
			{
				return this._Contacts;
			}
			set
			{
				this._Contacts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_Quote", Storage="_Quotes", ThisKey="ID", OtherKey="AddressID")]
		public EntitySet<Quote> Quotes
		{
			get
			{
				return this._Quotes;
			}
			set
			{
				this._Quotes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_Invoice", Storage="_Invoices", ThisKey="ID", OtherKey="AddressID")]
		public EntitySet<Invoice> Invoices
		{
			get
			{
				return this._Invoices;
			}
			set
			{
				this._Invoices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AddressType_Address", Storage="_AddressType", ThisKey="AddressTypeID", OtherKey="ID", IsForeignKey=true)]
		public AddressType AddressType
		{
			get
			{
				return this._AddressType.Entity;
			}
			set
			{
				AddressType previousValue = this._AddressType.Entity;
				if (((previousValue != value) 
							|| (this._AddressType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AddressType.Entity = null;
						previousValue.Addresses.Remove(this);
					}
					this._AddressType.Entity = value;
					if ((value != null))
					{
						value.Addresses.Add(this);
						this._AddressTypeID = value.ID;
					}
					else
					{
						this._AddressTypeID = default(Nullable<long>);
					}
					this.SendPropertyChanged("AddressType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_Address", Storage="_Company", ThisKey="CompanyID", OtherKey="ID", IsForeignKey=true)]
		public Company Company
		{
			get
			{
				return this._Company.Entity;
			}
			set
			{
				Company previousValue = this._Company.Entity;
				if (((previousValue != value) 
							|| (this._Company.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Company.Entity = null;
						previousValue.Addresses.Remove(this);
					}
					this._Company.Entity = value;
					if ((value != null))
					{
						value.Addresses.Add(this);
						this._CompanyID = value.ID;
					}
					else
					{
						this._CompanyID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Company");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProvincesAndState_Address", Storage="_ProvincesAndState", ThisKey="ProvinceStateID", OtherKey="ID", IsForeignKey=true)]
		public ProvincesAndState ProvincesAndState
		{
			get
			{
				return this._ProvincesAndState.Entity;
			}
			set
			{
				ProvincesAndState previousValue = this._ProvincesAndState.Entity;
				if (((previousValue != value) 
							|| (this._ProvincesAndState.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProvincesAndState.Entity = null;
						previousValue.Addresses.Remove(this);
					}
					this._ProvincesAndState.Entity = value;
					if ((value != null))
					{
						value.Addresses.Add(this);
						this._ProvinceStateID = value.ID;
					}
					else
					{
						this._ProvinceStateID = default(Nullable<long>);
					}
					this.SendPropertyChanged("ProvincesAndState");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Contacts(Contact entity)
		{
			this.SendPropertyChanging();
			entity.Address = this;
		}
		
		private void detach_Contacts(Contact entity)
		{
			this.SendPropertyChanging();
			entity.Address = null;
		}
		
		private void attach_Quotes(Quote entity)
		{
			this.SendPropertyChanging();
			entity.BillingAddress = this;
		}
		
		private void detach_Quotes(Quote entity)
		{
			this.SendPropertyChanging();
			entity.BillingAddress = null;
		}
		
		private void attach_Invoices(Invoice entity)
		{
			this.SendPropertyChanging();
			entity.BillingAddress = this;
		}
		
		private void detach_Invoices(Invoice entity)
		{
			this.SendPropertyChanging();
			entity.BillingAddress = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class AddressType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _Name;
		
		private EntitySet<Address> _Addresses;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public AddressType()
		{
			this._Addresses = new EntitySet<Address>(new Action<Address>(this.attach_Addresses), new Action<Address>(this.detach_Addresses));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AddressType_Address", Storage="_Addresses", ThisKey="ID", OtherKey="AddressTypeID")]
		public EntitySet<Address> Addresses
		{
			get
			{
				return this._Addresses;
			}
			set
			{
				this._Addresses.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Addresses(Address entity)
		{
			this.SendPropertyChanging();
			entity.AddressType = this;
		}
		
		private void detach_Addresses(Address entity)
		{
			this.SendPropertyChanging();
			entity.AddressType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class BillingType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _Name;
		
		private EntitySet<QuoteSupplement> _QuoteSupplements;
		
		private EntitySet<QuoteStorageItem> _QuoteStorageItem;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public BillingType()
		{
			this._QuoteSupplements = new EntitySet<QuoteSupplement>(new Action<QuoteSupplement>(this.attach_QuoteSupplements), new Action<QuoteSupplement>(this.detach_QuoteSupplements));
			this._QuoteStorageItem = new EntitySet<QuoteStorageItem>(new Action<QuoteStorageItem>(this.attach_QuoteStorageItem), new Action<QuoteStorageItem>(this.detach_QuoteStorageItem));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BillingType_QuoteSupplement", Storage="_QuoteSupplements", ThisKey="ID", OtherKey="BillingTypeID")]
		public EntitySet<QuoteSupplement> QuoteSupplements
		{
			get
			{
				return this._QuoteSupplements;
			}
			set
			{
				this._QuoteSupplements.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BillingType_QuoteStorageItem", Storage="_QuoteStorageItem", ThisKey="ID", OtherKey="BillingTypeID")]
		public EntitySet<QuoteStorageItem> QuoteStorageItem
		{
			get
			{
				return this._QuoteStorageItem;
			}
			set
			{
				this._QuoteStorageItem.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_QuoteSupplements(QuoteSupplement entity)
		{
			this.SendPropertyChanging();
			entity.BillingType = this;
		}
		
		private void detach_QuoteSupplements(QuoteSupplement entity)
		{
			this.SendPropertyChanging();
			entity.BillingType = null;
		}
		
		private void attach_QuoteStorageItem(QuoteStorageItem entity)
		{
			this.SendPropertyChanging();
			entity.BillingType = this;
		}
		
		private void detach_QuoteStorageItem(QuoteStorageItem entity)
		{
			this.SendPropertyChanging();
			entity.BillingType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class Commodity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Nullable<long> _CompanyID;
		
		private string _Name;
		
		private System.Nullable<decimal> _Value;
		
		private string _Serial;
		
		private string _Unit;
		
		private string _Owner;
		
		private string _LastLocation;
		
		private string _LastAddress;
		
		private System.Nullable<double> _Length;
		
		private System.Nullable<double> _Width;
		
		private System.Nullable<double> _Height;
		
		private System.Nullable<double> _Weight;
		
		private System.Nullable<bool> _SizeEstimated;
		
		private System.Nullable<bool> _WeightEstimated;
		
		private string _Notes;
		
		private EntitySet<JobCommodity> _JobCommodities;
		
		private EntitySet<QuoteCommodity> _QuoteCommodities;
		
		private EntityRef<Company> _Company;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnCompanyIDChanging(System.Nullable<long> value);
    partial void OnCompanyIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnValueChanging(System.Nullable<decimal> value);
    partial void OnValueChanged();
    partial void OnSerialChanging(string value);
    partial void OnSerialChanged();
    partial void OnUnitChanging(string value);
    partial void OnUnitChanged();
    partial void OnOwnerChanging(string value);
    partial void OnOwnerChanged();
    partial void OnLastLocationChanging(string value);
    partial void OnLastLocationChanged();
    partial void OnLastAddressChanging(string value);
    partial void OnLastAddressChanged();
    partial void OnLengthChanging(System.Nullable<double> value);
    partial void OnLengthChanged();
    partial void OnWidthChanging(System.Nullable<double> value);
    partial void OnWidthChanged();
    partial void OnHeightChanging(System.Nullable<double> value);
    partial void OnHeightChanged();
    partial void OnWeightChanging(System.Nullable<double> value);
    partial void OnWeightChanged();
    partial void OnSizeEstimatedChanging(System.Nullable<bool> value);
    partial void OnSizeEstimatedChanged();
    partial void OnWeightEstimatedChanging(System.Nullable<bool> value);
    partial void OnWeightEstimatedChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    #endregion
		
		public Commodity()
		{
			this._JobCommodities = new EntitySet<JobCommodity>(new Action<JobCommodity>(this.attach_JobCommodities), new Action<JobCommodity>(this.detach_JobCommodities));
			this._QuoteCommodities = new EntitySet<QuoteCommodity>(new Action<QuoteCommodity>(this.attach_QuoteCommodities), new Action<QuoteCommodity>(this.detach_QuoteCommodities));
			this._Company = default(EntityRef<Company>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID")]
		public System.Nullable<long> CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					if (this._Company.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value")]
		public System.Nullable<decimal> Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Serial")]
		public string Serial
		{
			get
			{
				return this._Serial;
			}
			set
			{
				if ((this._Serial != value))
				{
					this.OnSerialChanging(value);
					this.SendPropertyChanging();
					this._Serial = value;
					this.SendPropertyChanged("Serial");
					this.OnSerialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unit")]
		public string Unit
		{
			get
			{
				return this._Unit;
			}
			set
			{
				if ((this._Unit != value))
				{
					this.OnUnitChanging(value);
					this.SendPropertyChanging();
					this._Unit = value;
					this.SendPropertyChanged("Unit");
					this.OnUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Owner")]
		public string Owner
		{
			get
			{
				return this._Owner;
			}
			set
			{
				if ((this._Owner != value))
				{
					this.OnOwnerChanging(value);
					this.SendPropertyChanging();
					this._Owner = value;
					this.SendPropertyChanged("Owner");
					this.OnOwnerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLocation")]
		public string LastLocation
		{
			get
			{
				return this._LastLocation;
			}
			set
			{
				if ((this._LastLocation != value))
				{
					this.OnLastLocationChanging(value);
					this.SendPropertyChanging();
					this._LastLocation = value;
					this.SendPropertyChanged("LastLocation");
					this.OnLastLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastAddress")]
		public string LastAddress
		{
			get
			{
				return this._LastAddress;
			}
			set
			{
				if ((this._LastAddress != value))
				{
					this.OnLastAddressChanging(value);
					this.SendPropertyChanging();
					this._LastAddress = value;
					this.SendPropertyChanged("LastAddress");
					this.OnLastAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Length")]
		public System.Nullable<double> Length
		{
			get
			{
				return this._Length;
			}
			set
			{
				if ((this._Length != value))
				{
					this.OnLengthChanging(value);
					this.SendPropertyChanging();
					this._Length = value;
					this.SendPropertyChanged("Length");
					this.OnLengthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Width")]
		public System.Nullable<double> Width
		{
			get
			{
				return this._Width;
			}
			set
			{
				if ((this._Width != value))
				{
					this.OnWidthChanging(value);
					this.SendPropertyChanging();
					this._Width = value;
					this.SendPropertyChanged("Width");
					this.OnWidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Height")]
		public System.Nullable<double> Height
		{
			get
			{
				return this._Height;
			}
			set
			{
				if ((this._Height != value))
				{
					this.OnHeightChanging(value);
					this.SendPropertyChanging();
					this._Height = value;
					this.SendPropertyChanged("Height");
					this.OnHeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight")]
		public System.Nullable<double> Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this.OnWeightChanging(value);
					this.SendPropertyChanging();
					this._Weight = value;
					this.SendPropertyChanged("Weight");
					this.OnWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SizeEstimated")]
		public System.Nullable<bool> SizeEstimated
		{
			get
			{
				return this._SizeEstimated;
			}
			set
			{
				if ((this._SizeEstimated != value))
				{
					this.OnSizeEstimatedChanging(value);
					this.SendPropertyChanging();
					this._SizeEstimated = value;
					this.SendPropertyChanged("SizeEstimated");
					this.OnSizeEstimatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeightEstimated")]
		public System.Nullable<bool> WeightEstimated
		{
			get
			{
				return this._WeightEstimated;
			}
			set
			{
				if ((this._WeightEstimated != value))
				{
					this.OnWeightEstimatedChanging(value);
					this.SendPropertyChanging();
					this._WeightEstimated = value;
					this.SendPropertyChanged("WeightEstimated");
					this.OnWeightEstimatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", UpdateCheck=UpdateCheck.Never)]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Commodity_JobCommodity", Storage="_JobCommodities", ThisKey="ID", OtherKey="OriginalCommodityID")]
		public EntitySet<JobCommodity> JobCommodities
		{
			get
			{
				return this._JobCommodities;
			}
			set
			{
				this._JobCommodities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Commodity_QuoteCommodity", Storage="_QuoteCommodities", ThisKey="ID", OtherKey="OriginalCommodityID")]
		public EntitySet<QuoteCommodity> QuoteCommodities
		{
			get
			{
				return this._QuoteCommodities;
			}
			set
			{
				this._QuoteCommodities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_Commodity", Storage="_Company", ThisKey="CompanyID", OtherKey="ID", IsForeignKey=true)]
		public Company Company
		{
			get
			{
				return this._Company.Entity;
			}
			set
			{
				Company previousValue = this._Company.Entity;
				if (((previousValue != value) 
							|| (this._Company.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Company.Entity = null;
						previousValue.Commodities.Remove(this);
					}
					this._Company.Entity = value;
					if ((value != null))
					{
						value.Commodities.Add(this);
						this._CompanyID = value.ID;
					}
					else
					{
						this._CompanyID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Company");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_JobCommodities(JobCommodity entity)
		{
			this.SendPropertyChanging();
			entity.OriginalCommodity = this;
		}
		
		private void detach_JobCommodities(JobCommodity entity)
		{
			this.SendPropertyChanging();
			entity.OriginalCommodity = null;
		}
		
		private void attach_QuoteCommodities(QuoteCommodity entity)
		{
			this.SendPropertyChanging();
			entity.OriginalCommodity = this;
		}
		
		private void detach_QuoteCommodities(QuoteCommodity entity)
		{
			this.SendPropertyChanging();
			entity.OriginalCommodity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class Company : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Nullable<long> _PriorityLevelID;
		
		private System.Nullable<long> _CustomerTypeID;
		
		private string _Name;
		
		private string _OperatingAs;
		
		private System.Nullable<decimal> _AvailableCredit;
		
		private string _AccPacVendorCode;
		
		private System.Nullable<bool> _EquifaxComplete;
		
		private string _Notes;
		
		private System.Nullable<decimal> _RateAdjustment;
		
		private System.Nullable<bool> _IsVisible;
		
		private EntitySet<Address> _Addresses;
		
		private EntitySet<Commodity> _Commodities;
		
		private EntitySet<Job> _Jobs;
		
		private EntitySet<Job> _CareOfJobs;
		
		private EntitySet<Quote> _Quotes;
		
		private EntitySet<Quote> _CareOfQuotes;
		
		private EntitySet<Service> _Services;
		
		private EntitySet<ThirdPartyService> _ThirdPartyServices;
		
		private EntityRef<CompanyPriorityLevel> _CompanyPriorityLevel;
		
		private EntityRef<CustomerType> _CustomerType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnPriorityLevelIDChanging(System.Nullable<long> value);
    partial void OnPriorityLevelIDChanged();
    partial void OnCustomerTypeIDChanging(System.Nullable<long> value);
    partial void OnCustomerTypeIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnOperatingAsChanging(string value);
    partial void OnOperatingAsChanged();
    partial void OnAvailableCreditChanging(System.Nullable<decimal> value);
    partial void OnAvailableCreditChanged();
    partial void OnAccPacVendorCodeChanging(string value);
    partial void OnAccPacVendorCodeChanged();
    partial void OnEquifaxCompleteChanging(System.Nullable<bool> value);
    partial void OnEquifaxCompleteChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnRateAdjustmentChanging(System.Nullable<decimal> value);
    partial void OnRateAdjustmentChanged();
    partial void OnIsVisibleChanging(System.Nullable<bool> value);
    partial void OnIsVisibleChanged();
    #endregion
		
		public Company()
		{
			this._Addresses = new EntitySet<Address>(new Action<Address>(this.attach_Addresses), new Action<Address>(this.detach_Addresses));
			this._Commodities = new EntitySet<Commodity>(new Action<Commodity>(this.attach_Commodities), new Action<Commodity>(this.detach_Commodities));
			this._Jobs = new EntitySet<Job>(new Action<Job>(this.attach_Jobs), new Action<Job>(this.detach_Jobs));
			this._CareOfJobs = new EntitySet<Job>(new Action<Job>(this.attach_CareOfJobs), new Action<Job>(this.detach_CareOfJobs));
			this._Quotes = new EntitySet<Quote>(new Action<Quote>(this.attach_Quotes), new Action<Quote>(this.detach_Quotes));
			this._CareOfQuotes = new EntitySet<Quote>(new Action<Quote>(this.attach_CareOfQuotes), new Action<Quote>(this.detach_CareOfQuotes));
			this._Services = new EntitySet<Service>(new Action<Service>(this.attach_Services), new Action<Service>(this.detach_Services));
			this._ThirdPartyServices = new EntitySet<ThirdPartyService>(new Action<ThirdPartyService>(this.attach_ThirdPartyServices), new Action<ThirdPartyService>(this.detach_ThirdPartyServices));
			this._CompanyPriorityLevel = default(EntityRef<CompanyPriorityLevel>);
			this._CustomerType = default(EntityRef<CustomerType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriorityLevelID")]
		public System.Nullable<long> PriorityLevelID
		{
			get
			{
				return this._PriorityLevelID;
			}
			set
			{
				if ((this._PriorityLevelID != value))
				{
					if (this._CompanyPriorityLevel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPriorityLevelIDChanging(value);
					this.SendPropertyChanging();
					this._PriorityLevelID = value;
					this.SendPropertyChanged("PriorityLevelID");
					this.OnPriorityLevelIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerTypeID")]
		public System.Nullable<long> CustomerTypeID
		{
			get
			{
				return this._CustomerTypeID;
			}
			set
			{
				if ((this._CustomerTypeID != value))
				{
					if (this._CustomerType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerTypeIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerTypeID = value;
					this.SendPropertyChanged("CustomerTypeID");
					this.OnCustomerTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperatingAs")]
		public string OperatingAs
		{
			get
			{
				return this._OperatingAs;
			}
			set
			{
				if ((this._OperatingAs != value))
				{
					this.OnOperatingAsChanging(value);
					this.SendPropertyChanging();
					this._OperatingAs = value;
					this.SendPropertyChanged("OperatingAs");
					this.OnOperatingAsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AvailableCredit")]
		public System.Nullable<decimal> AvailableCredit
		{
			get
			{
				return this._AvailableCredit;
			}
			set
			{
				if ((this._AvailableCredit != value))
				{
					this.OnAvailableCreditChanging(value);
					this.SendPropertyChanging();
					this._AvailableCredit = value;
					this.SendPropertyChanged("AvailableCredit");
					this.OnAvailableCreditChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccPacVendorCode")]
		public string AccPacVendorCode
		{
			get
			{
				return this._AccPacVendorCode;
			}
			set
			{
				if ((this._AccPacVendorCode != value))
				{
					this.OnAccPacVendorCodeChanging(value);
					this.SendPropertyChanging();
					this._AccPacVendorCode = value;
					this.SendPropertyChanged("AccPacVendorCode");
					this.OnAccPacVendorCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EquifaxComplete")]
		public System.Nullable<bool> EquifaxComplete
		{
			get
			{
				return this._EquifaxComplete;
			}
			set
			{
				if ((this._EquifaxComplete != value))
				{
					this.OnEquifaxCompleteChanging(value);
					this.SendPropertyChanging();
					this._EquifaxComplete = value;
					this.SendPropertyChanged("EquifaxComplete");
					this.OnEquifaxCompleteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", UpdateCheck=UpdateCheck.Never)]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RateAdjustment")]
		public System.Nullable<decimal> RateAdjustment
		{
			get
			{
				return this._RateAdjustment;
			}
			set
			{
				if ((this._RateAdjustment != value))
				{
					this.OnRateAdjustmentChanging(value);
					this.SendPropertyChanging();
					this._RateAdjustment = value;
					this.SendPropertyChanged("RateAdjustment");
					this.OnRateAdjustmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsVisible")]
		public System.Nullable<bool> IsVisible
		{
			get
			{
				return this._IsVisible;
			}
			set
			{
				if ((this._IsVisible != value))
				{
					this.OnIsVisibleChanging(value);
					this.SendPropertyChanging();
					this._IsVisible = value;
					this.SendPropertyChanged("IsVisible");
					this.OnIsVisibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_Address", Storage="_Addresses", ThisKey="ID", OtherKey="CompanyID")]
		public EntitySet<Address> Addresses
		{
			get
			{
				return this._Addresses;
			}
			set
			{
				this._Addresses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_Commodity", Storage="_Commodities", ThisKey="ID", OtherKey="CompanyID")]
		public EntitySet<Commodity> Commodities
		{
			get
			{
				return this._Commodities;
			}
			set
			{
				this._Commodities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_Job", Storage="_Jobs", ThisKey="ID", OtherKey="CompanyID")]
		public EntitySet<Job> Jobs
		{
			get
			{
				return this._Jobs;
			}
			set
			{
				this._Jobs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_Job1", Storage="_CareOfJobs", ThisKey="ID", OtherKey="CareOfCompanyID")]
		public EntitySet<Job> CareOfJobs
		{
			get
			{
				return this._CareOfJobs;
			}
			set
			{
				this._CareOfJobs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_Quote", Storage="_Quotes", ThisKey="ID", OtherKey="CompanyID")]
		public EntitySet<Quote> Quotes
		{
			get
			{
				return this._Quotes;
			}
			set
			{
				this._Quotes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_Quote1", Storage="_CareOfQuotes", ThisKey="ID", OtherKey="CareOfCompanyID")]
		public EntitySet<Quote> CareOfQuotes
		{
			get
			{
				return this._CareOfQuotes;
			}
			set
			{
				this._CareOfQuotes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_Service", Storage="_Services", ThisKey="ID", OtherKey="CompanyID")]
		public EntitySet<Service> Services
		{
			get
			{
				return this._Services;
			}
			set
			{
				this._Services.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_ThirdPartyService", Storage="_ThirdPartyServices", ThisKey="ID", OtherKey="CompanyID")]
		public EntitySet<ThirdPartyService> ThirdPartyServices
		{
			get
			{
				return this._ThirdPartyServices;
			}
			set
			{
				this._ThirdPartyServices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CompanyPriorityLevel_Company", Storage="_CompanyPriorityLevel", ThisKey="PriorityLevelID", OtherKey="ID", IsForeignKey=true)]
		public CompanyPriorityLevel CompanyPriorityLevel
		{
			get
			{
				return this._CompanyPriorityLevel.Entity;
			}
			set
			{
				CompanyPriorityLevel previousValue = this._CompanyPriorityLevel.Entity;
				if (((previousValue != value) 
							|| (this._CompanyPriorityLevel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CompanyPriorityLevel.Entity = null;
						previousValue.Companies.Remove(this);
					}
					this._CompanyPriorityLevel.Entity = value;
					if ((value != null))
					{
						value.Companies.Add(this);
						this._PriorityLevelID = value.ID;
					}
					else
					{
						this._PriorityLevelID = default(Nullable<long>);
					}
					this.SendPropertyChanged("CompanyPriorityLevel");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerType_Company", Storage="_CustomerType", ThisKey="CustomerTypeID", OtherKey="ID", IsForeignKey=true)]
		public CustomerType CustomerType
		{
			get
			{
				return this._CustomerType.Entity;
			}
			set
			{
				CustomerType previousValue = this._CustomerType.Entity;
				if (((previousValue != value) 
							|| (this._CustomerType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CustomerType.Entity = null;
						previousValue.Companies.Remove(this);
					}
					this._CustomerType.Entity = value;
					if ((value != null))
					{
						value.Companies.Add(this);
						this._CustomerTypeID = value.ID;
					}
					else
					{
						this._CustomerTypeID = default(Nullable<long>);
					}
					this.SendPropertyChanged("CustomerType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Addresses(Address entity)
		{
			this.SendPropertyChanging();
			entity.Company = this;
		}
		
		private void detach_Addresses(Address entity)
		{
			this.SendPropertyChanging();
			entity.Company = null;
		}
		
		private void attach_Commodities(Commodity entity)
		{
			this.SendPropertyChanging();
			entity.Company = this;
		}
		
		private void detach_Commodities(Commodity entity)
		{
			this.SendPropertyChanging();
			entity.Company = null;
		}
		
		private void attach_Jobs(Job entity)
		{
			this.SendPropertyChanging();
			entity.Company = this;
		}
		
		private void detach_Jobs(Job entity)
		{
			this.SendPropertyChanging();
			entity.Company = null;
		}
		
		private void attach_CareOfJobs(Job entity)
		{
			this.SendPropertyChanging();
			entity.CareOfCompany = this;
		}
		
		private void detach_CareOfJobs(Job entity)
		{
			this.SendPropertyChanging();
			entity.CareOfCompany = null;
		}
		
		private void attach_Quotes(Quote entity)
		{
			this.SendPropertyChanging();
			entity.Company = this;
		}
		
		private void detach_Quotes(Quote entity)
		{
			this.SendPropertyChanging();
			entity.Company = null;
		}
		
		private void attach_CareOfQuotes(Quote entity)
		{
			this.SendPropertyChanging();
			entity.CareOfCompany = this;
		}
		
		private void detach_CareOfQuotes(Quote entity)
		{
			this.SendPropertyChanging();
			entity.CareOfCompany = null;
		}
		
		private void attach_Services(Service entity)
		{
			this.SendPropertyChanging();
			entity.Company = this;
		}
		
		private void detach_Services(Service entity)
		{
			this.SendPropertyChanging();
			entity.Company = null;
		}
		
		private void attach_ThirdPartyServices(ThirdPartyService entity)
		{
			this.SendPropertyChanging();
			entity.Company = this;
		}
		
		private void detach_ThirdPartyServices(ThirdPartyService entity)
		{
			this.SendPropertyChanging();
			entity.Company = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class CompanyPriorityLevel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _Name;
		
		private EntitySet<Company> _Companies;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public CompanyPriorityLevel()
		{
			this._Companies = new EntitySet<Company>(new Action<Company>(this.attach_Companies), new Action<Company>(this.detach_Companies));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CompanyPriorityLevel_Company", Storage="_Companies", ThisKey="ID", OtherKey="PriorityLevelID")]
		public EntitySet<Company> Companies
		{
			get
			{
				return this._Companies;
			}
			set
			{
				this._Companies.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Companies(Company entity)
		{
			this.SendPropertyChanging();
			entity.CompanyPriorityLevel = this;
		}
		
		private void detach_Companies(Company entity)
		{
			this.SendPropertyChanging();
			entity.CompanyPriorityLevel = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class Contact : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Nullable<long> _AddressID;
		
		private System.Nullable<long> _ContactMethodID;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _Email;
		
		private string _PrimaryPhone;
		
		private string _SecondaryPhone;
		
		private string _Fax;
		
		private string _Notes;
		
		private EntitySet<ContactRoles> _ContactRoles;
		
		private EntitySet<Quote> _Quotes;
		
		private EntitySet<ThirdPartyService> _ThirdPartyServices;
		
		private EntitySet<Invoice> _Invoices;
		
		private EntityRef<Address> _Address;
		
		private EntityRef<ContactMethod> _PreferedContactMethod;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnAddressIDChanging(System.Nullable<long> value);
    partial void OnAddressIDChanged();
    partial void OnContactMethodIDChanging(System.Nullable<long> value);
    partial void OnContactMethodIDChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPrimaryPhoneChanging(string value);
    partial void OnPrimaryPhoneChanged();
    partial void OnSecondaryPhoneChanging(string value);
    partial void OnSecondaryPhoneChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    #endregion
		
		public Contact()
		{
			this._ContactRoles = new EntitySet<ContactRoles>(new Action<ContactRoles>(this.attach_ContactRoles), new Action<ContactRoles>(this.detach_ContactRoles));
			this._Quotes = new EntitySet<Quote>(new Action<Quote>(this.attach_Quotes), new Action<Quote>(this.detach_Quotes));
			this._ThirdPartyServices = new EntitySet<ThirdPartyService>(new Action<ThirdPartyService>(this.attach_ThirdPartyServices), new Action<ThirdPartyService>(this.detach_ThirdPartyServices));
			this._Invoices = new EntitySet<Invoice>(new Action<Invoice>(this.attach_Invoices), new Action<Invoice>(this.detach_Invoices));
			this._Address = default(EntityRef<Address>);
			this._PreferedContactMethod = default(EntityRef<ContactMethod>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressID")]
		public System.Nullable<long> AddressID
		{
			get
			{
				return this._AddressID;
			}
			set
			{
				if ((this._AddressID != value))
				{
					if (this._Address.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAddressIDChanging(value);
					this.SendPropertyChanging();
					this._AddressID = value;
					this.SendPropertyChanged("AddressID");
					this.OnAddressIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactMethodID")]
		public System.Nullable<long> ContactMethodID
		{
			get
			{
				return this._ContactMethodID;
			}
			set
			{
				if ((this._ContactMethodID != value))
				{
					if (this._PreferedContactMethod.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContactMethodIDChanging(value);
					this.SendPropertyChanging();
					this._ContactMethodID = value;
					this.SendPropertyChanged("ContactMethodID");
					this.OnContactMethodIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrimaryPhone")]
		public string PrimaryPhone
		{
			get
			{
				return this._PrimaryPhone;
			}
			set
			{
				if ((this._PrimaryPhone != value))
				{
					this.OnPrimaryPhoneChanging(value);
					this.SendPropertyChanging();
					this._PrimaryPhone = value;
					this.SendPropertyChanged("PrimaryPhone");
					this.OnPrimaryPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecondaryPhone")]
		public string SecondaryPhone
		{
			get
			{
				return this._SecondaryPhone;
			}
			set
			{
				if ((this._SecondaryPhone != value))
				{
					this.OnSecondaryPhoneChanging(value);
					this.SendPropertyChanging();
					this._SecondaryPhone = value;
					this.SendPropertyChanged("SecondaryPhone");
					this.OnSecondaryPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fax")]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", UpdateCheck=UpdateCheck.Never)]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contact_ContactRoles", Storage="_ContactRoles", ThisKey="ID", OtherKey="ContactID")]
		public EntitySet<ContactRoles> ContactRoles
		{
			get
			{
				return this._ContactRoles;
			}
			set
			{
				this._ContactRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contact_Quote", Storage="_Quotes", ThisKey="ID", OtherKey="ContactID")]
		public EntitySet<Quote> Quotes
		{
			get
			{
				return this._Quotes;
			}
			set
			{
				this._Quotes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contact_ThirdPartyService", Storage="_ThirdPartyServices", ThisKey="ID", OtherKey="ContactID")]
		public EntitySet<ThirdPartyService> ThirdPartyServices
		{
			get
			{
				return this._ThirdPartyServices;
			}
			set
			{
				this._ThirdPartyServices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contact_Invoice", Storage="_Invoices", ThisKey="ID", OtherKey="ContactID")]
		public EntitySet<Invoice> Invoices
		{
			get
			{
				return this._Invoices;
			}
			set
			{
				this._Invoices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_Contact", Storage="_Address", ThisKey="AddressID", OtherKey="ID", IsForeignKey=true)]
		public Address Address
		{
			get
			{
				return this._Address.Entity;
			}
			set
			{
				Address previousValue = this._Address.Entity;
				if (((previousValue != value) 
							|| (this._Address.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Address.Entity = null;
						previousValue.Contacts.Remove(this);
					}
					this._Address.Entity = value;
					if ((value != null))
					{
						value.Contacts.Add(this);
						this._AddressID = value.ID;
					}
					else
					{
						this._AddressID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Address");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ContactMethod_Contact", Storage="_PreferedContactMethod", ThisKey="ContactMethodID", OtherKey="ID", IsForeignKey=true)]
		public ContactMethod PreferedContactMethod
		{
			get
			{
				return this._PreferedContactMethod.Entity;
			}
			set
			{
				ContactMethod previousValue = this._PreferedContactMethod.Entity;
				if (((previousValue != value) 
							|| (this._PreferedContactMethod.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PreferedContactMethod.Entity = null;
						previousValue.Contacts.Remove(this);
					}
					this._PreferedContactMethod.Entity = value;
					if ((value != null))
					{
						value.Contacts.Add(this);
						this._ContactMethodID = value.ID;
					}
					else
					{
						this._ContactMethodID = default(Nullable<long>);
					}
					this.SendPropertyChanged("PreferedContactMethod");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ContactRoles(ContactRoles entity)
		{
			this.SendPropertyChanging();
			entity.Contact = this;
		}
		
		private void detach_ContactRoles(ContactRoles entity)
		{
			this.SendPropertyChanging();
			entity.Contact = null;
		}
		
		private void attach_Quotes(Quote entity)
		{
			this.SendPropertyChanging();
			entity.Contact = this;
		}
		
		private void detach_Quotes(Quote entity)
		{
			this.SendPropertyChanging();
			entity.Contact = null;
		}
		
		private void attach_ThirdPartyServices(ThirdPartyService entity)
		{
			this.SendPropertyChanging();
			entity.Contact = this;
		}
		
		private void detach_ThirdPartyServices(ThirdPartyService entity)
		{
			this.SendPropertyChanging();
			entity.Contact = null;
		}
		
		private void attach_Invoices(Invoice entity)
		{
			this.SendPropertyChanging();
			entity.Contact = this;
		}
		
		private void detach_Invoices(Invoice entity)
		{
			this.SendPropertyChanging();
			entity.Contact = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class ContactRoles : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Nullable<long> _ContactID;
		
		private System.Nullable<long> _ContactTypeID;
		
		private EntityRef<Contact> _Contact;
		
		private EntityRef<ContactType> _ContactType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnContactIDChanging(System.Nullable<long> value);
    partial void OnContactIDChanged();
    partial void OnContactTypeIDChanging(System.Nullable<long> value);
    partial void OnContactTypeIDChanged();
    #endregion
		
		public ContactRoles()
		{
			this._Contact = default(EntityRef<Contact>);
			this._ContactType = default(EntityRef<ContactType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactID")]
		public System.Nullable<long> ContactID
		{
			get
			{
				return this._ContactID;
			}
			set
			{
				if ((this._ContactID != value))
				{
					if (this._Contact.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContactIDChanging(value);
					this.SendPropertyChanging();
					this._ContactID = value;
					this.SendPropertyChanged("ContactID");
					this.OnContactIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactTypeID")]
		public System.Nullable<long> ContactTypeID
		{
			get
			{
				return this._ContactTypeID;
			}
			set
			{
				if ((this._ContactTypeID != value))
				{
					if (this._ContactType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContactTypeIDChanging(value);
					this.SendPropertyChanging();
					this._ContactTypeID = value;
					this.SendPropertyChanged("ContactTypeID");
					this.OnContactTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contact_ContactRoles", Storage="_Contact", ThisKey="ContactID", OtherKey="ID", IsForeignKey=true)]
		public Contact Contact
		{
			get
			{
				return this._Contact.Entity;
			}
			set
			{
				Contact previousValue = this._Contact.Entity;
				if (((previousValue != value) 
							|| (this._Contact.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Contact.Entity = null;
						previousValue.ContactRoles.Remove(this);
					}
					this._Contact.Entity = value;
					if ((value != null))
					{
						value.ContactRoles.Add(this);
						this._ContactID = value.ID;
					}
					else
					{
						this._ContactID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Contact");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ContactType_ContactRoles", Storage="_ContactType", ThisKey="ContactTypeID", OtherKey="ID", IsForeignKey=true)]
		public ContactType ContactType
		{
			get
			{
				return this._ContactType.Entity;
			}
			set
			{
				ContactType previousValue = this._ContactType.Entity;
				if (((previousValue != value) 
							|| (this._ContactType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ContactType.Entity = null;
						previousValue.ContactRoles.Remove(this);
					}
					this._ContactType.Entity = value;
					if ((value != null))
					{
						value.ContactRoles.Add(this);
						this._ContactTypeID = value.ID;
					}
					else
					{
						this._ContactTypeID = default(Nullable<long>);
					}
					this.SendPropertyChanged("ContactType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class ContactType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _Name;
		
		private EntitySet<ContactRoles> _ContactRoles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public ContactType()
		{
			this._ContactRoles = new EntitySet<ContactRoles>(new Action<ContactRoles>(this.attach_ContactRoles), new Action<ContactRoles>(this.detach_ContactRoles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ContactType_ContactRoles", Storage="_ContactRoles", ThisKey="ID", OtherKey="ContactTypeID")]
		public EntitySet<ContactRoles> ContactRoles
		{
			get
			{
				return this._ContactRoles;
			}
			set
			{
				this._ContactRoles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ContactRoles(ContactRoles entity)
		{
			this.SendPropertyChanging();
			entity.ContactType = this;
		}
		
		private void detach_ContactRoles(ContactRoles entity)
		{
			this.SendPropertyChanging();
			entity.ContactType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class Country : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _Name;
		
		private EntitySet<ProvincesAndState> _ProvincesAndStates;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public Country()
		{
			this._ProvincesAndStates = new EntitySet<ProvincesAndState>(new Action<ProvincesAndState>(this.attach_ProvincesAndStates), new Action<ProvincesAndState>(this.detach_ProvincesAndStates));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Country_ProvincesAndState", Storage="_ProvincesAndStates", ThisKey="ID", OtherKey="CountryID")]
		public EntitySet<ProvincesAndState> ProvincesAndStates
		{
			get
			{
				return this._ProvincesAndStates;
			}
			set
			{
				this._ProvincesAndStates.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProvincesAndStates(ProvincesAndState entity)
		{
			this.SendPropertyChanging();
			entity.Country = this;
		}
		
		private void detach_ProvincesAndStates(ProvincesAndState entity)
		{
			this.SendPropertyChanging();
			entity.Country = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class Employee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _Phone;
		
		private string _Mobile;
		
		private System.Nullable<bool> _IsAvailable;
		
		private System.Nullable<bool> _IsSupervisor;
		
		private System.Nullable<bool> _IsSingerStaff;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private string _Responsibilities;
		
		private string _Notes;
		
		private string _Email;
		
		private EntitySet<Job> _Jobs;
		
		private EntitySet<Quote> _Quotes;
		
		private EntitySet<Equipment> _Equipments;
		
		private EntitySet<Dispatch> _Dispatches;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnMobileChanging(string value);
    partial void OnMobileChanged();
    partial void OnIsAvailableChanging(System.Nullable<bool> value);
    partial void OnIsAvailableChanged();
    partial void OnIsSupervisorChanging(System.Nullable<bool> value);
    partial void OnIsSupervisorChanged();
    partial void OnIsSingerStaffChanging(System.Nullable<bool> value);
    partial void OnIsSingerStaffChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnResponsibilitiesChanging(string value);
    partial void OnResponsibilitiesChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    #endregion
		
		public Employee()
		{
			this._Jobs = new EntitySet<Job>(new Action<Job>(this.attach_Jobs), new Action<Job>(this.detach_Jobs));
			this._Quotes = new EntitySet<Quote>(new Action<Quote>(this.attach_Quotes), new Action<Quote>(this.detach_Quotes));
			this._Equipments = new EntitySet<Equipment>(new Action<Equipment>(this.attach_Equipments), new Action<Equipment>(this.detach_Equipments));
			this._Dispatches = new EntitySet<Dispatch>(new Action<Dispatch>(this.attach_Dispatches), new Action<Dispatch>(this.detach_Dispatches));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile")]
		public string Mobile
		{
			get
			{
				return this._Mobile;
			}
			set
			{
				if ((this._Mobile != value))
				{
					this.OnMobileChanging(value);
					this.SendPropertyChanging();
					this._Mobile = value;
					this.SendPropertyChanged("Mobile");
					this.OnMobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAvailable")]
		public System.Nullable<bool> IsAvailable
		{
			get
			{
				return this._IsAvailable;
			}
			set
			{
				if ((this._IsAvailable != value))
				{
					this.OnIsAvailableChanging(value);
					this.SendPropertyChanging();
					this._IsAvailable = value;
					this.SendPropertyChanged("IsAvailable");
					this.OnIsAvailableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSupervisor")]
		public System.Nullable<bool> IsSupervisor
		{
			get
			{
				return this._IsSupervisor;
			}
			set
			{
				if ((this._IsSupervisor != value))
				{
					this.OnIsSupervisorChanging(value);
					this.SendPropertyChanging();
					this._IsSupervisor = value;
					this.SendPropertyChanged("IsSupervisor");
					this.OnIsSupervisorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSingerStaff")]
		public System.Nullable<bool> IsSingerStaff
		{
			get
			{
				return this._IsSingerStaff;
			}
			set
			{
				if ((this._IsSingerStaff != value))
				{
					this.OnIsSingerStaffChanging(value);
					this.SendPropertyChanging();
					this._IsSingerStaff = value;
					this.SendPropertyChanged("IsSingerStaff");
					this.OnIsSingerStaffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Responsibilities")]
		public string Responsibilities
		{
			get
			{
				return this._Responsibilities;
			}
			set
			{
				if ((this._Responsibilities != value))
				{
					this.OnResponsibilitiesChanging(value);
					this.SendPropertyChanging();
					this._Responsibilities = value;
					this.SendPropertyChanged("Responsibilities");
					this.OnResponsibilitiesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", UpdateCheck=UpdateCheck.Never)]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Job", Storage="_Jobs", ThisKey="ID", OtherKey="EmployeeID")]
		public EntitySet<Job> Jobs
		{
			get
			{
				return this._Jobs;
			}
			set
			{
				this._Jobs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Quote", Storage="_Quotes", ThisKey="ID", OtherKey="EmployeeID")]
		public EntitySet<Quote> Quotes
		{
			get
			{
				return this._Quotes;
			}
			set
			{
				this._Quotes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Equipment", Storage="_Equipments", ThisKey="ID", OtherKey="DefaultDriverID")]
		public EntitySet<Equipment> Equipments
		{
			get
			{
				return this._Equipments;
			}
			set
			{
				this._Equipments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Dispatch", Storage="_Dispatches", ThisKey="ID", OtherKey="EmployeeID")]
		public EntitySet<Dispatch> Dispatches
		{
			get
			{
				return this._Dispatches;
			}
			set
			{
				this._Dispatches.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Jobs(Job entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_Jobs(Job entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void attach_Quotes(Quote entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_Quotes(Quote entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void attach_Equipments(Equipment entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_Equipments(Equipment entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void attach_Dispatches(Dispatch entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_Dispatches(Dispatch entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class EquipmentType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _Prefix;
		
		private string _Name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnPrefixChanging(string value);
    partial void OnPrefixChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public EquipmentType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prefix")]
		public string Prefix
		{
			get
			{
				return this._Prefix;
			}
			set
			{
				if ((this._Prefix != value))
				{
					this.OnPrefixChanging(value);
					this.SendPropertyChanging();
					this._Prefix = value;
					this.SendPropertyChanged("Prefix");
					this.OnPrefixChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class JobCommodity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Nullable<long> _JobID;
		
		private System.Nullable<long> _LoadID;
		
		private System.Nullable<long> _OriginalCommodityID;
		
		private string _Name;
		
		private System.Nullable<decimal> _Value;
		
		private string _Serial;
		
		private string _Unit;
		
		private string _Owner;
		
		private string _LastLocation;
		
		private string _LastAddress;
		
		private System.Nullable<double> _Length;
		
		private System.Nullable<double> _Width;
		
		private System.Nullable<double> _Height;
		
		private System.Nullable<double> _Weight;
		
		private System.Nullable<bool> _SizeEstimated;
		
		private System.Nullable<bool> _WeightEstimated;
		
		private System.Nullable<decimal> _Cost;
		
		private string _LoadSiteName;
		
		private string _LoadAddress;
		
		private string _LoadBy;
		
		private System.Nullable<long> _LoadMethodID;
		
		private System.Nullable<System.DateTime> _LoadDate;
		
		private string _LoadInstructions;
		
		private string _LoadRoute;
		
		private string _UnloadSiteName;
		
		private string _UnloadAddress;
		
		private string _UnloadBy;
		
		private System.Nullable<long> _UnloadMethodID;
		
		private System.Nullable<System.DateTime> _UnloadDate;
		
		private string _UnloadInstructions;
		
		private string _UnloadRoute;
		
		private string _Notes;
		
		private EntityRef<Commodity> _OriginalCommodity;
		
		private EntityRef<Job> _Job;
		
		private EntityRef<Load> _Load;
		
		private EntityRef<LoadUnloadMethod> _LoadMethod;
		
		private EntityRef<LoadUnloadMethod> _UnloadMethod;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnJobIDChanging(System.Nullable<long> value);
    partial void OnJobIDChanged();
    partial void OnLoadIDChanging(System.Nullable<long> value);
    partial void OnLoadIDChanged();
    partial void OnOriginalCommodityIDChanging(System.Nullable<long> value);
    partial void OnOriginalCommodityIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnValueChanging(System.Nullable<decimal> value);
    partial void OnValueChanged();
    partial void OnSerialChanging(string value);
    partial void OnSerialChanged();
    partial void OnUnitChanging(string value);
    partial void OnUnitChanged();
    partial void OnOwnerChanging(string value);
    partial void OnOwnerChanged();
    partial void OnLastLocationChanging(string value);
    partial void OnLastLocationChanged();
    partial void OnLastAddressChanging(string value);
    partial void OnLastAddressChanged();
    partial void OnLengthChanging(System.Nullable<double> value);
    partial void OnLengthChanged();
    partial void OnWidthChanging(System.Nullable<double> value);
    partial void OnWidthChanged();
    partial void OnHeightChanging(System.Nullable<double> value);
    partial void OnHeightChanged();
    partial void OnWeightChanging(System.Nullable<double> value);
    partial void OnWeightChanged();
    partial void OnSizeEstimatedChanging(System.Nullable<bool> value);
    partial void OnSizeEstimatedChanged();
    partial void OnWeightEstimatedChanging(System.Nullable<bool> value);
    partial void OnWeightEstimatedChanged();
    partial void OnCostChanging(System.Nullable<decimal> value);
    partial void OnCostChanged();
    partial void OnLoadSiteNameChanging(string value);
    partial void OnLoadSiteNameChanged();
    partial void OnLoadAddressChanging(string value);
    partial void OnLoadAddressChanged();
    partial void OnLoadByChanging(string value);
    partial void OnLoadByChanged();
    partial void OnLoadMethodIDChanging(System.Nullable<long> value);
    partial void OnLoadMethodIDChanged();
    partial void OnLoadDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLoadDateChanged();
    partial void OnLoadInstructionsChanging(string value);
    partial void OnLoadInstructionsChanged();
    partial void OnLoadRouteChanging(string value);
    partial void OnLoadRouteChanged();
    partial void OnUnloadSiteNameChanging(string value);
    partial void OnUnloadSiteNameChanged();
    partial void OnUnloadAddressChanging(string value);
    partial void OnUnloadAddressChanged();
    partial void OnUnloadByChanging(string value);
    partial void OnUnloadByChanged();
    partial void OnUnloadMethodIDChanging(System.Nullable<long> value);
    partial void OnUnloadMethodIDChanged();
    partial void OnUnloadDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUnloadDateChanged();
    partial void OnUnloadInstructionsChanging(string value);
    partial void OnUnloadInstructionsChanged();
    partial void OnUnloadRouteChanging(string value);
    partial void OnUnloadRouteChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    #endregion
		
		public JobCommodity()
		{
			this._OriginalCommodity = default(EntityRef<Commodity>);
			this._Job = default(EntityRef<Job>);
			this._Load = default(EntityRef<Load>);
			this._LoadMethod = default(EntityRef<LoadUnloadMethod>);
			this._UnloadMethod = default(EntityRef<LoadUnloadMethod>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobID")]
		public System.Nullable<long> JobID
		{
			get
			{
				return this._JobID;
			}
			set
			{
				if ((this._JobID != value))
				{
					if (this._Job.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJobIDChanging(value);
					this.SendPropertyChanging();
					this._JobID = value;
					this.SendPropertyChanged("JobID");
					this.OnJobIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoadID")]
		public System.Nullable<long> LoadID
		{
			get
			{
				return this._LoadID;
			}
			set
			{
				if ((this._LoadID != value))
				{
					if (this._Load.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLoadIDChanging(value);
					this.SendPropertyChanging();
					this._LoadID = value;
					this.SendPropertyChanged("LoadID");
					this.OnLoadIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginalCommodityID")]
		public System.Nullable<long> OriginalCommodityID
		{
			get
			{
				return this._OriginalCommodityID;
			}
			set
			{
				if ((this._OriginalCommodityID != value))
				{
					if (this._OriginalCommodity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOriginalCommodityIDChanging(value);
					this.SendPropertyChanging();
					this._OriginalCommodityID = value;
					this.SendPropertyChanged("OriginalCommodityID");
					this.OnOriginalCommodityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value")]
		public System.Nullable<decimal> Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Serial")]
		public string Serial
		{
			get
			{
				return this._Serial;
			}
			set
			{
				if ((this._Serial != value))
				{
					this.OnSerialChanging(value);
					this.SendPropertyChanging();
					this._Serial = value;
					this.SendPropertyChanged("Serial");
					this.OnSerialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unit")]
		public string Unit
		{
			get
			{
				return this._Unit;
			}
			set
			{
				if ((this._Unit != value))
				{
					this.OnUnitChanging(value);
					this.SendPropertyChanging();
					this._Unit = value;
					this.SendPropertyChanged("Unit");
					this.OnUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Owner")]
		public string Owner
		{
			get
			{
				return this._Owner;
			}
			set
			{
				if ((this._Owner != value))
				{
					this.OnOwnerChanging(value);
					this.SendPropertyChanging();
					this._Owner = value;
					this.SendPropertyChanged("Owner");
					this.OnOwnerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLocation")]
		public string LastLocation
		{
			get
			{
				return this._LastLocation;
			}
			set
			{
				if ((this._LastLocation != value))
				{
					this.OnLastLocationChanging(value);
					this.SendPropertyChanging();
					this._LastLocation = value;
					this.SendPropertyChanged("LastLocation");
					this.OnLastLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastAddress")]
		public string LastAddress
		{
			get
			{
				return this._LastAddress;
			}
			set
			{
				if ((this._LastAddress != value))
				{
					this.OnLastAddressChanging(value);
					this.SendPropertyChanging();
					this._LastAddress = value;
					this.SendPropertyChanged("LastAddress");
					this.OnLastAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Length")]
		public System.Nullable<double> Length
		{
			get
			{
				return this._Length;
			}
			set
			{
				if ((this._Length != value))
				{
					this.OnLengthChanging(value);
					this.SendPropertyChanging();
					this._Length = value;
					this.SendPropertyChanged("Length");
					this.OnLengthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Width")]
		public System.Nullable<double> Width
		{
			get
			{
				return this._Width;
			}
			set
			{
				if ((this._Width != value))
				{
					this.OnWidthChanging(value);
					this.SendPropertyChanging();
					this._Width = value;
					this.SendPropertyChanged("Width");
					this.OnWidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Height")]
		public System.Nullable<double> Height
		{
			get
			{
				return this._Height;
			}
			set
			{
				if ((this._Height != value))
				{
					this.OnHeightChanging(value);
					this.SendPropertyChanging();
					this._Height = value;
					this.SendPropertyChanged("Height");
					this.OnHeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight")]
		public System.Nullable<double> Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this.OnWeightChanging(value);
					this.SendPropertyChanging();
					this._Weight = value;
					this.SendPropertyChanged("Weight");
					this.OnWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SizeEstimated")]
		public System.Nullable<bool> SizeEstimated
		{
			get
			{
				return this._SizeEstimated;
			}
			set
			{
				if ((this._SizeEstimated != value))
				{
					this.OnSizeEstimatedChanging(value);
					this.SendPropertyChanging();
					this._SizeEstimated = value;
					this.SendPropertyChanged("SizeEstimated");
					this.OnSizeEstimatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeightEstimated")]
		public System.Nullable<bool> WeightEstimated
		{
			get
			{
				return this._WeightEstimated;
			}
			set
			{
				if ((this._WeightEstimated != value))
				{
					this.OnWeightEstimatedChanging(value);
					this.SendPropertyChanging();
					this._WeightEstimated = value;
					this.SendPropertyChanged("WeightEstimated");
					this.OnWeightEstimatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cost")]
		public System.Nullable<decimal> Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this.OnCostChanging(value);
					this.SendPropertyChanging();
					this._Cost = value;
					this.SendPropertyChanged("Cost");
					this.OnCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoadSiteName")]
		public string LoadSiteName
		{
			get
			{
				return this._LoadSiteName;
			}
			set
			{
				if ((this._LoadSiteName != value))
				{
					this.OnLoadSiteNameChanging(value);
					this.SendPropertyChanging();
					this._LoadSiteName = value;
					this.SendPropertyChanged("LoadSiteName");
					this.OnLoadSiteNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoadAddress")]
		public string LoadAddress
		{
			get
			{
				return this._LoadAddress;
			}
			set
			{
				if ((this._LoadAddress != value))
				{
					this.OnLoadAddressChanging(value);
					this.SendPropertyChanging();
					this._LoadAddress = value;
					this.SendPropertyChanged("LoadAddress");
					this.OnLoadAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoadBy")]
		public string LoadBy
		{
			get
			{
				return this._LoadBy;
			}
			set
			{
				if ((this._LoadBy != value))
				{
					this.OnLoadByChanging(value);
					this.SendPropertyChanging();
					this._LoadBy = value;
					this.SendPropertyChanged("LoadBy");
					this.OnLoadByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoadMethodID")]
		public System.Nullable<long> LoadMethodID
		{
			get
			{
				return this._LoadMethodID;
			}
			set
			{
				if ((this._LoadMethodID != value))
				{
					if (this._LoadMethod.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLoadMethodIDChanging(value);
					this.SendPropertyChanging();
					this._LoadMethodID = value;
					this.SendPropertyChanged("LoadMethodID");
					this.OnLoadMethodIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoadDate")]
		public System.Nullable<System.DateTime> LoadDate
		{
			get
			{
				return this._LoadDate;
			}
			set
			{
				if ((this._LoadDate != value))
				{
					this.OnLoadDateChanging(value);
					this.SendPropertyChanging();
					this._LoadDate = value;
					this.SendPropertyChanged("LoadDate");
					this.OnLoadDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoadInstructions")]
		public string LoadInstructions
		{
			get
			{
				return this._LoadInstructions;
			}
			set
			{
				if ((this._LoadInstructions != value))
				{
					this.OnLoadInstructionsChanging(value);
					this.SendPropertyChanging();
					this._LoadInstructions = value;
					this.SendPropertyChanged("LoadInstructions");
					this.OnLoadInstructionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoadRoute")]
		public string LoadRoute
		{
			get
			{
				return this._LoadRoute;
			}
			set
			{
				if ((this._LoadRoute != value))
				{
					this.OnLoadRouteChanging(value);
					this.SendPropertyChanging();
					this._LoadRoute = value;
					this.SendPropertyChanged("LoadRoute");
					this.OnLoadRouteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnloadSiteName")]
		public string UnloadSiteName
		{
			get
			{
				return this._UnloadSiteName;
			}
			set
			{
				if ((this._UnloadSiteName != value))
				{
					this.OnUnloadSiteNameChanging(value);
					this.SendPropertyChanging();
					this._UnloadSiteName = value;
					this.SendPropertyChanged("UnloadSiteName");
					this.OnUnloadSiteNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnloadAddress")]
		public string UnloadAddress
		{
			get
			{
				return this._UnloadAddress;
			}
			set
			{
				if ((this._UnloadAddress != value))
				{
					this.OnUnloadAddressChanging(value);
					this.SendPropertyChanging();
					this._UnloadAddress = value;
					this.SendPropertyChanged("UnloadAddress");
					this.OnUnloadAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnloadBy")]
		public string UnloadBy
		{
			get
			{
				return this._UnloadBy;
			}
			set
			{
				if ((this._UnloadBy != value))
				{
					this.OnUnloadByChanging(value);
					this.SendPropertyChanging();
					this._UnloadBy = value;
					this.SendPropertyChanged("UnloadBy");
					this.OnUnloadByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnloadMethodID")]
		public System.Nullable<long> UnloadMethodID
		{
			get
			{
				return this._UnloadMethodID;
			}
			set
			{
				if ((this._UnloadMethodID != value))
				{
					if (this._UnloadMethod.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnloadMethodIDChanging(value);
					this.SendPropertyChanging();
					this._UnloadMethodID = value;
					this.SendPropertyChanged("UnloadMethodID");
					this.OnUnloadMethodIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnloadDate")]
		public System.Nullable<System.DateTime> UnloadDate
		{
			get
			{
				return this._UnloadDate;
			}
			set
			{
				if ((this._UnloadDate != value))
				{
					this.OnUnloadDateChanging(value);
					this.SendPropertyChanging();
					this._UnloadDate = value;
					this.SendPropertyChanged("UnloadDate");
					this.OnUnloadDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnloadInstructions")]
		public string UnloadInstructions
		{
			get
			{
				return this._UnloadInstructions;
			}
			set
			{
				if ((this._UnloadInstructions != value))
				{
					this.OnUnloadInstructionsChanging(value);
					this.SendPropertyChanging();
					this._UnloadInstructions = value;
					this.SendPropertyChanged("UnloadInstructions");
					this.OnUnloadInstructionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnloadRoute")]
		public string UnloadRoute
		{
			get
			{
				return this._UnloadRoute;
			}
			set
			{
				if ((this._UnloadRoute != value))
				{
					this.OnUnloadRouteChanging(value);
					this.SendPropertyChanging();
					this._UnloadRoute = value;
					this.SendPropertyChanged("UnloadRoute");
					this.OnUnloadRouteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", UpdateCheck=UpdateCheck.Never)]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Commodity_JobCommodity", Storage="_OriginalCommodity", ThisKey="OriginalCommodityID", OtherKey="ID", IsForeignKey=true)]
		public Commodity OriginalCommodity
		{
			get
			{
				return this._OriginalCommodity.Entity;
			}
			set
			{
				Commodity previousValue = this._OriginalCommodity.Entity;
				if (((previousValue != value) 
							|| (this._OriginalCommodity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OriginalCommodity.Entity = null;
						previousValue.JobCommodities.Remove(this);
					}
					this._OriginalCommodity.Entity = value;
					if ((value != null))
					{
						value.JobCommodities.Add(this);
						this._OriginalCommodityID = value.ID;
					}
					else
					{
						this._OriginalCommodityID = default(Nullable<long>);
					}
					this.SendPropertyChanged("OriginalCommodity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Job_JobCommodity", Storage="_Job", ThisKey="JobID", OtherKey="ID", IsForeignKey=true)]
		public Job Job
		{
			get
			{
				return this._Job.Entity;
			}
			set
			{
				Job previousValue = this._Job.Entity;
				if (((previousValue != value) 
							|| (this._Job.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Job.Entity = null;
						previousValue.JobCommodities.Remove(this);
					}
					this._Job.Entity = value;
					if ((value != null))
					{
						value.JobCommodities.Add(this);
						this._JobID = value.ID;
					}
					else
					{
						this._JobID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Job");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Load_JobCommodity", Storage="_Load", ThisKey="LoadID", OtherKey="ID", IsForeignKey=true)]
		public Load Load
		{
			get
			{
				return this._Load.Entity;
			}
			set
			{
				Load previousValue = this._Load.Entity;
				if (((previousValue != value) 
							|| (this._Load.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Load.Entity = null;
						previousValue.JobCommodities.Remove(this);
					}
					this._Load.Entity = value;
					if ((value != null))
					{
						value.JobCommodities.Add(this);
						this._LoadID = value.ID;
					}
					else
					{
						this._LoadID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Load");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoadUnloadMethod_JobCommodity", Storage="_LoadMethod", ThisKey="LoadMethodID", OtherKey="ID", IsForeignKey=true)]
		public LoadUnloadMethod LoadMethod
		{
			get
			{
				return this._LoadMethod.Entity;
			}
			set
			{
				LoadUnloadMethod previousValue = this._LoadMethod.Entity;
				if (((previousValue != value) 
							|| (this._LoadMethod.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LoadMethod.Entity = null;
						previousValue.LoadedJobCommodities.Remove(this);
					}
					this._LoadMethod.Entity = value;
					if ((value != null))
					{
						value.LoadedJobCommodities.Add(this);
						this._LoadMethodID = value.ID;
					}
					else
					{
						this._LoadMethodID = default(Nullable<long>);
					}
					this.SendPropertyChanged("LoadMethod");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoadUnloadMethod_JobCommodity1", Storage="_UnloadMethod", ThisKey="UnloadMethodID", OtherKey="ID", IsForeignKey=true)]
		public LoadUnloadMethod UnloadMethod
		{
			get
			{
				return this._UnloadMethod.Entity;
			}
			set
			{
				LoadUnloadMethod previousValue = this._UnloadMethod.Entity;
				if (((previousValue != value) 
							|| (this._UnloadMethod.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UnloadMethod.Entity = null;
						previousValue.UnloadedJobCommodities.Remove(this);
					}
					this._UnloadMethod.Entity = value;
					if ((value != null))
					{
						value.UnloadedJobCommodities.Add(this);
						this._UnloadMethodID = value.ID;
					}
					else
					{
						this._UnloadMethodID = default(Nullable<long>);
					}
					this.SendPropertyChanged("UnloadMethod");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class Job : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Nullable<long> _CompanyID;
		
		private System.Nullable<long> _QuoteID;
		
		private System.Nullable<long> _EmployeeID;
		
		private System.Nullable<long> _CareOfCompanyID;
		
		private System.Nullable<long> _StatusTypeID;
		
		private System.Nullable<int> _Number;
		
		private string _Name;
		
		private string _Description;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private EntitySet<JobCommodity> _JobCommodities;
		
		private EntitySet<JobReferenceNumber> _ReferenceNumbers;
		
		private EntitySet<Load> _Loads;
		
		private EntitySet<Permit> _Permits;
		
		private EntitySet<ThirdPartyService> _ThirdPartyServices;
		
		private EntitySet<Dispatch> _Dispatches;
		
		private EntitySet<Invoice> _Invoices;
		
		private EntityRef<Employee> _Employee;
		
		private EntityRef<Company> _Company;
		
		private EntityRef<Company> _CareOfCompany;
		
		private EntityRef<JobStatusType> _JobStatusType;
		
		private EntityRef<Quote> _Quote;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnCompanyIDChanging(System.Nullable<long> value);
    partial void OnCompanyIDChanged();
    partial void OnQuoteIDChanging(System.Nullable<long> value);
    partial void OnQuoteIDChanged();
    partial void OnEmployeeIDChanging(System.Nullable<long> value);
    partial void OnEmployeeIDChanged();
    partial void OnCareOfCompanyIDChanging(System.Nullable<long> value);
    partial void OnCareOfCompanyIDChanged();
    partial void OnStatusTypeIDChanging(System.Nullable<long> value);
    partial void OnStatusTypeIDChanged();
    partial void OnNumberChanging(System.Nullable<int> value);
    partial void OnNumberChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    #endregion
		
		public Job()
		{
			this._JobCommodities = new EntitySet<JobCommodity>(new Action<JobCommodity>(this.attach_JobCommodities), new Action<JobCommodity>(this.detach_JobCommodities));
			this._ReferenceNumbers = new EntitySet<JobReferenceNumber>(new Action<JobReferenceNumber>(this.attach_ReferenceNumbers), new Action<JobReferenceNumber>(this.detach_ReferenceNumbers));
			this._Loads = new EntitySet<Load>(new Action<Load>(this.attach_Loads), new Action<Load>(this.detach_Loads));
			this._Permits = new EntitySet<Permit>(new Action<Permit>(this.attach_Permits), new Action<Permit>(this.detach_Permits));
			this._ThirdPartyServices = new EntitySet<ThirdPartyService>(new Action<ThirdPartyService>(this.attach_ThirdPartyServices), new Action<ThirdPartyService>(this.detach_ThirdPartyServices));
			this._Dispatches = new EntitySet<Dispatch>(new Action<Dispatch>(this.attach_Dispatches), new Action<Dispatch>(this.detach_Dispatches));
			this._Invoices = new EntitySet<Invoice>(new Action<Invoice>(this.attach_Invoices), new Action<Invoice>(this.detach_Invoices));
			this._Employee = default(EntityRef<Employee>);
			this._Company = default(EntityRef<Company>);
			this._CareOfCompany = default(EntityRef<Company>);
			this._JobStatusType = default(EntityRef<JobStatusType>);
			this._Quote = default(EntityRef<Quote>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID")]
		public System.Nullable<long> CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					if (this._Company.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuoteID")]
		public System.Nullable<long> QuoteID
		{
			get
			{
				return this._QuoteID;
			}
			set
			{
				if ((this._QuoteID != value))
				{
					if (this._Quote.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnQuoteIDChanging(value);
					this.SendPropertyChanging();
					this._QuoteID = value;
					this.SendPropertyChanged("QuoteID");
					this.OnQuoteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeID")]
		public System.Nullable<long> EmployeeID
		{
			get
			{
				return this._EmployeeID;
			}
			set
			{
				if ((this._EmployeeID != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeIDChanging(value);
					this.SendPropertyChanging();
					this._EmployeeID = value;
					this.SendPropertyChanged("EmployeeID");
					this.OnEmployeeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CareOfCompanyID")]
		public System.Nullable<long> CareOfCompanyID
		{
			get
			{
				return this._CareOfCompanyID;
			}
			set
			{
				if ((this._CareOfCompanyID != value))
				{
					if (this._CareOfCompany.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCareOfCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CareOfCompanyID = value;
					this.SendPropertyChanged("CareOfCompanyID");
					this.OnCareOfCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusTypeID")]
		public System.Nullable<long> StatusTypeID
		{
			get
			{
				return this._StatusTypeID;
			}
			set
			{
				if ((this._StatusTypeID != value))
				{
					if (this._JobStatusType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStatusTypeIDChanging(value);
					this.SendPropertyChanging();
					this._StatusTypeID = value;
					this.SendPropertyChanged("StatusTypeID");
					this.OnStatusTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number")]
		public System.Nullable<int> Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this.OnNumberChanging(value);
					this.SendPropertyChanging();
					this._Number = value;
					this.SendPropertyChanged("Number");
					this.OnNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Job_JobCommodity", Storage="_JobCommodities", ThisKey="ID", OtherKey="JobID")]
		public EntitySet<JobCommodity> JobCommodities
		{
			get
			{
				return this._JobCommodities;
			}
			set
			{
				this._JobCommodities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Job_JobReferenceNumber", Storage="_ReferenceNumbers", ThisKey="ID", OtherKey="JobID")]
		public EntitySet<JobReferenceNumber> ReferenceNumbers
		{
			get
			{
				return this._ReferenceNumbers;
			}
			set
			{
				this._ReferenceNumbers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Job_Load", Storage="_Loads", ThisKey="ID", OtherKey="JobID")]
		public EntitySet<Load> Loads
		{
			get
			{
				return this._Loads;
			}
			set
			{
				this._Loads.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Job_Permit", Storage="_Permits", ThisKey="ID", OtherKey="JobID")]
		public EntitySet<Permit> Permits
		{
			get
			{
				return this._Permits;
			}
			set
			{
				this._Permits.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Job_ThirdPartyService", Storage="_ThirdPartyServices", ThisKey="ID", OtherKey="JobID")]
		public EntitySet<ThirdPartyService> ThirdPartyServices
		{
			get
			{
				return this._ThirdPartyServices;
			}
			set
			{
				this._ThirdPartyServices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Job_Dispatch", Storage="_Dispatches", ThisKey="ID", OtherKey="JobID")]
		public EntitySet<Dispatch> Dispatches
		{
			get
			{
				return this._Dispatches;
			}
			set
			{
				this._Dispatches.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Job_Invoice", Storage="_Invoices", ThisKey="ID", OtherKey="JobID")]
		public EntitySet<Invoice> Invoices
		{
			get
			{
				return this._Invoices;
			}
			set
			{
				this._Invoices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Job", Storage="_Employee", ThisKey="EmployeeID", OtherKey="ID", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.Jobs.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.Jobs.Add(this);
						this._EmployeeID = value.ID;
					}
					else
					{
						this._EmployeeID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_Job", Storage="_Company", ThisKey="CompanyID", OtherKey="ID", IsForeignKey=true)]
		public Company Company
		{
			get
			{
				return this._Company.Entity;
			}
			set
			{
				Company previousValue = this._Company.Entity;
				if (((previousValue != value) 
							|| (this._Company.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Company.Entity = null;
						previousValue.Jobs.Remove(this);
					}
					this._Company.Entity = value;
					if ((value != null))
					{
						value.Jobs.Add(this);
						this._CompanyID = value.ID;
					}
					else
					{
						this._CompanyID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Company");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_Job1", Storage="_CareOfCompany", ThisKey="CareOfCompanyID", OtherKey="ID", IsForeignKey=true)]
		public Company CareOfCompany
		{
			get
			{
				return this._CareOfCompany.Entity;
			}
			set
			{
				Company previousValue = this._CareOfCompany.Entity;
				if (((previousValue != value) 
							|| (this._CareOfCompany.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CareOfCompany.Entity = null;
						previousValue.CareOfJobs.Remove(this);
					}
					this._CareOfCompany.Entity = value;
					if ((value != null))
					{
						value.CareOfJobs.Add(this);
						this._CareOfCompanyID = value.ID;
					}
					else
					{
						this._CareOfCompanyID = default(Nullable<long>);
					}
					this.SendPropertyChanged("CareOfCompany");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="JobStatusType_Job", Storage="_JobStatusType", ThisKey="StatusTypeID", OtherKey="ID", IsForeignKey=true)]
		public JobStatusType JobStatusType
		{
			get
			{
				return this._JobStatusType.Entity;
			}
			set
			{
				JobStatusType previousValue = this._JobStatusType.Entity;
				if (((previousValue != value) 
							|| (this._JobStatusType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._JobStatusType.Entity = null;
						previousValue.Jobs.Remove(this);
					}
					this._JobStatusType.Entity = value;
					if ((value != null))
					{
						value.Jobs.Add(this);
						this._StatusTypeID = value.ID;
					}
					else
					{
						this._StatusTypeID = default(Nullable<long>);
					}
					this.SendPropertyChanged("JobStatusType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Quote_Job", Storage="_Quote", ThisKey="QuoteID", OtherKey="ID", IsForeignKey=true)]
		public Quote Quote
		{
			get
			{
				return this._Quote.Entity;
			}
			set
			{
				Quote previousValue = this._Quote.Entity;
				if (((previousValue != value) 
							|| (this._Quote.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Quote.Entity = null;
						previousValue.Jobs.Remove(this);
					}
					this._Quote.Entity = value;
					if ((value != null))
					{
						value.Jobs.Add(this);
						this._QuoteID = value.ID;
					}
					else
					{
						this._QuoteID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Quote");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_JobCommodities(JobCommodity entity)
		{
			this.SendPropertyChanging();
			entity.Job = this;
		}
		
		private void detach_JobCommodities(JobCommodity entity)
		{
			this.SendPropertyChanging();
			entity.Job = null;
		}
		
		private void attach_ReferenceNumbers(JobReferenceNumber entity)
		{
			this.SendPropertyChanging();
			entity.Job = this;
		}
		
		private void detach_ReferenceNumbers(JobReferenceNumber entity)
		{
			this.SendPropertyChanging();
			entity.Job = null;
		}
		
		private void attach_Loads(Load entity)
		{
			this.SendPropertyChanging();
			entity.Job = this;
		}
		
		private void detach_Loads(Load entity)
		{
			this.SendPropertyChanging();
			entity.Job = null;
		}
		
		private void attach_Permits(Permit entity)
		{
			this.SendPropertyChanging();
			entity.Job = this;
		}
		
		private void detach_Permits(Permit entity)
		{
			this.SendPropertyChanging();
			entity.Job = null;
		}
		
		private void attach_ThirdPartyServices(ThirdPartyService entity)
		{
			this.SendPropertyChanging();
			entity.Job = this;
		}
		
		private void detach_ThirdPartyServices(ThirdPartyService entity)
		{
			this.SendPropertyChanging();
			entity.Job = null;
		}
		
		private void attach_Dispatches(Dispatch entity)
		{
			this.SendPropertyChanging();
			entity.Job = this;
		}
		
		private void detach_Dispatches(Dispatch entity)
		{
			this.SendPropertyChanging();
			entity.Job = null;
		}
		
		private void attach_Invoices(Invoice entity)
		{
			this.SendPropertyChanging();
			entity.Job = this;
		}
		
		private void detach_Invoices(Invoice entity)
		{
			this.SendPropertyChanging();
			entity.Job = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class JobReferenceNumber : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Nullable<long> _JobID;
		
		private string _Field;
		
		private string _Value;
		
		private EntityRef<Job> _Job;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnJobIDChanging(System.Nullable<long> value);
    partial void OnJobIDChanged();
    partial void OnFieldChanging(string value);
    partial void OnFieldChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    #endregion
		
		public JobReferenceNumber()
		{
			this._Job = default(EntityRef<Job>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobID")]
		public System.Nullable<long> JobID
		{
			get
			{
				return this._JobID;
			}
			set
			{
				if ((this._JobID != value))
				{
					if (this._Job.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJobIDChanging(value);
					this.SendPropertyChanging();
					this._JobID = value;
					this.SendPropertyChanged("JobID");
					this.OnJobIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Field")]
		public string Field
		{
			get
			{
				return this._Field;
			}
			set
			{
				if ((this._Field != value))
				{
					this.OnFieldChanging(value);
					this.SendPropertyChanging();
					this._Field = value;
					this.SendPropertyChanged("Field");
					this.OnFieldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value")]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Job_JobReferenceNumber", Storage="_Job", ThisKey="JobID", OtherKey="ID", IsForeignKey=true)]
		public Job Job
		{
			get
			{
				return this._Job.Entity;
			}
			set
			{
				Job previousValue = this._Job.Entity;
				if (((previousValue != value) 
							|| (this._Job.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Job.Entity = null;
						previousValue.ReferenceNumbers.Remove(this);
					}
					this._Job.Entity = value;
					if ((value != null))
					{
						value.ReferenceNumbers.Add(this);
						this._JobID = value.ID;
					}
					else
					{
						this._JobID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Job");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class JobStatusType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _Name;
		
		private EntitySet<Job> _Jobs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public JobStatusType()
		{
			this._Jobs = new EntitySet<Job>(new Action<Job>(this.attach_Jobs), new Action<Job>(this.detach_Jobs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="JobStatusType_Job", Storage="_Jobs", ThisKey="ID", OtherKey="StatusTypeID")]
		public EntitySet<Job> Jobs
		{
			get
			{
				return this._Jobs;
			}
			set
			{
				this._Jobs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Jobs(Job entity)
		{
			this.SendPropertyChanging();
			entity.JobStatusType = this;
		}
		
		private void detach_Jobs(Job entity)
		{
			this.SendPropertyChanging();
			entity.JobStatusType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class Load : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Nullable<long> _JobID;
		
		private System.Nullable<long> _EquipmentID;
		
		private System.Nullable<long> _RateID;
		
		private System.Nullable<long> _SeasonID;
		
		private System.Nullable<long> _TrailerCombinationID;
		
		private System.Nullable<int> _Number;
		
		private string _Info;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private string _Ban;
		
		private string _ServiceDescription;
		
		private string _Schedule;
		
		private string _Notes;
		
		private System.Nullable<double> _EWeightSteer;
		
		private System.Nullable<double> _EWeightDrive;
		
		private System.Nullable<double> _EWeightGroup1;
		
		private System.Nullable<double> _EWeightGroup2;
		
		private System.Nullable<double> _EWeightGroup3;
		
		private System.Nullable<double> _EWeightGroup4;
		
		private System.Nullable<double> _EWeightGroup5;
		
		private System.Nullable<double> _EWeightGroup6;
		
		private System.Nullable<double> _EWeightGroup7;
		
		private System.Nullable<double> _EWeightGroup8;
		
		private System.Nullable<double> _EWeightGroup9;
		
		private System.Nullable<double> _EWeightGroup10;
		
		private System.Nullable<double> _SWeightSteer;
		
		private System.Nullable<double> _SWeightDrive;
		
		private System.Nullable<double> _SWeightGroup1;
		
		private System.Nullable<double> _SWeightGroup2;
		
		private System.Nullable<double> _SWeightGroup3;
		
		private System.Nullable<double> _SWeightGroup4;
		
		private System.Nullable<double> _SWeightGroup5;
		
		private System.Nullable<double> _SWeightGroup6;
		
		private System.Nullable<double> _SWeightGroup7;
		
		private System.Nullable<double> _SWeightGroup8;
		
		private System.Nullable<double> _SWeightGroup9;
		
		private System.Nullable<double> _SWeightGroup10;
		
		private System.Nullable<double> _GrossWeight;
		
		private System.Nullable<double> _LoadedLength;
		
		private System.Nullable<double> _LoadedWidth;
		
		private System.Nullable<double> _LoadedHeight;
		
		private EntitySet<JobCommodity> _JobCommodities;
		
		private EntitySet<Permit> _Permits;
		
		private EntitySet<ThirdPartyService> _ThirdPartyServices;
		
		private EntitySet<Dispatch> _Dispatches;
		
		private EntityRef<Job> _Job;
		
		private EntityRef<Season> _Season;
		
		private EntityRef<Equipment> _Equipment;
		
		private EntityRef<Rate> _Rate;
		
		private EntityRef<TrailerCombination> _TrailerCombination;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnJobIDChanging(System.Nullable<long> value);
    partial void OnJobIDChanged();
    partial void OnEquipmentIDChanging(System.Nullable<long> value);
    partial void OnEquipmentIDChanged();
    partial void OnRateIDChanging(System.Nullable<long> value);
    partial void OnRateIDChanged();
    partial void OnSeasonIDChanging(System.Nullable<long> value);
    partial void OnSeasonIDChanged();
    partial void OnTrailerCombinationIDChanging(System.Nullable<long> value);
    partial void OnTrailerCombinationIDChanged();
    partial void OnNumberChanging(System.Nullable<int> value);
    partial void OnNumberChanged();
    partial void OnInfoChanging(string value);
    partial void OnInfoChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnBanChanging(string value);
    partial void OnBanChanged();
    partial void OnServiceDescriptionChanging(string value);
    partial void OnServiceDescriptionChanged();
    partial void OnScheduleChanging(string value);
    partial void OnScheduleChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnEWeightSteerChanging(System.Nullable<double> value);
    partial void OnEWeightSteerChanged();
    partial void OnEWeightDriveChanging(System.Nullable<double> value);
    partial void OnEWeightDriveChanged();
    partial void OnEWeightGroup1Changing(System.Nullable<double> value);
    partial void OnEWeightGroup1Changed();
    partial void OnEWeightGroup2Changing(System.Nullable<double> value);
    partial void OnEWeightGroup2Changed();
    partial void OnEWeightGroup3Changing(System.Nullable<double> value);
    partial void OnEWeightGroup3Changed();
    partial void OnEWeightGroup4Changing(System.Nullable<double> value);
    partial void OnEWeightGroup4Changed();
    partial void OnEWeightGroup5Changing(System.Nullable<double> value);
    partial void OnEWeightGroup5Changed();
    partial void OnEWeightGroup6Changing(System.Nullable<double> value);
    partial void OnEWeightGroup6Changed();
    partial void OnEWeightGroup7Changing(System.Nullable<double> value);
    partial void OnEWeightGroup7Changed();
    partial void OnEWeightGroup8Changing(System.Nullable<double> value);
    partial void OnEWeightGroup8Changed();
    partial void OnEWeightGroup9Changing(System.Nullable<double> value);
    partial void OnEWeightGroup9Changed();
    partial void OnEWeightGroup10Changing(System.Nullable<double> value);
    partial void OnEWeightGroup10Changed();
    partial void OnSWeightSteerChanging(System.Nullable<double> value);
    partial void OnSWeightSteerChanged();
    partial void OnSWeightDriveChanging(System.Nullable<double> value);
    partial void OnSWeightDriveChanged();
    partial void OnSWeightGroup1Changing(System.Nullable<double> value);
    partial void OnSWeightGroup1Changed();
    partial void OnSWeightGroup2Changing(System.Nullable<double> value);
    partial void OnSWeightGroup2Changed();
    partial void OnSWeightGroup3Changing(System.Nullable<double> value);
    partial void OnSWeightGroup3Changed();
    partial void OnSWeightGroup4Changing(System.Nullable<double> value);
    partial void OnSWeightGroup4Changed();
    partial void OnSWeightGroup5Changing(System.Nullable<double> value);
    partial void OnSWeightGroup5Changed();
    partial void OnSWeightGroup6Changing(System.Nullable<double> value);
    partial void OnSWeightGroup6Changed();
    partial void OnSWeightGroup7Changing(System.Nullable<double> value);
    partial void OnSWeightGroup7Changed();
    partial void OnSWeightGroup8Changing(System.Nullable<double> value);
    partial void OnSWeightGroup8Changed();
    partial void OnSWeightGroup9Changing(System.Nullable<double> value);
    partial void OnSWeightGroup9Changed();
    partial void OnSWeightGroup10Changing(System.Nullable<double> value);
    partial void OnSWeightGroup10Changed();
    partial void OnGrossWeightChanging(System.Nullable<double> value);
    partial void OnGrossWeightChanged();
    partial void OnLoadedLengthChanging(System.Nullable<double> value);
    partial void OnLoadedLengthChanged();
    partial void OnLoadedWidthChanging(System.Nullable<double> value);
    partial void OnLoadedWidthChanged();
    partial void OnLoadedHeightChanging(System.Nullable<double> value);
    partial void OnLoadedHeightChanged();
    #endregion
		
		public Load()
		{
			this._JobCommodities = new EntitySet<JobCommodity>(new Action<JobCommodity>(this.attach_JobCommodities), new Action<JobCommodity>(this.detach_JobCommodities));
			this._Permits = new EntitySet<Permit>(new Action<Permit>(this.attach_Permits), new Action<Permit>(this.detach_Permits));
			this._ThirdPartyServices = new EntitySet<ThirdPartyService>(new Action<ThirdPartyService>(this.attach_ThirdPartyServices), new Action<ThirdPartyService>(this.detach_ThirdPartyServices));
			this._Dispatches = new EntitySet<Dispatch>(new Action<Dispatch>(this.attach_Dispatches), new Action<Dispatch>(this.detach_Dispatches));
			this._Job = default(EntityRef<Job>);
			this._Season = default(EntityRef<Season>);
			this._Equipment = default(EntityRef<Equipment>);
			this._Rate = default(EntityRef<Rate>);
			this._TrailerCombination = default(EntityRef<TrailerCombination>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobID")]
		public System.Nullable<long> JobID
		{
			get
			{
				return this._JobID;
			}
			set
			{
				if ((this._JobID != value))
				{
					if (this._Job.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJobIDChanging(value);
					this.SendPropertyChanging();
					this._JobID = value;
					this.SendPropertyChanged("JobID");
					this.OnJobIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EquipmentID")]
		public System.Nullable<long> EquipmentID
		{
			get
			{
				return this._EquipmentID;
			}
			set
			{
				if ((this._EquipmentID != value))
				{
					if (this._Equipment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEquipmentIDChanging(value);
					this.SendPropertyChanging();
					this._EquipmentID = value;
					this.SendPropertyChanged("EquipmentID");
					this.OnEquipmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RateID")]
		public System.Nullable<long> RateID
		{
			get
			{
				return this._RateID;
			}
			set
			{
				if ((this._RateID != value))
				{
					if (this._Rate.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRateIDChanging(value);
					this.SendPropertyChanging();
					this._RateID = value;
					this.SendPropertyChanged("RateID");
					this.OnRateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeasonID")]
		public System.Nullable<long> SeasonID
		{
			get
			{
				return this._SeasonID;
			}
			set
			{
				if ((this._SeasonID != value))
				{
					if (this._Season.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSeasonIDChanging(value);
					this.SendPropertyChanging();
					this._SeasonID = value;
					this.SendPropertyChanged("SeasonID");
					this.OnSeasonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrailerCombinationID")]
		public System.Nullable<long> TrailerCombinationID
		{
			get
			{
				return this._TrailerCombinationID;
			}
			set
			{
				if ((this._TrailerCombinationID != value))
				{
					if (this._TrailerCombination.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTrailerCombinationIDChanging(value);
					this.SendPropertyChanging();
					this._TrailerCombinationID = value;
					this.SendPropertyChanged("TrailerCombinationID");
					this.OnTrailerCombinationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number")]
		public System.Nullable<int> Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this.OnNumberChanging(value);
					this.SendPropertyChanging();
					this._Number = value;
					this.SendPropertyChanged("Number");
					this.OnNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Info")]
		public string Info
		{
			get
			{
				return this._Info;
			}
			set
			{
				if ((this._Info != value))
				{
					this.OnInfoChanging(value);
					this.SendPropertyChanging();
					this._Info = value;
					this.SendPropertyChanged("Info");
					this.OnInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ban")]
		public string Ban
		{
			get
			{
				return this._Ban;
			}
			set
			{
				if ((this._Ban != value))
				{
					this.OnBanChanging(value);
					this.SendPropertyChanging();
					this._Ban = value;
					this.SendPropertyChanged("Ban");
					this.OnBanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceDescription")]
		public string ServiceDescription
		{
			get
			{
				return this._ServiceDescription;
			}
			set
			{
				if ((this._ServiceDescription != value))
				{
					this.OnServiceDescriptionChanging(value);
					this.SendPropertyChanging();
					this._ServiceDescription = value;
					this.SendPropertyChanged("ServiceDescription");
					this.OnServiceDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Schedule")]
		public string Schedule
		{
			get
			{
				return this._Schedule;
			}
			set
			{
				if ((this._Schedule != value))
				{
					this.OnScheduleChanging(value);
					this.SendPropertyChanging();
					this._Schedule = value;
					this.SendPropertyChanged("Schedule");
					this.OnScheduleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", UpdateCheck=UpdateCheck.Never)]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EWeightSteer")]
		public System.Nullable<double> EWeightSteer
		{
			get
			{
				return this._EWeightSteer;
			}
			set
			{
				if ((this._EWeightSteer != value))
				{
					this.OnEWeightSteerChanging(value);
					this.SendPropertyChanging();
					this._EWeightSteer = value;
					this.SendPropertyChanged("EWeightSteer");
					this.OnEWeightSteerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EWeightDrive")]
		public System.Nullable<double> EWeightDrive
		{
			get
			{
				return this._EWeightDrive;
			}
			set
			{
				if ((this._EWeightDrive != value))
				{
					this.OnEWeightDriveChanging(value);
					this.SendPropertyChanging();
					this._EWeightDrive = value;
					this.SendPropertyChanged("EWeightDrive");
					this.OnEWeightDriveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EWeightGroup1")]
		public System.Nullable<double> EWeightGroup1
		{
			get
			{
				return this._EWeightGroup1;
			}
			set
			{
				if ((this._EWeightGroup1 != value))
				{
					this.OnEWeightGroup1Changing(value);
					this.SendPropertyChanging();
					this._EWeightGroup1 = value;
					this.SendPropertyChanged("EWeightGroup1");
					this.OnEWeightGroup1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EWeightGroup2")]
		public System.Nullable<double> EWeightGroup2
		{
			get
			{
				return this._EWeightGroup2;
			}
			set
			{
				if ((this._EWeightGroup2 != value))
				{
					this.OnEWeightGroup2Changing(value);
					this.SendPropertyChanging();
					this._EWeightGroup2 = value;
					this.SendPropertyChanged("EWeightGroup2");
					this.OnEWeightGroup2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EWeightGroup3")]
		public System.Nullable<double> EWeightGroup3
		{
			get
			{
				return this._EWeightGroup3;
			}
			set
			{
				if ((this._EWeightGroup3 != value))
				{
					this.OnEWeightGroup3Changing(value);
					this.SendPropertyChanging();
					this._EWeightGroup3 = value;
					this.SendPropertyChanged("EWeightGroup3");
					this.OnEWeightGroup3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EWeightGroup4")]
		public System.Nullable<double> EWeightGroup4
		{
			get
			{
				return this._EWeightGroup4;
			}
			set
			{
				if ((this._EWeightGroup4 != value))
				{
					this.OnEWeightGroup4Changing(value);
					this.SendPropertyChanging();
					this._EWeightGroup4 = value;
					this.SendPropertyChanged("EWeightGroup4");
					this.OnEWeightGroup4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EWeightGroup5")]
		public System.Nullable<double> EWeightGroup5
		{
			get
			{
				return this._EWeightGroup5;
			}
			set
			{
				if ((this._EWeightGroup5 != value))
				{
					this.OnEWeightGroup5Changing(value);
					this.SendPropertyChanging();
					this._EWeightGroup5 = value;
					this.SendPropertyChanged("EWeightGroup5");
					this.OnEWeightGroup5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EWeightGroup6")]
		public System.Nullable<double> EWeightGroup6
		{
			get
			{
				return this._EWeightGroup6;
			}
			set
			{
				if ((this._EWeightGroup6 != value))
				{
					this.OnEWeightGroup6Changing(value);
					this.SendPropertyChanging();
					this._EWeightGroup6 = value;
					this.SendPropertyChanged("EWeightGroup6");
					this.OnEWeightGroup6Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EWeightGroup7")]
		public System.Nullable<double> EWeightGroup7
		{
			get
			{
				return this._EWeightGroup7;
			}
			set
			{
				if ((this._EWeightGroup7 != value))
				{
					this.OnEWeightGroup7Changing(value);
					this.SendPropertyChanging();
					this._EWeightGroup7 = value;
					this.SendPropertyChanged("EWeightGroup7");
					this.OnEWeightGroup7Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EWeightGroup8")]
		public System.Nullable<double> EWeightGroup8
		{
			get
			{
				return this._EWeightGroup8;
			}
			set
			{
				if ((this._EWeightGroup8 != value))
				{
					this.OnEWeightGroup8Changing(value);
					this.SendPropertyChanging();
					this._EWeightGroup8 = value;
					this.SendPropertyChanged("EWeightGroup8");
					this.OnEWeightGroup8Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EWeightGroup9")]
		public System.Nullable<double> EWeightGroup9
		{
			get
			{
				return this._EWeightGroup9;
			}
			set
			{
				if ((this._EWeightGroup9 != value))
				{
					this.OnEWeightGroup9Changing(value);
					this.SendPropertyChanging();
					this._EWeightGroup9 = value;
					this.SendPropertyChanged("EWeightGroup9");
					this.OnEWeightGroup9Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EWeightGroup10")]
		public System.Nullable<double> EWeightGroup10
		{
			get
			{
				return this._EWeightGroup10;
			}
			set
			{
				if ((this._EWeightGroup10 != value))
				{
					this.OnEWeightGroup10Changing(value);
					this.SendPropertyChanging();
					this._EWeightGroup10 = value;
					this.SendPropertyChanged("EWeightGroup10");
					this.OnEWeightGroup10Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SWeightSteer")]
		public System.Nullable<double> SWeightSteer
		{
			get
			{
				return this._SWeightSteer;
			}
			set
			{
				if ((this._SWeightSteer != value))
				{
					this.OnSWeightSteerChanging(value);
					this.SendPropertyChanging();
					this._SWeightSteer = value;
					this.SendPropertyChanged("SWeightSteer");
					this.OnSWeightSteerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SWeightDrive")]
		public System.Nullable<double> SWeightDrive
		{
			get
			{
				return this._SWeightDrive;
			}
			set
			{
				if ((this._SWeightDrive != value))
				{
					this.OnSWeightDriveChanging(value);
					this.SendPropertyChanging();
					this._SWeightDrive = value;
					this.SendPropertyChanged("SWeightDrive");
					this.OnSWeightDriveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SWeightGroup1")]
		public System.Nullable<double> SWeightGroup1
		{
			get
			{
				return this._SWeightGroup1;
			}
			set
			{
				if ((this._SWeightGroup1 != value))
				{
					this.OnSWeightGroup1Changing(value);
					this.SendPropertyChanging();
					this._SWeightGroup1 = value;
					this.SendPropertyChanged("SWeightGroup1");
					this.OnSWeightGroup1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SWeightGroup2")]
		public System.Nullable<double> SWeightGroup2
		{
			get
			{
				return this._SWeightGroup2;
			}
			set
			{
				if ((this._SWeightGroup2 != value))
				{
					this.OnSWeightGroup2Changing(value);
					this.SendPropertyChanging();
					this._SWeightGroup2 = value;
					this.SendPropertyChanged("SWeightGroup2");
					this.OnSWeightGroup2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SWeightGroup3")]
		public System.Nullable<double> SWeightGroup3
		{
			get
			{
				return this._SWeightGroup3;
			}
			set
			{
				if ((this._SWeightGroup3 != value))
				{
					this.OnSWeightGroup3Changing(value);
					this.SendPropertyChanging();
					this._SWeightGroup3 = value;
					this.SendPropertyChanged("SWeightGroup3");
					this.OnSWeightGroup3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SWeightGroup4")]
		public System.Nullable<double> SWeightGroup4
		{
			get
			{
				return this._SWeightGroup4;
			}
			set
			{
				if ((this._SWeightGroup4 != value))
				{
					this.OnSWeightGroup4Changing(value);
					this.SendPropertyChanging();
					this._SWeightGroup4 = value;
					this.SendPropertyChanged("SWeightGroup4");
					this.OnSWeightGroup4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SWeightGroup5")]
		public System.Nullable<double> SWeightGroup5
		{
			get
			{
				return this._SWeightGroup5;
			}
			set
			{
				if ((this._SWeightGroup5 != value))
				{
					this.OnSWeightGroup5Changing(value);
					this.SendPropertyChanging();
					this._SWeightGroup5 = value;
					this.SendPropertyChanged("SWeightGroup5");
					this.OnSWeightGroup5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SWeightGroup6")]
		public System.Nullable<double> SWeightGroup6
		{
			get
			{
				return this._SWeightGroup6;
			}
			set
			{
				if ((this._SWeightGroup6 != value))
				{
					this.OnSWeightGroup6Changing(value);
					this.SendPropertyChanging();
					this._SWeightGroup6 = value;
					this.SendPropertyChanged("SWeightGroup6");
					this.OnSWeightGroup6Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SWeightGroup7")]
		public System.Nullable<double> SWeightGroup7
		{
			get
			{
				return this._SWeightGroup7;
			}
			set
			{
				if ((this._SWeightGroup7 != value))
				{
					this.OnSWeightGroup7Changing(value);
					this.SendPropertyChanging();
					this._SWeightGroup7 = value;
					this.SendPropertyChanged("SWeightGroup7");
					this.OnSWeightGroup7Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SWeightGroup8")]
		public System.Nullable<double> SWeightGroup8
		{
			get
			{
				return this._SWeightGroup8;
			}
			set
			{
				if ((this._SWeightGroup8 != value))
				{
					this.OnSWeightGroup8Changing(value);
					this.SendPropertyChanging();
					this._SWeightGroup8 = value;
					this.SendPropertyChanged("SWeightGroup8");
					this.OnSWeightGroup8Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SWeightGroup9")]
		public System.Nullable<double> SWeightGroup9
		{
			get
			{
				return this._SWeightGroup9;
			}
			set
			{
				if ((this._SWeightGroup9 != value))
				{
					this.OnSWeightGroup9Changing(value);
					this.SendPropertyChanging();
					this._SWeightGroup9 = value;
					this.SendPropertyChanged("SWeightGroup9");
					this.OnSWeightGroup9Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SWeightGroup10")]
		public System.Nullable<double> SWeightGroup10
		{
			get
			{
				return this._SWeightGroup10;
			}
			set
			{
				if ((this._SWeightGroup10 != value))
				{
					this.OnSWeightGroup10Changing(value);
					this.SendPropertyChanging();
					this._SWeightGroup10 = value;
					this.SendPropertyChanged("SWeightGroup10");
					this.OnSWeightGroup10Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GrossWeight")]
		public System.Nullable<double> GrossWeight
		{
			get
			{
				return this._GrossWeight;
			}
			set
			{
				if ((this._GrossWeight != value))
				{
					this.OnGrossWeightChanging(value);
					this.SendPropertyChanging();
					this._GrossWeight = value;
					this.SendPropertyChanged("GrossWeight");
					this.OnGrossWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoadedLength")]
		public System.Nullable<double> LoadedLength
		{
			get
			{
				return this._LoadedLength;
			}
			set
			{
				if ((this._LoadedLength != value))
				{
					this.OnLoadedLengthChanging(value);
					this.SendPropertyChanging();
					this._LoadedLength = value;
					this.SendPropertyChanged("LoadedLength");
					this.OnLoadedLengthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoadedWidth")]
		public System.Nullable<double> LoadedWidth
		{
			get
			{
				return this._LoadedWidth;
			}
			set
			{
				if ((this._LoadedWidth != value))
				{
					this.OnLoadedWidthChanging(value);
					this.SendPropertyChanging();
					this._LoadedWidth = value;
					this.SendPropertyChanged("LoadedWidth");
					this.OnLoadedWidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoadedHeight")]
		public System.Nullable<double> LoadedHeight
		{
			get
			{
				return this._LoadedHeight;
			}
			set
			{
				if ((this._LoadedHeight != value))
				{
					this.OnLoadedHeightChanging(value);
					this.SendPropertyChanging();
					this._LoadedHeight = value;
					this.SendPropertyChanged("LoadedHeight");
					this.OnLoadedHeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Load_JobCommodity", Storage="_JobCommodities", ThisKey="ID", OtherKey="LoadID")]
		public EntitySet<JobCommodity> JobCommodities
		{
			get
			{
				return this._JobCommodities;
			}
			set
			{
				this._JobCommodities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Load_Permit", Storage="_Permits", ThisKey="ID", OtherKey="LoadID")]
		public EntitySet<Permit> Permits
		{
			get
			{
				return this._Permits;
			}
			set
			{
				this._Permits.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Load_ThirdPartyService", Storage="_ThirdPartyServices", ThisKey="ID", OtherKey="LoadID")]
		public EntitySet<ThirdPartyService> ThirdPartyServices
		{
			get
			{
				return this._ThirdPartyServices;
			}
			set
			{
				this._ThirdPartyServices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Load_Dispatch", Storage="_Dispatches", ThisKey="ID", OtherKey="LoadID")]
		public EntitySet<Dispatch> Dispatches
		{
			get
			{
				return this._Dispatches;
			}
			set
			{
				this._Dispatches.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Job_Load", Storage="_Job", ThisKey="JobID", OtherKey="ID", IsForeignKey=true)]
		public Job Job
		{
			get
			{
				return this._Job.Entity;
			}
			set
			{
				Job previousValue = this._Job.Entity;
				if (((previousValue != value) 
							|| (this._Job.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Job.Entity = null;
						previousValue.Loads.Remove(this);
					}
					this._Job.Entity = value;
					if ((value != null))
					{
						value.Loads.Add(this);
						this._JobID = value.ID;
					}
					else
					{
						this._JobID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Job");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Season_Load", Storage="_Season", ThisKey="SeasonID", OtherKey="ID", IsForeignKey=true)]
		public Season Season
		{
			get
			{
				return this._Season.Entity;
			}
			set
			{
				Season previousValue = this._Season.Entity;
				if (((previousValue != value) 
							|| (this._Season.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Season.Entity = null;
						previousValue.Loads.Remove(this);
					}
					this._Season.Entity = value;
					if ((value != null))
					{
						value.Loads.Add(this);
						this._SeasonID = value.ID;
					}
					else
					{
						this._SeasonID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Season");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Equipment_Load", Storage="_Equipment", ThisKey="EquipmentID", OtherKey="ID", IsForeignKey=true)]
		public Equipment Equipment
		{
			get
			{
				return this._Equipment.Entity;
			}
			set
			{
				Equipment previousValue = this._Equipment.Entity;
				if (((previousValue != value) 
							|| (this._Equipment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Equipment.Entity = null;
						previousValue.Loads.Remove(this);
					}
					this._Equipment.Entity = value;
					if ((value != null))
					{
						value.Loads.Add(this);
						this._EquipmentID = value.ID;
					}
					else
					{
						this._EquipmentID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Equipment");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rate_Load", Storage="_Rate", ThisKey="RateID", OtherKey="ID", IsForeignKey=true)]
		public Rate Rate
		{
			get
			{
				return this._Rate.Entity;
			}
			set
			{
				Rate previousValue = this._Rate.Entity;
				if (((previousValue != value) 
							|| (this._Rate.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Rate.Entity = null;
						previousValue.Loads.Remove(this);
					}
					this._Rate.Entity = value;
					if ((value != null))
					{
						value.Loads.Add(this);
						this._RateID = value.ID;
					}
					else
					{
						this._RateID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Rate");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrailerCombination_Load", Storage="_TrailerCombination", ThisKey="TrailerCombinationID", OtherKey="ID", IsForeignKey=true)]
		public TrailerCombination TrailerCombination
		{
			get
			{
				return this._TrailerCombination.Entity;
			}
			set
			{
				TrailerCombination previousValue = this._TrailerCombination.Entity;
				if (((previousValue != value) 
							|| (this._TrailerCombination.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrailerCombination.Entity = null;
						previousValue.Loads.Remove(this);
					}
					this._TrailerCombination.Entity = value;
					if ((value != null))
					{
						value.Loads.Add(this);
						this._TrailerCombinationID = value.ID;
					}
					else
					{
						this._TrailerCombinationID = default(Nullable<long>);
					}
					this.SendPropertyChanged("TrailerCombination");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_JobCommodities(JobCommodity entity)
		{
			this.SendPropertyChanging();
			entity.Load = this;
		}
		
		private void detach_JobCommodities(JobCommodity entity)
		{
			this.SendPropertyChanging();
			entity.Load = null;
		}
		
		private void attach_Permits(Permit entity)
		{
			this.SendPropertyChanging();
			entity.Load = this;
		}
		
		private void detach_Permits(Permit entity)
		{
			this.SendPropertyChanging();
			entity.Load = null;
		}
		
		private void attach_ThirdPartyServices(ThirdPartyService entity)
		{
			this.SendPropertyChanging();
			entity.Load = this;
		}
		
		private void detach_ThirdPartyServices(ThirdPartyService entity)
		{
			this.SendPropertyChanging();
			entity.Load = null;
		}
		
		private void attach_Dispatches(Dispatch entity)
		{
			this.SendPropertyChanging();
			entity.Load = this;
		}
		
		private void detach_Dispatches(Dispatch entity)
		{
			this.SendPropertyChanging();
			entity.Load = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class Permit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Nullable<long> _JobID;
		
		private System.Nullable<long> _LoadID;
		
		private string _Issuer;
		
		private string _PermitType;
		
		private string _Reference;
		
		private string _Conditions;
		
		private System.Nullable<decimal> _Cost;
		
		private System.Nullable<System.DateTime> _PermitDate;
		
		private EntityRef<Job> _Job;
		
		private EntityRef<Load> _Load;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnJobIDChanging(System.Nullable<long> value);
    partial void OnJobIDChanged();
    partial void OnLoadIDChanging(System.Nullable<long> value);
    partial void OnLoadIDChanged();
    partial void OnIssuerChanging(string value);
    partial void OnIssuerChanged();
    partial void OnPermitTypeChanging(string value);
    partial void OnPermitTypeChanged();
    partial void OnReferenceChanging(string value);
    partial void OnReferenceChanged();
    partial void OnConditionsChanging(string value);
    partial void OnConditionsChanged();
    partial void OnCostChanging(System.Nullable<decimal> value);
    partial void OnCostChanged();
    partial void OnPermitDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPermitDateChanged();
    #endregion
		
		public Permit()
		{
			this._Job = default(EntityRef<Job>);
			this._Load = default(EntityRef<Load>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobID")]
		public System.Nullable<long> JobID
		{
			get
			{
				return this._JobID;
			}
			set
			{
				if ((this._JobID != value))
				{
					if (this._Job.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJobIDChanging(value);
					this.SendPropertyChanging();
					this._JobID = value;
					this.SendPropertyChanged("JobID");
					this.OnJobIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoadID")]
		public System.Nullable<long> LoadID
		{
			get
			{
				return this._LoadID;
			}
			set
			{
				if ((this._LoadID != value))
				{
					if (this._Load.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLoadIDChanging(value);
					this.SendPropertyChanging();
					this._LoadID = value;
					this.SendPropertyChanged("LoadID");
					this.OnLoadIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Issuer")]
		public string Issuer
		{
			get
			{
				return this._Issuer;
			}
			set
			{
				if ((this._Issuer != value))
				{
					this.OnIssuerChanging(value);
					this.SendPropertyChanging();
					this._Issuer = value;
					this.SendPropertyChanged("Issuer");
					this.OnIssuerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PermitType")]
		public string PermitType
		{
			get
			{
				return this._PermitType;
			}
			set
			{
				if ((this._PermitType != value))
				{
					this.OnPermitTypeChanging(value);
					this.SendPropertyChanging();
					this._PermitType = value;
					this.SendPropertyChanged("PermitType");
					this.OnPermitTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reference")]
		public string Reference
		{
			get
			{
				return this._Reference;
			}
			set
			{
				if ((this._Reference != value))
				{
					this.OnReferenceChanging(value);
					this.SendPropertyChanging();
					this._Reference = value;
					this.SendPropertyChanged("Reference");
					this.OnReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Conditions")]
		public string Conditions
		{
			get
			{
				return this._Conditions;
			}
			set
			{
				if ((this._Conditions != value))
				{
					this.OnConditionsChanging(value);
					this.SendPropertyChanging();
					this._Conditions = value;
					this.SendPropertyChanged("Conditions");
					this.OnConditionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cost")]
		public System.Nullable<decimal> Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this.OnCostChanging(value);
					this.SendPropertyChanging();
					this._Cost = value;
					this.SendPropertyChanged("Cost");
					this.OnCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PermitDate")]
		public System.Nullable<System.DateTime> PermitDate
		{
			get
			{
				return this._PermitDate;
			}
			set
			{
				if ((this._PermitDate != value))
				{
					this.OnPermitDateChanging(value);
					this.SendPropertyChanging();
					this._PermitDate = value;
					this.SendPropertyChanged("PermitDate");
					this.OnPermitDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Job_Permit", Storage="_Job", ThisKey="JobID", OtherKey="ID", IsForeignKey=true)]
		public Job Job
		{
			get
			{
				return this._Job.Entity;
			}
			set
			{
				Job previousValue = this._Job.Entity;
				if (((previousValue != value) 
							|| (this._Job.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Job.Entity = null;
						previousValue.Permits.Remove(this);
					}
					this._Job.Entity = value;
					if ((value != null))
					{
						value.Permits.Add(this);
						this._JobID = value.ID;
					}
					else
					{
						this._JobID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Job");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Load_Permit", Storage="_Load", ThisKey="LoadID", OtherKey="ID", IsForeignKey=true)]
		public Load Load
		{
			get
			{
				return this._Load.Entity;
			}
			set
			{
				Load previousValue = this._Load.Entity;
				if (((previousValue != value) 
							|| (this._Load.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Load.Entity = null;
						previousValue.Permits.Remove(this);
					}
					this._Load.Entity = value;
					if ((value != null))
					{
						value.Permits.Add(this);
						this._LoadID = value.ID;
					}
					else
					{
						this._LoadID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Load");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class ProvincesAndState : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Nullable<long> _CountryID;
		
		private string _Name;
		
		private EntitySet<Address> _Addresses;
		
		private EntityRef<Country> _Country;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnCountryIDChanging(System.Nullable<long> value);
    partial void OnCountryIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public ProvincesAndState()
		{
			this._Addresses = new EntitySet<Address>(new Action<Address>(this.attach_Addresses), new Action<Address>(this.detach_Addresses));
			this._Country = default(EntityRef<Country>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryID")]
		public System.Nullable<long> CountryID
		{
			get
			{
				return this._CountryID;
			}
			set
			{
				if ((this._CountryID != value))
				{
					if (this._Country.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCountryIDChanging(value);
					this.SendPropertyChanging();
					this._CountryID = value;
					this.SendPropertyChanged("CountryID");
					this.OnCountryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProvincesAndState_Address", Storage="_Addresses", ThisKey="ID", OtherKey="ProvinceStateID")]
		public EntitySet<Address> Addresses
		{
			get
			{
				return this._Addresses;
			}
			set
			{
				this._Addresses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Country_ProvincesAndState", Storage="_Country", ThisKey="CountryID", OtherKey="ID", IsForeignKey=true)]
		public Country Country
		{
			get
			{
				return this._Country.Entity;
			}
			set
			{
				Country previousValue = this._Country.Entity;
				if (((previousValue != value) 
							|| (this._Country.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Country.Entity = null;
						previousValue.ProvincesAndStates.Remove(this);
					}
					this._Country.Entity = value;
					if ((value != null))
					{
						value.ProvincesAndStates.Add(this);
						this._CountryID = value.ID;
					}
					else
					{
						this._CountryID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Country");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Addresses(Address entity)
		{
			this.SendPropertyChanging();
			entity.ProvincesAndState = this;
		}
		
		private void detach_Addresses(Address entity)
		{
			this.SendPropertyChanging();
			entity.ProvincesAndState = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class QuoteCommodity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Nullable<long> _QuoteID;
		
		private System.Nullable<long> _OriginalCommodityID;
		
		private string _DepartureSiteName;
		
		private string _DepartureAddress;
		
		private string _ArrivalSiteName;
		
		private string _ArrivalAddress;
		
		private string _Name;
		
		private System.Nullable<decimal> _Value;
		
		private string _Serial;
		
		private string _Unit;
		
		private string _Owner;
		
		private string _LastLocation;
		
		private string _LastAddress;
		
		private System.Nullable<double> _Length;
		
		private System.Nullable<double> _Width;
		
		private System.Nullable<double> _Height;
		
		private System.Nullable<double> _Weight;
		
		private System.Nullable<bool> _SizeEstimated;
		
		private System.Nullable<bool> _WeightEstimated;
		
		private System.Nullable<decimal> _Cost;
		
		private string _Notes;
		
		private EntityRef<Quote> _Quote;
		
		private EntityRef<Commodity> _OriginalCommodity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnQuoteIDChanging(System.Nullable<long> value);
    partial void OnQuoteIDChanged();
    partial void OnOriginalCommodityIDChanging(System.Nullable<long> value);
    partial void OnOriginalCommodityIDChanged();
    partial void OnDepartureSiteNameChanging(string value);
    partial void OnDepartureSiteNameChanged();
    partial void OnDepartureAddressChanging(string value);
    partial void OnDepartureAddressChanged();
    partial void OnArrivalSiteNameChanging(string value);
    partial void OnArrivalSiteNameChanged();
    partial void OnArrivalAddressChanging(string value);
    partial void OnArrivalAddressChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnValueChanging(System.Nullable<decimal> value);
    partial void OnValueChanged();
    partial void OnSerialChanging(string value);
    partial void OnSerialChanged();
    partial void OnUnitChanging(string value);
    partial void OnUnitChanged();
    partial void OnOwnerChanging(string value);
    partial void OnOwnerChanged();
    partial void OnLastLocationChanging(string value);
    partial void OnLastLocationChanged();
    partial void OnLastAddressChanging(string value);
    partial void OnLastAddressChanged();
    partial void OnLengthChanging(System.Nullable<double> value);
    partial void OnLengthChanged();
    partial void OnWidthChanging(System.Nullable<double> value);
    partial void OnWidthChanged();
    partial void OnHeightChanging(System.Nullable<double> value);
    partial void OnHeightChanged();
    partial void OnWeightChanging(System.Nullable<double> value);
    partial void OnWeightChanged();
    partial void OnSizeEstimatedChanging(System.Nullable<bool> value);
    partial void OnSizeEstimatedChanged();
    partial void OnWeightEstimatedChanging(System.Nullable<bool> value);
    partial void OnWeightEstimatedChanged();
    partial void OnCostChanging(System.Nullable<decimal> value);
    partial void OnCostChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    #endregion
		
		public QuoteCommodity()
		{
			this._Quote = default(EntityRef<Quote>);
			this._OriginalCommodity = default(EntityRef<Commodity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuoteID")]
		public System.Nullable<long> QuoteID
		{
			get
			{
				return this._QuoteID;
			}
			set
			{
				if ((this._QuoteID != value))
				{
					if (this._Quote.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnQuoteIDChanging(value);
					this.SendPropertyChanging();
					this._QuoteID = value;
					this.SendPropertyChanged("QuoteID");
					this.OnQuoteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginalCommodityID")]
		public System.Nullable<long> OriginalCommodityID
		{
			get
			{
				return this._OriginalCommodityID;
			}
			set
			{
				if ((this._OriginalCommodityID != value))
				{
					if (this._OriginalCommodity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOriginalCommodityIDChanging(value);
					this.SendPropertyChanging();
					this._OriginalCommodityID = value;
					this.SendPropertyChanged("OriginalCommodityID");
					this.OnOriginalCommodityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartureSiteName")]
		public string DepartureSiteName
		{
			get
			{
				return this._DepartureSiteName;
			}
			set
			{
				if ((this._DepartureSiteName != value))
				{
					this.OnDepartureSiteNameChanging(value);
					this.SendPropertyChanging();
					this._DepartureSiteName = value;
					this.SendPropertyChanged("DepartureSiteName");
					this.OnDepartureSiteNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartureAddress")]
		public string DepartureAddress
		{
			get
			{
				return this._DepartureAddress;
			}
			set
			{
				if ((this._DepartureAddress != value))
				{
					this.OnDepartureAddressChanging(value);
					this.SendPropertyChanging();
					this._DepartureAddress = value;
					this.SendPropertyChanged("DepartureAddress");
					this.OnDepartureAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArrivalSiteName")]
		public string ArrivalSiteName
		{
			get
			{
				return this._ArrivalSiteName;
			}
			set
			{
				if ((this._ArrivalSiteName != value))
				{
					this.OnArrivalSiteNameChanging(value);
					this.SendPropertyChanging();
					this._ArrivalSiteName = value;
					this.SendPropertyChanged("ArrivalSiteName");
					this.OnArrivalSiteNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArrivalAddress")]
		public string ArrivalAddress
		{
			get
			{
				return this._ArrivalAddress;
			}
			set
			{
				if ((this._ArrivalAddress != value))
				{
					this.OnArrivalAddressChanging(value);
					this.SendPropertyChanging();
					this._ArrivalAddress = value;
					this.SendPropertyChanged("ArrivalAddress");
					this.OnArrivalAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value")]
		public System.Nullable<decimal> Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Serial")]
		public string Serial
		{
			get
			{
				return this._Serial;
			}
			set
			{
				if ((this._Serial != value))
				{
					this.OnSerialChanging(value);
					this.SendPropertyChanging();
					this._Serial = value;
					this.SendPropertyChanged("Serial");
					this.OnSerialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unit")]
		public string Unit
		{
			get
			{
				return this._Unit;
			}
			set
			{
				if ((this._Unit != value))
				{
					this.OnUnitChanging(value);
					this.SendPropertyChanging();
					this._Unit = value;
					this.SendPropertyChanged("Unit");
					this.OnUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Owner")]
		public string Owner
		{
			get
			{
				return this._Owner;
			}
			set
			{
				if ((this._Owner != value))
				{
					this.OnOwnerChanging(value);
					this.SendPropertyChanging();
					this._Owner = value;
					this.SendPropertyChanged("Owner");
					this.OnOwnerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLocation")]
		public string LastLocation
		{
			get
			{
				return this._LastLocation;
			}
			set
			{
				if ((this._LastLocation != value))
				{
					this.OnLastLocationChanging(value);
					this.SendPropertyChanging();
					this._LastLocation = value;
					this.SendPropertyChanged("LastLocation");
					this.OnLastLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastAddress")]
		public string LastAddress
		{
			get
			{
				return this._LastAddress;
			}
			set
			{
				if ((this._LastAddress != value))
				{
					this.OnLastAddressChanging(value);
					this.SendPropertyChanging();
					this._LastAddress = value;
					this.SendPropertyChanged("LastAddress");
					this.OnLastAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Length")]
		public System.Nullable<double> Length
		{
			get
			{
				return this._Length;
			}
			set
			{
				if ((this._Length != value))
				{
					this.OnLengthChanging(value);
					this.SendPropertyChanging();
					this._Length = value;
					this.SendPropertyChanged("Length");
					this.OnLengthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Width")]
		public System.Nullable<double> Width
		{
			get
			{
				return this._Width;
			}
			set
			{
				if ((this._Width != value))
				{
					this.OnWidthChanging(value);
					this.SendPropertyChanging();
					this._Width = value;
					this.SendPropertyChanged("Width");
					this.OnWidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Height")]
		public System.Nullable<double> Height
		{
			get
			{
				return this._Height;
			}
			set
			{
				if ((this._Height != value))
				{
					this.OnHeightChanging(value);
					this.SendPropertyChanging();
					this._Height = value;
					this.SendPropertyChanged("Height");
					this.OnHeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight")]
		public System.Nullable<double> Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this.OnWeightChanging(value);
					this.SendPropertyChanging();
					this._Weight = value;
					this.SendPropertyChanged("Weight");
					this.OnWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SizeEstimated")]
		public System.Nullable<bool> SizeEstimated
		{
			get
			{
				return this._SizeEstimated;
			}
			set
			{
				if ((this._SizeEstimated != value))
				{
					this.OnSizeEstimatedChanging(value);
					this.SendPropertyChanging();
					this._SizeEstimated = value;
					this.SendPropertyChanged("SizeEstimated");
					this.OnSizeEstimatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeightEstimated")]
		public System.Nullable<bool> WeightEstimated
		{
			get
			{
				return this._WeightEstimated;
			}
			set
			{
				if ((this._WeightEstimated != value))
				{
					this.OnWeightEstimatedChanging(value);
					this.SendPropertyChanging();
					this._WeightEstimated = value;
					this.SendPropertyChanged("WeightEstimated");
					this.OnWeightEstimatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cost")]
		public System.Nullable<decimal> Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this.OnCostChanging(value);
					this.SendPropertyChanging();
					this._Cost = value;
					this.SendPropertyChanged("Cost");
					this.OnCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", UpdateCheck=UpdateCheck.Never)]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Quote_QuoteCommodity", Storage="_Quote", ThisKey="QuoteID", OtherKey="ID", IsForeignKey=true)]
		public Quote Quote
		{
			get
			{
				return this._Quote.Entity;
			}
			set
			{
				Quote previousValue = this._Quote.Entity;
				if (((previousValue != value) 
							|| (this._Quote.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Quote.Entity = null;
						previousValue.QuoteCommodities.Remove(this);
					}
					this._Quote.Entity = value;
					if ((value != null))
					{
						value.QuoteCommodities.Add(this);
						this._QuoteID = value.ID;
					}
					else
					{
						this._QuoteID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Quote");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Commodity_QuoteCommodity", Storage="_OriginalCommodity", ThisKey="OriginalCommodityID", OtherKey="ID", IsForeignKey=true)]
		public Commodity OriginalCommodity
		{
			get
			{
				return this._OriginalCommodity.Entity;
			}
			set
			{
				Commodity previousValue = this._OriginalCommodity.Entity;
				if (((previousValue != value) 
							|| (this._OriginalCommodity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OriginalCommodity.Entity = null;
						previousValue.QuoteCommodities.Remove(this);
					}
					this._OriginalCommodity.Entity = value;
					if ((value != null))
					{
						value.QuoteCommodities.Add(this);
						this._OriginalCommodityID = value.ID;
					}
					else
					{
						this._OriginalCommodityID = default(Nullable<long>);
					}
					this.SendPropertyChanged("OriginalCommodity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class Quote : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Nullable<long> _CompanyID;
		
		private System.Nullable<long> _AddressID;
		
		private System.Nullable<long> _ContactID;
		
		private System.Nullable<int> _Number;
		
		private System.Nullable<int> _Revision;
		
		private System.Nullable<long> _EmployeeID;
		
		private System.Nullable<long> _CareOfCompanyID;
		
		private string _Description;
		
		private System.Nullable<System.DateTime> _CreationDate;
		
		private System.Nullable<System.DateTime> _ExpirationDate;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private System.Nullable<decimal> _Price;
		
		private System.Nullable<bool> _IsPrinted;
		
		private System.Nullable<bool> _IsItemizedBilling;
		
		private EntitySet<Job> _Jobs;
		
		private EntitySet<QuoteCommodity> _QuoteCommodities;
		
		private EntitySet<QuoteSupplement> _QuoteSupplements;
		
		private EntitySet<QuoteStorageItem> _QuoteStorageItems;
		
		private EntitySet<QuoteInclusion> _QuoteInclusions;
		
		private EntitySet<QuoteCondition> _QuoteConditions;
		
		private EntityRef<Employee> _Employee;
		
		private EntityRef<Company> _Company;
		
		private EntityRef<Company> _CareOfCompany;
		
		private EntityRef<Address> _BillingAddress;
		
		private EntityRef<Contact> _Contact;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnCompanyIDChanging(System.Nullable<long> value);
    partial void OnCompanyIDChanged();
    partial void OnAddressIDChanging(System.Nullable<long> value);
    partial void OnAddressIDChanged();
    partial void OnContactIDChanging(System.Nullable<long> value);
    partial void OnContactIDChanged();
    partial void OnNumberChanging(System.Nullable<int> value);
    partial void OnNumberChanged();
    partial void OnRevisionChanging(System.Nullable<int> value);
    partial void OnRevisionChanged();
    partial void OnEmployeeIDChanging(System.Nullable<long> value);
    partial void OnEmployeeIDChanged();
    partial void OnCareOfCompanyIDChanging(System.Nullable<long> value);
    partial void OnCareOfCompanyIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreationDateChanged();
    partial void OnExpirationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnExpirationDateChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnPriceChanging(System.Nullable<decimal> value);
    partial void OnPriceChanged();
    partial void OnIsPrintedChanging(System.Nullable<bool> value);
    partial void OnIsPrintedChanged();
    partial void OnIsItemizedBillingChanging(System.Nullable<bool> value);
    partial void OnIsItemizedBillingChanged();
    #endregion
		
		public Quote()
		{
			this._Jobs = new EntitySet<Job>(new Action<Job>(this.attach_Jobs), new Action<Job>(this.detach_Jobs));
			this._QuoteCommodities = new EntitySet<QuoteCommodity>(new Action<QuoteCommodity>(this.attach_QuoteCommodities), new Action<QuoteCommodity>(this.detach_QuoteCommodities));
			this._QuoteSupplements = new EntitySet<QuoteSupplement>(new Action<QuoteSupplement>(this.attach_QuoteSupplements), new Action<QuoteSupplement>(this.detach_QuoteSupplements));
			this._QuoteStorageItems = new EntitySet<QuoteStorageItem>(new Action<QuoteStorageItem>(this.attach_QuoteStorageItems), new Action<QuoteStorageItem>(this.detach_QuoteStorageItems));
			this._QuoteInclusions = new EntitySet<QuoteInclusion>(new Action<QuoteInclusion>(this.attach_QuoteInclusions), new Action<QuoteInclusion>(this.detach_QuoteInclusions));
			this._QuoteConditions = new EntitySet<QuoteCondition>(new Action<QuoteCondition>(this.attach_QuoteConditions), new Action<QuoteCondition>(this.detach_QuoteConditions));
			this._Employee = default(EntityRef<Employee>);
			this._Company = default(EntityRef<Company>);
			this._CareOfCompany = default(EntityRef<Company>);
			this._BillingAddress = default(EntityRef<Address>);
			this._Contact = default(EntityRef<Contact>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID")]
		public System.Nullable<long> CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					if (this._Company.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressID")]
		public System.Nullable<long> AddressID
		{
			get
			{
				return this._AddressID;
			}
			set
			{
				if ((this._AddressID != value))
				{
					if (this._BillingAddress.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAddressIDChanging(value);
					this.SendPropertyChanging();
					this._AddressID = value;
					this.SendPropertyChanged("AddressID");
					this.OnAddressIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactID")]
		public System.Nullable<long> ContactID
		{
			get
			{
				return this._ContactID;
			}
			set
			{
				if ((this._ContactID != value))
				{
					if (this._Contact.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContactIDChanging(value);
					this.SendPropertyChanging();
					this._ContactID = value;
					this.SendPropertyChanged("ContactID");
					this.OnContactIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number")]
		public System.Nullable<int> Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this.OnNumberChanging(value);
					this.SendPropertyChanging();
					this._Number = value;
					this.SendPropertyChanged("Number");
					this.OnNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Revision")]
		public System.Nullable<int> Revision
		{
			get
			{
				return this._Revision;
			}
			set
			{
				if ((this._Revision != value))
				{
					this.OnRevisionChanging(value);
					this.SendPropertyChanging();
					this._Revision = value;
					this.SendPropertyChanged("Revision");
					this.OnRevisionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeID")]
		public System.Nullable<long> EmployeeID
		{
			get
			{
				return this._EmployeeID;
			}
			set
			{
				if ((this._EmployeeID != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeIDChanging(value);
					this.SendPropertyChanging();
					this._EmployeeID = value;
					this.SendPropertyChanged("EmployeeID");
					this.OnEmployeeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CareOfCompanyID")]
		public System.Nullable<long> CareOfCompanyID
		{
			get
			{
				return this._CareOfCompanyID;
			}
			set
			{
				if ((this._CareOfCompanyID != value))
				{
					if (this._CareOfCompany.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCareOfCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CareOfCompanyID = value;
					this.SendPropertyChanged("CareOfCompanyID");
					this.OnCareOfCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate")]
		public System.Nullable<System.DateTime> CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpirationDate")]
		public System.Nullable<System.DateTime> ExpirationDate
		{
			get
			{
				return this._ExpirationDate;
			}
			set
			{
				if ((this._ExpirationDate != value))
				{
					this.OnExpirationDateChanging(value);
					this.SendPropertyChanging();
					this._ExpirationDate = value;
					this.SendPropertyChanged("ExpirationDate");
					this.OnExpirationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price")]
		public System.Nullable<decimal> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPrinted")]
		public System.Nullable<bool> IsPrinted
		{
			get
			{
				return this._IsPrinted;
			}
			set
			{
				if ((this._IsPrinted != value))
				{
					this.OnIsPrintedChanging(value);
					this.SendPropertyChanging();
					this._IsPrinted = value;
					this.SendPropertyChanged("IsPrinted");
					this.OnIsPrintedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsItemizedBilling")]
		public System.Nullable<bool> IsItemizedBilling
		{
			get
			{
				return this._IsItemizedBilling;
			}
			set
			{
				if ((this._IsItemizedBilling != value))
				{
					this.OnIsItemizedBillingChanging(value);
					this.SendPropertyChanging();
					this._IsItemizedBilling = value;
					this.SendPropertyChanged("IsItemizedBilling");
					this.OnIsItemizedBillingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Quote_Job", Storage="_Jobs", ThisKey="ID", OtherKey="QuoteID")]
		public EntitySet<Job> Jobs
		{
			get
			{
				return this._Jobs;
			}
			set
			{
				this._Jobs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Quote_QuoteCommodity", Storage="_QuoteCommodities", ThisKey="ID", OtherKey="QuoteID")]
		public EntitySet<QuoteCommodity> QuoteCommodities
		{
			get
			{
				return this._QuoteCommodities;
			}
			set
			{
				this._QuoteCommodities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Quote_QuoteSupplement", Storage="_QuoteSupplements", ThisKey="ID", OtherKey="QuoteID")]
		public EntitySet<QuoteSupplement> QuoteSupplements
		{
			get
			{
				return this._QuoteSupplements;
			}
			set
			{
				this._QuoteSupplements.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Quote_QuoteStorageItem", Storage="_QuoteStorageItems", ThisKey="ID", OtherKey="QuoteID")]
		public EntitySet<QuoteStorageItem> QuoteStorageItems
		{
			get
			{
				return this._QuoteStorageItems;
			}
			set
			{
				this._QuoteStorageItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Quote_QuoteInclusion", Storage="_QuoteInclusions", ThisKey="ID", OtherKey="QuoteID")]
		public EntitySet<QuoteInclusion> QuoteInclusions
		{
			get
			{
				return this._QuoteInclusions;
			}
			set
			{
				this._QuoteInclusions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Quote_QuoteCondition", Storage="_QuoteConditions", ThisKey="ID", OtherKey="QuoteID")]
		public EntitySet<QuoteCondition> QuoteConditions
		{
			get
			{
				return this._QuoteConditions;
			}
			set
			{
				this._QuoteConditions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Quote", Storage="_Employee", ThisKey="EmployeeID", OtherKey="ID", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.Quotes.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.Quotes.Add(this);
						this._EmployeeID = value.ID;
					}
					else
					{
						this._EmployeeID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_Quote", Storage="_Company", ThisKey="CompanyID", OtherKey="ID", IsForeignKey=true)]
		public Company Company
		{
			get
			{
				return this._Company.Entity;
			}
			set
			{
				Company previousValue = this._Company.Entity;
				if (((previousValue != value) 
							|| (this._Company.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Company.Entity = null;
						previousValue.Quotes.Remove(this);
					}
					this._Company.Entity = value;
					if ((value != null))
					{
						value.Quotes.Add(this);
						this._CompanyID = value.ID;
					}
					else
					{
						this._CompanyID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Company");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_Quote1", Storage="_CareOfCompany", ThisKey="CareOfCompanyID", OtherKey="ID", IsForeignKey=true)]
		public Company CareOfCompany
		{
			get
			{
				return this._CareOfCompany.Entity;
			}
			set
			{
				Company previousValue = this._CareOfCompany.Entity;
				if (((previousValue != value) 
							|| (this._CareOfCompany.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CareOfCompany.Entity = null;
						previousValue.CareOfQuotes.Remove(this);
					}
					this._CareOfCompany.Entity = value;
					if ((value != null))
					{
						value.CareOfQuotes.Add(this);
						this._CareOfCompanyID = value.ID;
					}
					else
					{
						this._CareOfCompanyID = default(Nullable<long>);
					}
					this.SendPropertyChanged("CareOfCompany");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_Quote", Storage="_BillingAddress", ThisKey="AddressID", OtherKey="ID", IsForeignKey=true)]
		public Address BillingAddress
		{
			get
			{
				return this._BillingAddress.Entity;
			}
			set
			{
				Address previousValue = this._BillingAddress.Entity;
				if (((previousValue != value) 
							|| (this._BillingAddress.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BillingAddress.Entity = null;
						previousValue.Quotes.Remove(this);
					}
					this._BillingAddress.Entity = value;
					if ((value != null))
					{
						value.Quotes.Add(this);
						this._AddressID = value.ID;
					}
					else
					{
						this._AddressID = default(Nullable<long>);
					}
					this.SendPropertyChanged("BillingAddress");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contact_Quote", Storage="_Contact", ThisKey="ContactID", OtherKey="ID", IsForeignKey=true)]
		public Contact Contact
		{
			get
			{
				return this._Contact.Entity;
			}
			set
			{
				Contact previousValue = this._Contact.Entity;
				if (((previousValue != value) 
							|| (this._Contact.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Contact.Entity = null;
						previousValue.Quotes.Remove(this);
					}
					this._Contact.Entity = value;
					if ((value != null))
					{
						value.Quotes.Add(this);
						this._ContactID = value.ID;
					}
					else
					{
						this._ContactID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Contact");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Jobs(Job entity)
		{
			this.SendPropertyChanging();
			entity.Quote = this;
		}
		
		private void detach_Jobs(Job entity)
		{
			this.SendPropertyChanging();
			entity.Quote = null;
		}
		
		private void attach_QuoteCommodities(QuoteCommodity entity)
		{
			this.SendPropertyChanging();
			entity.Quote = this;
		}
		
		private void detach_QuoteCommodities(QuoteCommodity entity)
		{
			this.SendPropertyChanging();
			entity.Quote = null;
		}
		
		private void attach_QuoteSupplements(QuoteSupplement entity)
		{
			this.SendPropertyChanging();
			entity.Quote = this;
		}
		
		private void detach_QuoteSupplements(QuoteSupplement entity)
		{
			this.SendPropertyChanging();
			entity.Quote = null;
		}
		
		private void attach_QuoteStorageItems(QuoteStorageItem entity)
		{
			this.SendPropertyChanging();
			entity.Quote = this;
		}
		
		private void detach_QuoteStorageItems(QuoteStorageItem entity)
		{
			this.SendPropertyChanging();
			entity.Quote = null;
		}
		
		private void attach_QuoteInclusions(QuoteInclusion entity)
		{
			this.SendPropertyChanging();
			entity.Quote = this;
		}
		
		private void detach_QuoteInclusions(QuoteInclusion entity)
		{
			this.SendPropertyChanging();
			entity.Quote = null;
		}
		
		private void attach_QuoteConditions(QuoteCondition entity)
		{
			this.SendPropertyChanging();
			entity.Quote = this;
		}
		
		private void detach_QuoteConditions(QuoteCondition entity)
		{
			this.SendPropertyChanging();
			entity.Quote = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class QuoteSupplement : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Nullable<long> _QuoteID;
		
		private System.Nullable<long> _BillingTypeID;
		
		private string _Name;
		
		private string _Details;
		
		private System.Nullable<int> _Quantity;
		
		private System.Nullable<decimal> _CostPerItem;
		
		private EntityRef<BillingType> _BillingType;
		
		private EntityRef<Quote> _Quote;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnQuoteIDChanging(System.Nullable<long> value);
    partial void OnQuoteIDChanged();
    partial void OnBillingTypeIDChanging(System.Nullable<long> value);
    partial void OnBillingTypeIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDetailsChanging(string value);
    partial void OnDetailsChanged();
    partial void OnQuantityChanging(System.Nullable<int> value);
    partial void OnQuantityChanged();
    partial void OnCostPerItemChanging(System.Nullable<decimal> value);
    partial void OnCostPerItemChanged();
    #endregion
		
		public QuoteSupplement()
		{
			this._BillingType = default(EntityRef<BillingType>);
			this._Quote = default(EntityRef<Quote>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuoteID")]
		public System.Nullable<long> QuoteID
		{
			get
			{
				return this._QuoteID;
			}
			set
			{
				if ((this._QuoteID != value))
				{
					if (this._Quote.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnQuoteIDChanging(value);
					this.SendPropertyChanging();
					this._QuoteID = value;
					this.SendPropertyChanged("QuoteID");
					this.OnQuoteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillingTypeID")]
		public System.Nullable<long> BillingTypeID
		{
			get
			{
				return this._BillingTypeID;
			}
			set
			{
				if ((this._BillingTypeID != value))
				{
					if (this._BillingType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBillingTypeIDChanging(value);
					this.SendPropertyChanging();
					this._BillingTypeID = value;
					this.SendPropertyChanged("BillingTypeID");
					this.OnBillingTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Details")]
		public string Details
		{
			get
			{
				return this._Details;
			}
			set
			{
				if ((this._Details != value))
				{
					this.OnDetailsChanging(value);
					this.SendPropertyChanging();
					this._Details = value;
					this.SendPropertyChanged("Details");
					this.OnDetailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity")]
		public System.Nullable<int> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostPerItem")]
		public System.Nullable<decimal> CostPerItem
		{
			get
			{
				return this._CostPerItem;
			}
			set
			{
				if ((this._CostPerItem != value))
				{
					this.OnCostPerItemChanging(value);
					this.SendPropertyChanging();
					this._CostPerItem = value;
					this.SendPropertyChanged("CostPerItem");
					this.OnCostPerItemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BillingType_QuoteSupplement", Storage="_BillingType", ThisKey="BillingTypeID", OtherKey="ID", IsForeignKey=true)]
		public BillingType BillingType
		{
			get
			{
				return this._BillingType.Entity;
			}
			set
			{
				BillingType previousValue = this._BillingType.Entity;
				if (((previousValue != value) 
							|| (this._BillingType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BillingType.Entity = null;
						previousValue.QuoteSupplements.Remove(this);
					}
					this._BillingType.Entity = value;
					if ((value != null))
					{
						value.QuoteSupplements.Add(this);
						this._BillingTypeID = value.ID;
					}
					else
					{
						this._BillingTypeID = default(Nullable<long>);
					}
					this.SendPropertyChanged("BillingType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Quote_QuoteSupplement", Storage="_Quote", ThisKey="QuoteID", OtherKey="ID", IsForeignKey=true)]
		public Quote Quote
		{
			get
			{
				return this._Quote.Entity;
			}
			set
			{
				Quote previousValue = this._Quote.Entity;
				if (((previousValue != value) 
							|| (this._Quote.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Quote.Entity = null;
						previousValue.QuoteSupplements.Remove(this);
					}
					this._Quote.Entity = value;
					if ((value != null))
					{
						value.QuoteSupplements.Add(this);
						this._QuoteID = value.ID;
					}
					else
					{
						this._QuoteID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Quote");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class QuoteStorageItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Nullable<long> _QuoteID;
		
		private System.Nullable<long> _BillingTypeID;
		
		private System.Nullable<long> _CommodityID;
		
		private string _Details;
		
		private System.Nullable<int> _Quantity;
		
		private System.Nullable<decimal> _CostPerItem;
		
		private EntityRef<BillingType> _BillingType;
		
		private EntityRef<Quote> _Quote;
		
		private EntityRef<Commodity> _Commodity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnQuoteIDChanging(System.Nullable<long> value);
    partial void OnQuoteIDChanged();
    partial void OnBillingTypeIDChanging(System.Nullable<long> value);
    partial void OnBillingTypeIDChanged();
    partial void OnCommodityIDChanging(System.Nullable<long> value);
    partial void OnCommodityIDChanged();
    partial void OnDetailsChanging(string value);
    partial void OnDetailsChanged();
    partial void OnQuantityChanging(System.Nullable<int> value);
    partial void OnQuantityChanged();
    partial void OnCostPerItemChanging(System.Nullable<decimal> value);
    partial void OnCostPerItemChanged();
    #endregion
		
		public QuoteStorageItem()
		{
			this._BillingType = default(EntityRef<BillingType>);
			this._Quote = default(EntityRef<Quote>);
			this._Commodity = default(EntityRef<Commodity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuoteID")]
		public System.Nullable<long> QuoteID
		{
			get
			{
				return this._QuoteID;
			}
			set
			{
				if ((this._QuoteID != value))
				{
					if (this._Quote.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnQuoteIDChanging(value);
					this.SendPropertyChanging();
					this._QuoteID = value;
					this.SendPropertyChanged("QuoteID");
					this.OnQuoteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillingTypeID")]
		public System.Nullable<long> BillingTypeID
		{
			get
			{
				return this._BillingTypeID;
			}
			set
			{
				if ((this._BillingTypeID != value))
				{
					if (this._BillingType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBillingTypeIDChanging(value);
					this.SendPropertyChanging();
					this._BillingTypeID = value;
					this.SendPropertyChanged("BillingTypeID");
					this.OnBillingTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommodityID")]
		public System.Nullable<long> CommodityID
		{
			get
			{
				return this._CommodityID;
			}
			set
			{
				if ((this._CommodityID != value))
				{
					if (this._Commodity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCommodityIDChanging(value);
					this.SendPropertyChanging();
					this._CommodityID = value;
					this.SendPropertyChanged("CommodityID");
					this.OnCommodityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Details")]
		public string Details
		{
			get
			{
				return this._Details;
			}
			set
			{
				if ((this._Details != value))
				{
					this.OnDetailsChanging(value);
					this.SendPropertyChanging();
					this._Details = value;
					this.SendPropertyChanged("Details");
					this.OnDetailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity")]
		public System.Nullable<int> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostPerItem")]
		public System.Nullable<decimal> CostPerItem
		{
			get
			{
				return this._CostPerItem;
			}
			set
			{
				if ((this._CostPerItem != value))
				{
					this.OnCostPerItemChanging(value);
					this.SendPropertyChanging();
					this._CostPerItem = value;
					this.SendPropertyChanged("CostPerItem");
					this.OnCostPerItemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BillingType_QuoteStorageItem", Storage="_BillingType", ThisKey="BillingTypeID", OtherKey="ID", IsForeignKey=true)]
		public BillingType BillingType
		{
			get
			{
				return this._BillingType.Entity;
			}
			set
			{
				BillingType previousValue = this._BillingType.Entity;
				if (((previousValue != value) 
							|| (this._BillingType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BillingType.Entity = null;
						previousValue.QuoteStorageItem.Remove(this);
					}
					this._BillingType.Entity = value;
					if ((value != null))
					{
						value.QuoteStorageItem.Add(this);
						this._BillingTypeID = value.ID;
					}
					else
					{
						this._BillingTypeID = default(Nullable<long>);
					}
					this.SendPropertyChanged("BillingType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Quote_QuoteStorageItem", Storage="_Quote", ThisKey="QuoteID", OtherKey="ID", IsForeignKey=true)]
		public Quote Quote
		{
			get
			{
				return this._Quote.Entity;
			}
			set
			{
				Quote previousValue = this._Quote.Entity;
				if (((previousValue != value) 
							|| (this._Quote.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Quote.Entity = null;
						previousValue.QuoteStorageItems.Remove(this);
					}
					this._Quote.Entity = value;
					if ((value != null))
					{
						value.QuoteStorageItems.Add(this);
						this._QuoteID = value.ID;
					}
					else
					{
						this._QuoteID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Quote");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Commodity_QuoteStorageItem", Storage="_Commodity", ThisKey="CommodityID", OtherKey="ID", IsForeignKey=true)]
		public Commodity Commodity
		{
			get
			{
				return this._Commodity.Entity;
			}
			set
			{
				if ((this._Commodity.Entity != value))
				{
					this.SendPropertyChanging();
					this._Commodity.Entity = value;
					this.SendPropertyChanged("Commodity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class Inclusion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _Line;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnLineChanging(string value);
    partial void OnLineChanged();
    #endregion
		
		public Inclusion()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Line")]
		public string Line
		{
			get
			{
				return this._Line;
			}
			set
			{
				if ((this._Line != value))
				{
					this.OnLineChanging(value);
					this.SendPropertyChanging();
					this._Line = value;
					this.SendPropertyChanged("Line");
					this.OnLineChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class QuoteInclusion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Nullable<long> _QuoteID;
		
		private System.Nullable<long> _InclusionID;
		
		private EntityRef<Quote> _Quote;
		
		private EntityRef<Inclusion> _Inclusion;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnQuoteIDChanging(System.Nullable<long> value);
    partial void OnQuoteIDChanged();
    partial void OnInclusionIDChanging(System.Nullable<long> value);
    partial void OnInclusionIDChanged();
    #endregion
		
		public QuoteInclusion()
		{
			this._Quote = default(EntityRef<Quote>);
			this._Inclusion = default(EntityRef<Inclusion>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuoteID")]
		public System.Nullable<long> QuoteID
		{
			get
			{
				return this._QuoteID;
			}
			set
			{
				if ((this._QuoteID != value))
				{
					if (this._Quote.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnQuoteIDChanging(value);
					this.SendPropertyChanging();
					this._QuoteID = value;
					this.SendPropertyChanged("QuoteID");
					this.OnQuoteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InclusionID")]
		public System.Nullable<long> InclusionID
		{
			get
			{
				return this._InclusionID;
			}
			set
			{
				if ((this._InclusionID != value))
				{
					if (this._Inclusion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInclusionIDChanging(value);
					this.SendPropertyChanging();
					this._InclusionID = value;
					this.SendPropertyChanged("InclusionID");
					this.OnInclusionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Quote_QuoteInclusion", Storage="_Quote", ThisKey="QuoteID", OtherKey="ID", IsForeignKey=true)]
		public Quote Quote
		{
			get
			{
				return this._Quote.Entity;
			}
			set
			{
				Quote previousValue = this._Quote.Entity;
				if (((previousValue != value) 
							|| (this._Quote.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Quote.Entity = null;
						previousValue.QuoteInclusions.Remove(this);
					}
					this._Quote.Entity = value;
					if ((value != null))
					{
						value.QuoteInclusions.Add(this);
						this._QuoteID = value.ID;
					}
					else
					{
						this._QuoteID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Quote");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Inclusion_QuoteInclusion", Storage="_Inclusion", ThisKey="InclusionID", OtherKey="ID", IsForeignKey=true)]
		public Inclusion Inclusion
		{
			get
			{
				return this._Inclusion.Entity;
			}
			set
			{
				if ((this._Inclusion.Entity != value))
				{
					this.SendPropertyChanging();
					this._Inclusion.Entity = value;
					this.SendPropertyChanged("Inclusion");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class Condition : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _Line;
		
		private EntitySet<QuoteCondition> _QuoteConditions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnLineChanging(string value);
    partial void OnLineChanged();
    #endregion
		
		public Condition()
		{
			this._QuoteConditions = new EntitySet<QuoteCondition>(new Action<QuoteCondition>(this.attach_QuoteConditions), new Action<QuoteCondition>(this.detach_QuoteConditions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Line")]
		public string Line
		{
			get
			{
				return this._Line;
			}
			set
			{
				if ((this._Line != value))
				{
					this.OnLineChanging(value);
					this.SendPropertyChanging();
					this._Line = value;
					this.SendPropertyChanged("Line");
					this.OnLineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Condition_QuoteCondition", Storage="_QuoteConditions", ThisKey="ID", OtherKey="ConditionID")]
		public EntitySet<QuoteCondition> QuoteConditions
		{
			get
			{
				return this._QuoteConditions;
			}
			set
			{
				this._QuoteConditions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_QuoteConditions(QuoteCondition entity)
		{
			this.SendPropertyChanging();
			entity.OriginalCondition = this;
		}
		
		private void detach_QuoteConditions(QuoteCondition entity)
		{
			this.SendPropertyChanging();
			entity.OriginalCondition = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class QuoteCondition : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Nullable<long> _QuoteID;
		
		private System.Nullable<long> _ConditionID;
		
		private string _Line;
		
		private EntityRef<Quote> _Quote;
		
		private EntityRef<Condition> _OriginalCondition;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnQuoteIDChanging(System.Nullable<long> value);
    partial void OnQuoteIDChanged();
    partial void OnConditionIDChanging(System.Nullable<long> value);
    partial void OnConditionIDChanged();
    partial void OnLineChanging(string value);
    partial void OnLineChanged();
    #endregion
		
		public QuoteCondition()
		{
			this._Quote = default(EntityRef<Quote>);
			this._OriginalCondition = default(EntityRef<Condition>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuoteID")]
		public System.Nullable<long> QuoteID
		{
			get
			{
				return this._QuoteID;
			}
			set
			{
				if ((this._QuoteID != value))
				{
					if (this._Quote.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnQuoteIDChanging(value);
					this.SendPropertyChanging();
					this._QuoteID = value;
					this.SendPropertyChanged("QuoteID");
					this.OnQuoteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConditionID")]
		public System.Nullable<long> ConditionID
		{
			get
			{
				return this._ConditionID;
			}
			set
			{
				if ((this._ConditionID != value))
				{
					if (this._OriginalCondition.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnConditionIDChanging(value);
					this.SendPropertyChanging();
					this._ConditionID = value;
					this.SendPropertyChanged("ConditionID");
					this.OnConditionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Line")]
		public string Line
		{
			get
			{
				return this._Line;
			}
			set
			{
				if ((this._Line != value))
				{
					this.OnLineChanging(value);
					this.SendPropertyChanging();
					this._Line = value;
					this.SendPropertyChanged("Line");
					this.OnLineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Quote_QuoteCondition", Storage="_Quote", ThisKey="QuoteID", OtherKey="ID", IsForeignKey=true)]
		public Quote Quote
		{
			get
			{
				return this._Quote.Entity;
			}
			set
			{
				Quote previousValue = this._Quote.Entity;
				if (((previousValue != value) 
							|| (this._Quote.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Quote.Entity = null;
						previousValue.QuoteConditions.Remove(this);
					}
					this._Quote.Entity = value;
					if ((value != null))
					{
						value.QuoteConditions.Add(this);
						this._QuoteID = value.ID;
					}
					else
					{
						this._QuoteID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Quote");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Condition_QuoteCondition", Storage="_OriginalCondition", ThisKey="ConditionID", OtherKey="ID", IsForeignKey=true)]
		public Condition OriginalCondition
		{
			get
			{
				return this._OriginalCondition.Entity;
			}
			set
			{
				Condition previousValue = this._OriginalCondition.Entity;
				if (((previousValue != value) 
							|| (this._OriginalCondition.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OriginalCondition.Entity = null;
						previousValue.QuoteConditions.Remove(this);
					}
					this._OriginalCondition.Entity = value;
					if ((value != null))
					{
						value.QuoteConditions.Add(this);
						this._ConditionID = value.ID;
					}
					else
					{
						this._ConditionID = default(Nullable<long>);
					}
					this.SendPropertyChanged("OriginalCondition");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class Rate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Nullable<long> _RateTypeID;
		
		private string _Name;
		
		private System.Nullable<decimal> _HourlySpecialized;
		
		private System.Nullable<decimal> _HourlyEnterprise;
		
		private EntitySet<Load> _Loads;
		
		private EntitySet<Dispatch> _Dispatches;
		
		private EntitySet<TrailerCombination> _TrailerCombinations;
		
		private EntityRef<RateType> _RateType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnRateTypeIDChanging(System.Nullable<long> value);
    partial void OnRateTypeIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnHourlySpecializedChanging(System.Nullable<decimal> value);
    partial void OnHourlySpecializedChanged();
    partial void OnHourlyEnterpriseChanging(System.Nullable<decimal> value);
    partial void OnHourlyEnterpriseChanged();
    #endregion
		
		public Rate()
		{
			this._Loads = new EntitySet<Load>(new Action<Load>(this.attach_Loads), new Action<Load>(this.detach_Loads));
			this._Dispatches = new EntitySet<Dispatch>(new Action<Dispatch>(this.attach_Dispatches), new Action<Dispatch>(this.detach_Dispatches));
			this._TrailerCombinations = new EntitySet<TrailerCombination>(new Action<TrailerCombination>(this.attach_TrailerCombinations), new Action<TrailerCombination>(this.detach_TrailerCombinations));
			this._RateType = default(EntityRef<RateType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RateTypeID")]
		public System.Nullable<long> RateTypeID
		{
			get
			{
				return this._RateTypeID;
			}
			set
			{
				if ((this._RateTypeID != value))
				{
					if (this._RateType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRateTypeIDChanging(value);
					this.SendPropertyChanging();
					this._RateTypeID = value;
					this.SendPropertyChanged("RateTypeID");
					this.OnRateTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HourlySpecialized")]
		public System.Nullable<decimal> HourlySpecialized
		{
			get
			{
				return this._HourlySpecialized;
			}
			set
			{
				if ((this._HourlySpecialized != value))
				{
					this.OnHourlySpecializedChanging(value);
					this.SendPropertyChanging();
					this._HourlySpecialized = value;
					this.SendPropertyChanged("HourlySpecialized");
					this.OnHourlySpecializedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HourlyEnterprise")]
		public System.Nullable<decimal> HourlyEnterprise
		{
			get
			{
				return this._HourlyEnterprise;
			}
			set
			{
				if ((this._HourlyEnterprise != value))
				{
					this.OnHourlyEnterpriseChanging(value);
					this.SendPropertyChanging();
					this._HourlyEnterprise = value;
					this.SendPropertyChanged("HourlyEnterprise");
					this.OnHourlyEnterpriseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rate_Load", Storage="_Loads", ThisKey="ID", OtherKey="RateID")]
		public EntitySet<Load> Loads
		{
			get
			{
				return this._Loads;
			}
			set
			{
				this._Loads.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rate_Dispatch", Storage="_Dispatches", ThisKey="ID", OtherKey="RateID")]
		public EntitySet<Dispatch> Dispatches
		{
			get
			{
				return this._Dispatches;
			}
			set
			{
				this._Dispatches.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rate_TrailerCombination", Storage="_TrailerCombinations", ThisKey="ID", OtherKey="RateID")]
		public EntitySet<TrailerCombination> TrailerCombinations
		{
			get
			{
				return this._TrailerCombinations;
			}
			set
			{
				this._TrailerCombinations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RateType_Rate", Storage="_RateType", ThisKey="RateTypeID", OtherKey="ID", IsForeignKey=true)]
		public RateType RateType
		{
			get
			{
				return this._RateType.Entity;
			}
			set
			{
				RateType previousValue = this._RateType.Entity;
				if (((previousValue != value) 
							|| (this._RateType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RateType.Entity = null;
						previousValue.Rates.Remove(this);
					}
					this._RateType.Entity = value;
					if ((value != null))
					{
						value.Rates.Add(this);
						this._RateTypeID = value.ID;
					}
					else
					{
						this._RateTypeID = default(Nullable<long>);
					}
					this.SendPropertyChanged("RateType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Loads(Load entity)
		{
			this.SendPropertyChanging();
			entity.Rate = this;
		}
		
		private void detach_Loads(Load entity)
		{
			this.SendPropertyChanging();
			entity.Rate = null;
		}
		
		private void attach_Dispatches(Dispatch entity)
		{
			this.SendPropertyChanging();
			entity.Rate = this;
		}
		
		private void detach_Dispatches(Dispatch entity)
		{
			this.SendPropertyChanging();
			entity.Rate = null;
		}
		
		private void attach_TrailerCombinations(TrailerCombination entity)
		{
			this.SendPropertyChanging();
			entity.Rate = this;
		}
		
		private void detach_TrailerCombinations(TrailerCombination entity)
		{
			this.SendPropertyChanging();
			entity.Rate = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class RateType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _Name;
		
		private EntitySet<Rate> _Rates;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public RateType()
		{
			this._Rates = new EntitySet<Rate>(new Action<Rate>(this.attach_Rates), new Action<Rate>(this.detach_Rates));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RateType_Rate", Storage="_Rates", ThisKey="ID", OtherKey="RateTypeID")]
		public EntitySet<Rate> Rates
		{
			get
			{
				return this._Rates;
			}
			set
			{
				this._Rates.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Rates(Rate entity)
		{
			this.SendPropertyChanging();
			entity.RateType = this;
		}
		
		private void detach_Rates(Rate entity)
		{
			this.SendPropertyChanging();
			entity.RateType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class Season : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _Name;
		
		private EntitySet<Load> _Loads;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public Season()
		{
			this._Loads = new EntitySet<Load>(new Action<Load>(this.attach_Loads), new Action<Load>(this.detach_Loads));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Season_Load", Storage="_Loads", ThisKey="ID", OtherKey="SeasonID")]
		public EntitySet<Load> Loads
		{
			get
			{
				return this._Loads;
			}
			set
			{
				this._Loads.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Loads(Load entity)
		{
			this.SendPropertyChanging();
			entity.Season = this;
		}
		
		private void detach_Loads(Load entity)
		{
			this.SendPropertyChanging();
			entity.Season = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class Service : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Nullable<long> _CompanyID;
		
		private System.Nullable<long> _ServiceTypeID;
		
		private EntityRef<Company> _Company;
		
		private EntityRef<ServiceType> _ServiceType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnCompanyIDChanging(System.Nullable<long> value);
    partial void OnCompanyIDChanged();
    partial void OnServiceTypeIDChanging(System.Nullable<long> value);
    partial void OnServiceTypeIDChanged();
    #endregion
		
		public Service()
		{
			this._Company = default(EntityRef<Company>);
			this._ServiceType = default(EntityRef<ServiceType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID")]
		public System.Nullable<long> CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					if (this._Company.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceTypeID")]
		public System.Nullable<long> ServiceTypeID
		{
			get
			{
				return this._ServiceTypeID;
			}
			set
			{
				if ((this._ServiceTypeID != value))
				{
					if (this._ServiceType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnServiceTypeIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceTypeID = value;
					this.SendPropertyChanged("ServiceTypeID");
					this.OnServiceTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_Service", Storage="_Company", ThisKey="CompanyID", OtherKey="ID", IsForeignKey=true)]
		public Company Company
		{
			get
			{
				return this._Company.Entity;
			}
			set
			{
				Company previousValue = this._Company.Entity;
				if (((previousValue != value) 
							|| (this._Company.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Company.Entity = null;
						previousValue.Services.Remove(this);
					}
					this._Company.Entity = value;
					if ((value != null))
					{
						value.Services.Add(this);
						this._CompanyID = value.ID;
					}
					else
					{
						this._CompanyID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Company");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceType_Service", Storage="_ServiceType", ThisKey="ServiceTypeID", OtherKey="ID", IsForeignKey=true)]
		public ServiceType ServiceType
		{
			get
			{
				return this._ServiceType.Entity;
			}
			set
			{
				ServiceType previousValue = this._ServiceType.Entity;
				if (((previousValue != value) 
							|| (this._ServiceType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ServiceType.Entity = null;
						previousValue.Services.Remove(this);
					}
					this._ServiceType.Entity = value;
					if ((value != null))
					{
						value.Services.Add(this);
						this._ServiceTypeID = value.ID;
					}
					else
					{
						this._ServiceTypeID = default(Nullable<long>);
					}
					this.SendPropertyChanged("ServiceType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class ServiceType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _Name;
		
		private EntitySet<Service> _Services;
		
		private EntitySet<ThirdPartyService> _ThirdPartyServices;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public ServiceType()
		{
			this._Services = new EntitySet<Service>(new Action<Service>(this.attach_Services), new Action<Service>(this.detach_Services));
			this._ThirdPartyServices = new EntitySet<ThirdPartyService>(new Action<ThirdPartyService>(this.attach_ThirdPartyServices), new Action<ThirdPartyService>(this.detach_ThirdPartyServices));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceType_Service", Storage="_Services", ThisKey="ID", OtherKey="ServiceTypeID")]
		public EntitySet<Service> Services
		{
			get
			{
				return this._Services;
			}
			set
			{
				this._Services.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceType_ThirdPartyService", Storage="_ThirdPartyServices", ThisKey="ID", OtherKey="ServiceTypeID")]
		public EntitySet<ThirdPartyService> ThirdPartyServices
		{
			get
			{
				return this._ThirdPartyServices;
			}
			set
			{
				this._ThirdPartyServices.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Services(Service entity)
		{
			this.SendPropertyChanging();
			entity.ServiceType = this;
		}
		
		private void detach_Services(Service entity)
		{
			this.SendPropertyChanging();
			entity.ServiceType = null;
		}
		
		private void attach_ThirdPartyServices(ThirdPartyService entity)
		{
			this.SendPropertyChanging();
			entity.ServiceType = this;
		}
		
		private void detach_ThirdPartyServices(ThirdPartyService entity)
		{
			this.SendPropertyChanging();
			entity.ServiceType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class ThirdPartyService : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Nullable<long> _JobID;
		
		private System.Nullable<long> _LoadID;
		
		private System.Nullable<long> _CompanyID;
		
		private System.Nullable<long> _ServiceTypeID;
		
		private System.Nullable<long> _ContactID;
		
		private System.Nullable<System.DateTime> _ServiceDate;
		
		private string _Location;
		
		private string _Reference;
		
		private string _Notes;
		
		private EntityRef<Company> _Company;
		
		private EntityRef<Contact> _Contact;
		
		private EntityRef<Job> _Job;
		
		private EntityRef<Load> _Load;
		
		private EntityRef<ServiceType> _ServiceType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnJobIDChanging(System.Nullable<long> value);
    partial void OnJobIDChanged();
    partial void OnLoadIDChanging(System.Nullable<long> value);
    partial void OnLoadIDChanged();
    partial void OnCompanyIDChanging(System.Nullable<long> value);
    partial void OnCompanyIDChanged();
    partial void OnServiceTypeIDChanging(System.Nullable<long> value);
    partial void OnServiceTypeIDChanged();
    partial void OnContactIDChanging(System.Nullable<long> value);
    partial void OnContactIDChanged();
    partial void OnServiceDateChanging(System.Nullable<System.DateTime> value);
    partial void OnServiceDateChanged();
    partial void OnLocationChanging(string value);
    partial void OnLocationChanged();
    partial void OnReferenceChanging(string value);
    partial void OnReferenceChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    #endregion
		
		public ThirdPartyService()
		{
			this._Company = default(EntityRef<Company>);
			this._Contact = default(EntityRef<Contact>);
			this._Job = default(EntityRef<Job>);
			this._Load = default(EntityRef<Load>);
			this._ServiceType = default(EntityRef<ServiceType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobID")]
		public System.Nullable<long> JobID
		{
			get
			{
				return this._JobID;
			}
			set
			{
				if ((this._JobID != value))
				{
					if (this._Job.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJobIDChanging(value);
					this.SendPropertyChanging();
					this._JobID = value;
					this.SendPropertyChanged("JobID");
					this.OnJobIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoadID")]
		public System.Nullable<long> LoadID
		{
			get
			{
				return this._LoadID;
			}
			set
			{
				if ((this._LoadID != value))
				{
					if (this._Load.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLoadIDChanging(value);
					this.SendPropertyChanging();
					this._LoadID = value;
					this.SendPropertyChanged("LoadID");
					this.OnLoadIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID")]
		public System.Nullable<long> CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					if (this._Company.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceTypeID")]
		public System.Nullable<long> ServiceTypeID
		{
			get
			{
				return this._ServiceTypeID;
			}
			set
			{
				if ((this._ServiceTypeID != value))
				{
					if (this._ServiceType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnServiceTypeIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceTypeID = value;
					this.SendPropertyChanged("ServiceTypeID");
					this.OnServiceTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactID")]
		public System.Nullable<long> ContactID
		{
			get
			{
				return this._ContactID;
			}
			set
			{
				if ((this._ContactID != value))
				{
					if (this._Contact.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContactIDChanging(value);
					this.SendPropertyChanging();
					this._ContactID = value;
					this.SendPropertyChanged("ContactID");
					this.OnContactIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceDate")]
		public System.Nullable<System.DateTime> ServiceDate
		{
			get
			{
				return this._ServiceDate;
			}
			set
			{
				if ((this._ServiceDate != value))
				{
					this.OnServiceDateChanging(value);
					this.SendPropertyChanging();
					this._ServiceDate = value;
					this.SendPropertyChanged("ServiceDate");
					this.OnServiceDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location")]
		public string Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				if ((this._Location != value))
				{
					this.OnLocationChanging(value);
					this.SendPropertyChanging();
					this._Location = value;
					this.SendPropertyChanged("Location");
					this.OnLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reference")]
		public string Reference
		{
			get
			{
				return this._Reference;
			}
			set
			{
				if ((this._Reference != value))
				{
					this.OnReferenceChanging(value);
					this.SendPropertyChanging();
					this._Reference = value;
					this.SendPropertyChanged("Reference");
					this.OnReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_ThirdPartyService", Storage="_Company", ThisKey="CompanyID", OtherKey="ID", IsForeignKey=true)]
		public Company Company
		{
			get
			{
				return this._Company.Entity;
			}
			set
			{
				Company previousValue = this._Company.Entity;
				if (((previousValue != value) 
							|| (this._Company.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Company.Entity = null;
						previousValue.ThirdPartyServices.Remove(this);
					}
					this._Company.Entity = value;
					if ((value != null))
					{
						value.ThirdPartyServices.Add(this);
						this._CompanyID = value.ID;
					}
					else
					{
						this._CompanyID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Company");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contact_ThirdPartyService", Storage="_Contact", ThisKey="ContactID", OtherKey="ID", IsForeignKey=true)]
		public Contact Contact
		{
			get
			{
				return this._Contact.Entity;
			}
			set
			{
				Contact previousValue = this._Contact.Entity;
				if (((previousValue != value) 
							|| (this._Contact.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Contact.Entity = null;
						previousValue.ThirdPartyServices.Remove(this);
					}
					this._Contact.Entity = value;
					if ((value != null))
					{
						value.ThirdPartyServices.Add(this);
						this._ContactID = value.ID;
					}
					else
					{
						this._ContactID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Contact");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Job_ThirdPartyService", Storage="_Job", ThisKey="JobID", OtherKey="ID", IsForeignKey=true)]
		public Job Job
		{
			get
			{
				return this._Job.Entity;
			}
			set
			{
				Job previousValue = this._Job.Entity;
				if (((previousValue != value) 
							|| (this._Job.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Job.Entity = null;
						previousValue.ThirdPartyServices.Remove(this);
					}
					this._Job.Entity = value;
					if ((value != null))
					{
						value.ThirdPartyServices.Add(this);
						this._JobID = value.ID;
					}
					else
					{
						this._JobID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Job");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Load_ThirdPartyService", Storage="_Load", ThisKey="LoadID", OtherKey="ID", IsForeignKey=true)]
		public Load Load
		{
			get
			{
				return this._Load.Entity;
			}
			set
			{
				Load previousValue = this._Load.Entity;
				if (((previousValue != value) 
							|| (this._Load.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Load.Entity = null;
						previousValue.ThirdPartyServices.Remove(this);
					}
					this._Load.Entity = value;
					if ((value != null))
					{
						value.ThirdPartyServices.Add(this);
						this._LoadID = value.ID;
					}
					else
					{
						this._LoadID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Load");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceType_ThirdPartyService", Storage="_ServiceType", ThisKey="ServiceTypeID", OtherKey="ID", IsForeignKey=true)]
		public ServiceType ServiceType
		{
			get
			{
				return this._ServiceType.Entity;
			}
			set
			{
				ServiceType previousValue = this._ServiceType.Entity;
				if (((previousValue != value) 
							|| (this._ServiceType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ServiceType.Entity = null;
						previousValue.ThirdPartyServices.Remove(this);
					}
					this._ServiceType.Entity = value;
					if ((value != null))
					{
						value.ThirdPartyServices.Add(this);
						this._ServiceTypeID = value.ID;
					}
					else
					{
						this._ServiceTypeID = default(Nullable<long>);
					}
					this.SendPropertyChanged("ServiceType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class Equipment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Nullable<long> _DefaultDriverID;
		
		private System.Nullable<long> _ClassID;
		
		private string _UnitNumber;
		
		private string _Serial;
		
		private string _Make;
		
		private string _Model;
		
		private string _Year;
		
		private string _LicencePlate;
		
		private string _EngineMake;
		
		private string _EngineModel;
		
		private string _EngineType;
		
		private System.Nullable<bool> _IsDispatchable;
		
		private string _Tare;
		
		private System.Nullable<double> _Height;
		
		private string _AxleConfig;
		
		private System.Nullable<bool> _HasWinch;
		
		private string _SteerTireSize;
		
		private string _DriveTireSize;
		
		private System.Nullable<bool> _IsProrated;
		
		private System.Nullable<bool> _IsOnlyForScheuerle;
		
		private System.Nullable<bool> _IsOnlyForPushing;
		
		private System.Nullable<System.DateTime> _InServiceDate;
		
		private System.Nullable<System.DateTime> _OutOfServiceDate;
		
		private EntitySet<Load> _Loads;
		
		private EntitySet<Dispatch> _Dispatches;
		
		private EntityRef<Employee> _Employee;
		
		private EntityRef<EquipmentClass> _EquipmentClass;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnDefaultDriverIDChanging(System.Nullable<long> value);
    partial void OnDefaultDriverIDChanged();
    partial void OnClassIDChanging(System.Nullable<long> value);
    partial void OnClassIDChanged();
    partial void OnUnitNumberChanging(string value);
    partial void OnUnitNumberChanged();
    partial void OnSerialChanging(string value);
    partial void OnSerialChanged();
    partial void OnMakeChanging(string value);
    partial void OnMakeChanged();
    partial void OnModelChanging(string value);
    partial void OnModelChanged();
    partial void OnYearChanging(string value);
    partial void OnYearChanged();
    partial void OnLicencePlateChanging(string value);
    partial void OnLicencePlateChanged();
    partial void OnEngineMakeChanging(string value);
    partial void OnEngineMakeChanged();
    partial void OnEngineModelChanging(string value);
    partial void OnEngineModelChanged();
    partial void OnEngineTypeChanging(string value);
    partial void OnEngineTypeChanged();
    partial void OnIsDispatchableChanging(System.Nullable<bool> value);
    partial void OnIsDispatchableChanged();
    partial void OnTareChanging(string value);
    partial void OnTareChanged();
    partial void OnHeightChanging(System.Nullable<double> value);
    partial void OnHeightChanged();
    partial void OnAxleConfigChanging(string value);
    partial void OnAxleConfigChanged();
    partial void OnHasWinchChanging(System.Nullable<bool> value);
    partial void OnHasWinchChanged();
    partial void OnSteerTireSizeChanging(string value);
    partial void OnSteerTireSizeChanged();
    partial void OnDriveTireSizeChanging(string value);
    partial void OnDriveTireSizeChanged();
    partial void OnIsProratedChanging(System.Nullable<bool> value);
    partial void OnIsProratedChanged();
    partial void OnIsOnlyForScheuerleChanging(System.Nullable<bool> value);
    partial void OnIsOnlyForScheuerleChanged();
    partial void OnIsOnlyForPushingChanging(System.Nullable<bool> value);
    partial void OnIsOnlyForPushingChanged();
    partial void OnInServiceDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInServiceDateChanged();
    partial void OnOutOfServiceDateChanging(System.Nullable<System.DateTime> value);
    partial void OnOutOfServiceDateChanged();
    #endregion
		
		public Equipment()
		{
			this._Loads = new EntitySet<Load>(new Action<Load>(this.attach_Loads), new Action<Load>(this.detach_Loads));
			this._Dispatches = new EntitySet<Dispatch>(new Action<Dispatch>(this.attach_Dispatches), new Action<Dispatch>(this.detach_Dispatches));
			this._Employee = default(EntityRef<Employee>);
			this._EquipmentClass = default(EntityRef<EquipmentClass>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultDriverID")]
		public System.Nullable<long> DefaultDriverID
		{
			get
			{
				return this._DefaultDriverID;
			}
			set
			{
				if ((this._DefaultDriverID != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDefaultDriverIDChanging(value);
					this.SendPropertyChanging();
					this._DefaultDriverID = value;
					this.SendPropertyChanged("DefaultDriverID");
					this.OnDefaultDriverIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassID")]
		public System.Nullable<long> ClassID
		{
			get
			{
				return this._ClassID;
			}
			set
			{
				if ((this._ClassID != value))
				{
					if (this._EquipmentClass.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClassIDChanging(value);
					this.SendPropertyChanging();
					this._ClassID = value;
					this.SendPropertyChanged("ClassID");
					this.OnClassIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitNumber")]
		public string UnitNumber
		{
			get
			{
				return this._UnitNumber;
			}
			set
			{
				if ((this._UnitNumber != value))
				{
					this.OnUnitNumberChanging(value);
					this.SendPropertyChanging();
					this._UnitNumber = value;
					this.SendPropertyChanged("UnitNumber");
					this.OnUnitNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Serial")]
		public string Serial
		{
			get
			{
				return this._Serial;
			}
			set
			{
				if ((this._Serial != value))
				{
					this.OnSerialChanging(value);
					this.SendPropertyChanging();
					this._Serial = value;
					this.SendPropertyChanged("Serial");
					this.OnSerialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Make")]
		public string Make
		{
			get
			{
				return this._Make;
			}
			set
			{
				if ((this._Make != value))
				{
					this.OnMakeChanging(value);
					this.SendPropertyChanging();
					this._Make = value;
					this.SendPropertyChanged("Make");
					this.OnMakeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Model")]
		public string Model
		{
			get
			{
				return this._Model;
			}
			set
			{
				if ((this._Model != value))
				{
					this.OnModelChanging(value);
					this.SendPropertyChanging();
					this._Model = value;
					this.SendPropertyChanged("Model");
					this.OnModelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year")]
		public string Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LicencePlate")]
		public string LicencePlate
		{
			get
			{
				return this._LicencePlate;
			}
			set
			{
				if ((this._LicencePlate != value))
				{
					this.OnLicencePlateChanging(value);
					this.SendPropertyChanging();
					this._LicencePlate = value;
					this.SendPropertyChanged("LicencePlate");
					this.OnLicencePlateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EngineMake")]
		public string EngineMake
		{
			get
			{
				return this._EngineMake;
			}
			set
			{
				if ((this._EngineMake != value))
				{
					this.OnEngineMakeChanging(value);
					this.SendPropertyChanging();
					this._EngineMake = value;
					this.SendPropertyChanged("EngineMake");
					this.OnEngineMakeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EngineModel")]
		public string EngineModel
		{
			get
			{
				return this._EngineModel;
			}
			set
			{
				if ((this._EngineModel != value))
				{
					this.OnEngineModelChanging(value);
					this.SendPropertyChanging();
					this._EngineModel = value;
					this.SendPropertyChanged("EngineModel");
					this.OnEngineModelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EngineType")]
		public string EngineType
		{
			get
			{
				return this._EngineType;
			}
			set
			{
				if ((this._EngineType != value))
				{
					this.OnEngineTypeChanging(value);
					this.SendPropertyChanging();
					this._EngineType = value;
					this.SendPropertyChanged("EngineType");
					this.OnEngineTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDispatchable")]
		public System.Nullable<bool> IsDispatchable
		{
			get
			{
				return this._IsDispatchable;
			}
			set
			{
				if ((this._IsDispatchable != value))
				{
					this.OnIsDispatchableChanging(value);
					this.SendPropertyChanging();
					this._IsDispatchable = value;
					this.SendPropertyChanged("IsDispatchable");
					this.OnIsDispatchableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tare")]
		public string Tare
		{
			get
			{
				return this._Tare;
			}
			set
			{
				if ((this._Tare != value))
				{
					this.OnTareChanging(value);
					this.SendPropertyChanging();
					this._Tare = value;
					this.SendPropertyChanged("Tare");
					this.OnTareChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Height")]
		public System.Nullable<double> Height
		{
			get
			{
				return this._Height;
			}
			set
			{
				if ((this._Height != value))
				{
					this.OnHeightChanging(value);
					this.SendPropertyChanging();
					this._Height = value;
					this.SendPropertyChanged("Height");
					this.OnHeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AxleConfig")]
		public string AxleConfig
		{
			get
			{
				return this._AxleConfig;
			}
			set
			{
				if ((this._AxleConfig != value))
				{
					this.OnAxleConfigChanging(value);
					this.SendPropertyChanging();
					this._AxleConfig = value;
					this.SendPropertyChanged("AxleConfig");
					this.OnAxleConfigChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasWinch")]
		public System.Nullable<bool> HasWinch
		{
			get
			{
				return this._HasWinch;
			}
			set
			{
				if ((this._HasWinch != value))
				{
					this.OnHasWinchChanging(value);
					this.SendPropertyChanging();
					this._HasWinch = value;
					this.SendPropertyChanged("HasWinch");
					this.OnHasWinchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SteerTireSize")]
		public string SteerTireSize
		{
			get
			{
				return this._SteerTireSize;
			}
			set
			{
				if ((this._SteerTireSize != value))
				{
					this.OnSteerTireSizeChanging(value);
					this.SendPropertyChanging();
					this._SteerTireSize = value;
					this.SendPropertyChanged("SteerTireSize");
					this.OnSteerTireSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DriveTireSize")]
		public string DriveTireSize
		{
			get
			{
				return this._DriveTireSize;
			}
			set
			{
				if ((this._DriveTireSize != value))
				{
					this.OnDriveTireSizeChanging(value);
					this.SendPropertyChanging();
					this._DriveTireSize = value;
					this.SendPropertyChanged("DriveTireSize");
					this.OnDriveTireSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsProrated")]
		public System.Nullable<bool> IsProrated
		{
			get
			{
				return this._IsProrated;
			}
			set
			{
				if ((this._IsProrated != value))
				{
					this.OnIsProratedChanging(value);
					this.SendPropertyChanging();
					this._IsProrated = value;
					this.SendPropertyChanged("IsProrated");
					this.OnIsProratedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOnlyForScheuerle")]
		public System.Nullable<bool> IsOnlyForScheuerle
		{
			get
			{
				return this._IsOnlyForScheuerle;
			}
			set
			{
				if ((this._IsOnlyForScheuerle != value))
				{
					this.OnIsOnlyForScheuerleChanging(value);
					this.SendPropertyChanging();
					this._IsOnlyForScheuerle = value;
					this.SendPropertyChanged("IsOnlyForScheuerle");
					this.OnIsOnlyForScheuerleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOnlyForPushing")]
		public System.Nullable<bool> IsOnlyForPushing
		{
			get
			{
				return this._IsOnlyForPushing;
			}
			set
			{
				if ((this._IsOnlyForPushing != value))
				{
					this.OnIsOnlyForPushingChanging(value);
					this.SendPropertyChanging();
					this._IsOnlyForPushing = value;
					this.SendPropertyChanged("IsOnlyForPushing");
					this.OnIsOnlyForPushingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InServiceDate")]
		public System.Nullable<System.DateTime> InServiceDate
		{
			get
			{
				return this._InServiceDate;
			}
			set
			{
				if ((this._InServiceDate != value))
				{
					this.OnInServiceDateChanging(value);
					this.SendPropertyChanging();
					this._InServiceDate = value;
					this.SendPropertyChanged("InServiceDate");
					this.OnInServiceDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OutOfServiceDate")]
		public System.Nullable<System.DateTime> OutOfServiceDate
		{
			get
			{
				return this._OutOfServiceDate;
			}
			set
			{
				if ((this._OutOfServiceDate != value))
				{
					this.OnOutOfServiceDateChanging(value);
					this.SendPropertyChanging();
					this._OutOfServiceDate = value;
					this.SendPropertyChanged("OutOfServiceDate");
					this.OnOutOfServiceDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Equipment_Load", Storage="_Loads", ThisKey="ID", OtherKey="EquipmentID")]
		public EntitySet<Load> Loads
		{
			get
			{
				return this._Loads;
			}
			set
			{
				this._Loads.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Equipment_Dispatch", Storage="_Dispatches", ThisKey="ID", OtherKey="EquipmentID")]
		public EntitySet<Dispatch> Dispatches
		{
			get
			{
				return this._Dispatches;
			}
			set
			{
				this._Dispatches.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Equipment", Storage="_Employee", ThisKey="DefaultDriverID", OtherKey="ID", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.Equipments.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.Equipments.Add(this);
						this._DefaultDriverID = value.ID;
					}
					else
					{
						this._DefaultDriverID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EquipmentClass_Equipment", Storage="_EquipmentClass", ThisKey="ClassID", OtherKey="ID", IsForeignKey=true)]
		public EquipmentClass EquipmentClass
		{
			get
			{
				return this._EquipmentClass.Entity;
			}
			set
			{
				EquipmentClass previousValue = this._EquipmentClass.Entity;
				if (((previousValue != value) 
							|| (this._EquipmentClass.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EquipmentClass.Entity = null;
						previousValue.Equipments.Remove(this);
					}
					this._EquipmentClass.Entity = value;
					if ((value != null))
					{
						value.Equipments.Add(this);
						this._ClassID = value.ID;
					}
					else
					{
						this._ClassID = default(Nullable<long>);
					}
					this.SendPropertyChanged("EquipmentClass");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Loads(Load entity)
		{
			this.SendPropertyChanging();
			entity.Equipment = this;
		}
		
		private void detach_Loads(Load entity)
		{
			this.SendPropertyChanging();
			entity.Equipment = null;
		}
		
		private void attach_Dispatches(Dispatch entity)
		{
			this.SendPropertyChanging();
			entity.Equipment = this;
		}
		
		private void detach_Dispatches(Dispatch entity)
		{
			this.SendPropertyChanging();
			entity.Equipment = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class EquipmentClass : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _Name;
		
		private EntitySet<Equipment> _Equipments;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public EquipmentClass()
		{
			this._Equipments = new EntitySet<Equipment>(new Action<Equipment>(this.attach_Equipments), new Action<Equipment>(this.detach_Equipments));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EquipmentClass_Equipment", Storage="_Equipments", ThisKey="ID", OtherKey="ClassID")]
		public EntitySet<Equipment> Equipments
		{
			get
			{
				return this._Equipments;
			}
			set
			{
				this._Equipments.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Equipments(Equipment entity)
		{
			this.SendPropertyChanging();
			entity.EquipmentClass = this;
		}
		
		private void detach_Equipments(Equipment entity)
		{
			this.SendPropertyChanging();
			entity.EquipmentClass = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class Dispatch : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Nullable<long> _JobID;
		
		private System.Nullable<long> _LoadID;
		
		private System.Nullable<long> _EmployeeID;
		
		private System.Nullable<long> _EquipmentID;
		
		private System.Nullable<int> _Number;
		
		private string _Description;
		
		private string _Schedule;
		
		private System.Nullable<System.DateTime> _MeetingTime;
		
		private string _Location;
		
		private string _Notes;
		
		private System.Nullable<long> _RateID;
		
		private EntityRef<Equipment> _Equipment;
		
		private EntityRef<Job> _Job;
		
		private EntityRef<Load> _Load;
		
		private EntityRef<Rate> _Rate;
		
		private EntityRef<Employee> _Employee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnJobIDChanging(System.Nullable<long> value);
    partial void OnJobIDChanged();
    partial void OnLoadIDChanging(System.Nullable<long> value);
    partial void OnLoadIDChanged();
    partial void OnEmployeeIDChanging(System.Nullable<long> value);
    partial void OnEmployeeIDChanged();
    partial void OnEquipmentIDChanging(System.Nullable<long> value);
    partial void OnEquipmentIDChanged();
    partial void OnNumberChanging(System.Nullable<int> value);
    partial void OnNumberChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnScheduleChanging(string value);
    partial void OnScheduleChanged();
    partial void OnMeetingTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnMeetingTimeChanged();
    partial void OnLocationChanging(string value);
    partial void OnLocationChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnRateIDChanging(System.Nullable<long> value);
    partial void OnRateIDChanged();
    #endregion
		
		public Dispatch()
		{
			this._Equipment = default(EntityRef<Equipment>);
			this._Job = default(EntityRef<Job>);
			this._Load = default(EntityRef<Load>);
			this._Rate = default(EntityRef<Rate>);
			this._Employee = default(EntityRef<Employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobID")]
		public System.Nullable<long> JobID
		{
			get
			{
				return this._JobID;
			}
			set
			{
				if ((this._JobID != value))
				{
					if (this._Job.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJobIDChanging(value);
					this.SendPropertyChanging();
					this._JobID = value;
					this.SendPropertyChanged("JobID");
					this.OnJobIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoadID")]
		public System.Nullable<long> LoadID
		{
			get
			{
				return this._LoadID;
			}
			set
			{
				if ((this._LoadID != value))
				{
					if (this._Load.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLoadIDChanging(value);
					this.SendPropertyChanging();
					this._LoadID = value;
					this.SendPropertyChanged("LoadID");
					this.OnLoadIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeID")]
		public System.Nullable<long> EmployeeID
		{
			get
			{
				return this._EmployeeID;
			}
			set
			{
				if ((this._EmployeeID != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeIDChanging(value);
					this.SendPropertyChanging();
					this._EmployeeID = value;
					this.SendPropertyChanged("EmployeeID");
					this.OnEmployeeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EquipmentID")]
		public System.Nullable<long> EquipmentID
		{
			get
			{
				return this._EquipmentID;
			}
			set
			{
				if ((this._EquipmentID != value))
				{
					if (this._Equipment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEquipmentIDChanging(value);
					this.SendPropertyChanging();
					this._EquipmentID = value;
					this.SendPropertyChanged("EquipmentID");
					this.OnEquipmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number")]
		public System.Nullable<int> Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this.OnNumberChanging(value);
					this.SendPropertyChanging();
					this._Number = value;
					this.SendPropertyChanged("Number");
					this.OnNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Schedule")]
		public string Schedule
		{
			get
			{
				return this._Schedule;
			}
			set
			{
				if ((this._Schedule != value))
				{
					this.OnScheduleChanging(value);
					this.SendPropertyChanging();
					this._Schedule = value;
					this.SendPropertyChanged("Schedule");
					this.OnScheduleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeetingTime")]
		public System.Nullable<System.DateTime> MeetingTime
		{
			get
			{
				return this._MeetingTime;
			}
			set
			{
				if ((this._MeetingTime != value))
				{
					this.OnMeetingTimeChanging(value);
					this.SendPropertyChanging();
					this._MeetingTime = value;
					this.SendPropertyChanged("MeetingTime");
					this.OnMeetingTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location")]
		public string Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				if ((this._Location != value))
				{
					this.OnLocationChanging(value);
					this.SendPropertyChanging();
					this._Location = value;
					this.SendPropertyChanged("Location");
					this.OnLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", UpdateCheck=UpdateCheck.Never)]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RateID")]
		public System.Nullable<long> RateID
		{
			get
			{
				return this._RateID;
			}
			set
			{
				if ((this._RateID != value))
				{
					if (this._Rate.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRateIDChanging(value);
					this.SendPropertyChanging();
					this._RateID = value;
					this.SendPropertyChanged("RateID");
					this.OnRateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Equipment_Dispatch", Storage="_Equipment", ThisKey="EquipmentID", OtherKey="ID", IsForeignKey=true)]
		public Equipment Equipment
		{
			get
			{
				return this._Equipment.Entity;
			}
			set
			{
				Equipment previousValue = this._Equipment.Entity;
				if (((previousValue != value) 
							|| (this._Equipment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Equipment.Entity = null;
						previousValue.Dispatches.Remove(this);
					}
					this._Equipment.Entity = value;
					if ((value != null))
					{
						value.Dispatches.Add(this);
						this._EquipmentID = value.ID;
					}
					else
					{
						this._EquipmentID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Equipment");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Job_Dispatch", Storage="_Job", ThisKey="JobID", OtherKey="ID", IsForeignKey=true)]
		public Job Job
		{
			get
			{
				return this._Job.Entity;
			}
			set
			{
				Job previousValue = this._Job.Entity;
				if (((previousValue != value) 
							|| (this._Job.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Job.Entity = null;
						previousValue.Dispatches.Remove(this);
					}
					this._Job.Entity = value;
					if ((value != null))
					{
						value.Dispatches.Add(this);
						this._JobID = value.ID;
					}
					else
					{
						this._JobID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Job");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Load_Dispatch", Storage="_Load", ThisKey="LoadID", OtherKey="ID", IsForeignKey=true)]
		public Load Load
		{
			get
			{
				return this._Load.Entity;
			}
			set
			{
				Load previousValue = this._Load.Entity;
				if (((previousValue != value) 
							|| (this._Load.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Load.Entity = null;
						previousValue.Dispatches.Remove(this);
					}
					this._Load.Entity = value;
					if ((value != null))
					{
						value.Dispatches.Add(this);
						this._LoadID = value.ID;
					}
					else
					{
						this._LoadID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Load");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rate_Dispatch", Storage="_Rate", ThisKey="RateID", OtherKey="ID", IsForeignKey=true)]
		public Rate Rate
		{
			get
			{
				return this._Rate.Entity;
			}
			set
			{
				Rate previousValue = this._Rate.Entity;
				if (((previousValue != value) 
							|| (this._Rate.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Rate.Entity = null;
						previousValue.Dispatches.Remove(this);
					}
					this._Rate.Entity = value;
					if ((value != null))
					{
						value.Dispatches.Add(this);
						this._RateID = value.ID;
					}
					else
					{
						this._RateID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Rate");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Dispatch", Storage="_Employee", ThisKey="EmployeeID", OtherKey="ID", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.Dispatches.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.Dispatches.Add(this);
						this._EmployeeID = value.ID;
					}
					else
					{
						this._EmployeeID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class TrailerCombination : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Nullable<long> _RateID;
		
		private string _Combination;
		
		private string _LicencePlate;
		
		private System.Nullable<double> _DeckLength;
		
		private System.Nullable<double> _Length;
		
		private System.Nullable<double> _Width;
		
		private System.Nullable<double> _Height;
		
		private System.Nullable<double> _Tare;
		
		private EntitySet<Load> _Loads;
		
		private EntityRef<Rate> _Rate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnRateIDChanging(System.Nullable<long> value);
    partial void OnRateIDChanged();
    partial void OnCombinationChanging(string value);
    partial void OnCombinationChanged();
    partial void OnLicencePlateChanging(string value);
    partial void OnLicencePlateChanged();
    partial void OnDeckLengthChanging(System.Nullable<double> value);
    partial void OnDeckLengthChanged();
    partial void OnLengthChanging(System.Nullable<double> value);
    partial void OnLengthChanged();
    partial void OnWidthChanging(System.Nullable<double> value);
    partial void OnWidthChanged();
    partial void OnHeightChanging(System.Nullable<double> value);
    partial void OnHeightChanged();
    partial void OnTareChanging(System.Nullable<double> value);
    partial void OnTareChanged();
    #endregion
		
		public TrailerCombination()
		{
			this._Loads = new EntitySet<Load>(new Action<Load>(this.attach_Loads), new Action<Load>(this.detach_Loads));
			this._Rate = default(EntityRef<Rate>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RateID")]
		public System.Nullable<long> RateID
		{
			get
			{
				return this._RateID;
			}
			set
			{
				if ((this._RateID != value))
				{
					if (this._Rate.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRateIDChanging(value);
					this.SendPropertyChanging();
					this._RateID = value;
					this.SendPropertyChanged("RateID");
					this.OnRateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Combination")]
		public string Combination
		{
			get
			{
				return this._Combination;
			}
			set
			{
				if ((this._Combination != value))
				{
					this.OnCombinationChanging(value);
					this.SendPropertyChanging();
					this._Combination = value;
					this.SendPropertyChanged("Combination");
					this.OnCombinationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LicencePlate")]
		public string LicencePlate
		{
			get
			{
				return this._LicencePlate;
			}
			set
			{
				if ((this._LicencePlate != value))
				{
					this.OnLicencePlateChanging(value);
					this.SendPropertyChanging();
					this._LicencePlate = value;
					this.SendPropertyChanged("LicencePlate");
					this.OnLicencePlateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeckLength")]
		public System.Nullable<double> DeckLength
		{
			get
			{
				return this._DeckLength;
			}
			set
			{
				if ((this._DeckLength != value))
				{
					this.OnDeckLengthChanging(value);
					this.SendPropertyChanging();
					this._DeckLength = value;
					this.SendPropertyChanged("DeckLength");
					this.OnDeckLengthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Length")]
		public System.Nullable<double> Length
		{
			get
			{
				return this._Length;
			}
			set
			{
				if ((this._Length != value))
				{
					this.OnLengthChanging(value);
					this.SendPropertyChanging();
					this._Length = value;
					this.SendPropertyChanged("Length");
					this.OnLengthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Width")]
		public System.Nullable<double> Width
		{
			get
			{
				return this._Width;
			}
			set
			{
				if ((this._Width != value))
				{
					this.OnWidthChanging(value);
					this.SendPropertyChanging();
					this._Width = value;
					this.SendPropertyChanged("Width");
					this.OnWidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Height")]
		public System.Nullable<double> Height
		{
			get
			{
				return this._Height;
			}
			set
			{
				if ((this._Height != value))
				{
					this.OnHeightChanging(value);
					this.SendPropertyChanging();
					this._Height = value;
					this.SendPropertyChanged("Height");
					this.OnHeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tare")]
		public System.Nullable<double> Tare
		{
			get
			{
				return this._Tare;
			}
			set
			{
				if ((this._Tare != value))
				{
					this.OnTareChanging(value);
					this.SendPropertyChanging();
					this._Tare = value;
					this.SendPropertyChanged("Tare");
					this.OnTareChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrailerCombination_Load", Storage="_Loads", ThisKey="ID", OtherKey="TrailerCombinationID")]
		public EntitySet<Load> Loads
		{
			get
			{
				return this._Loads;
			}
			set
			{
				this._Loads.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rate_TrailerCombination", Storage="_Rate", ThisKey="RateID", OtherKey="ID", IsForeignKey=true)]
		public Rate Rate
		{
			get
			{
				return this._Rate.Entity;
			}
			set
			{
				Rate previousValue = this._Rate.Entity;
				if (((previousValue != value) 
							|| (this._Rate.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Rate.Entity = null;
						previousValue.TrailerCombinations.Remove(this);
					}
					this._Rate.Entity = value;
					if ((value != null))
					{
						value.TrailerCombinations.Add(this);
						this._RateID = value.ID;
					}
					else
					{
						this._RateID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Rate");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Loads(Load entity)
		{
			this.SendPropertyChanging();
			entity.TrailerCombination = this;
		}
		
		private void detach_Loads(Load entity)
		{
			this.SendPropertyChanging();
			entity.TrailerCombination = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class LoadUnloadMethod : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _Name;
		
		private EntitySet<JobCommodity> _LoadedJobCommodities;
		
		private EntitySet<JobCommodity> _UnloadedJobCommodities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public LoadUnloadMethod()
		{
			this._LoadedJobCommodities = new EntitySet<JobCommodity>(new Action<JobCommodity>(this.attach_LoadedJobCommodities), new Action<JobCommodity>(this.detach_LoadedJobCommodities));
			this._UnloadedJobCommodities = new EntitySet<JobCommodity>(new Action<JobCommodity>(this.attach_UnloadedJobCommodities), new Action<JobCommodity>(this.detach_UnloadedJobCommodities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoadUnloadMethod_JobCommodity", Storage="_LoadedJobCommodities", ThisKey="ID", OtherKey="LoadMethodID")]
		public EntitySet<JobCommodity> LoadedJobCommodities
		{
			get
			{
				return this._LoadedJobCommodities;
			}
			set
			{
				this._LoadedJobCommodities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoadUnloadMethod_JobCommodity1", Storage="_UnloadedJobCommodities", ThisKey="ID", OtherKey="UnloadMethodID")]
		public EntitySet<JobCommodity> UnloadedJobCommodities
		{
			get
			{
				return this._UnloadedJobCommodities;
			}
			set
			{
				this._UnloadedJobCommodities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LoadedJobCommodities(JobCommodity entity)
		{
			this.SendPropertyChanging();
			entity.LoadMethod = this;
		}
		
		private void detach_LoadedJobCommodities(JobCommodity entity)
		{
			this.SendPropertyChanging();
			entity.LoadMethod = null;
		}
		
		private void attach_UnloadedJobCommodities(JobCommodity entity)
		{
			this.SendPropertyChanging();
			entity.UnloadMethod = this;
		}
		
		private void detach_UnloadedJobCommodities(JobCommodity entity)
		{
			this.SendPropertyChanging();
			entity.UnloadMethod = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class Invoice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Nullable<long> _JobID;
		
		private System.Nullable<long> _AddressID;
		
		private System.Nullable<long> _ContactID;
		
		private System.Nullable<int> _Number;
		
		private System.Nullable<int> _Revision;
		
		private string _Comment;
		
		private System.Nullable<System.DateTime> _InvoiceDate;
		
		private System.Nullable<int> _Hours;
		
		private System.Nullable<decimal> _HourlyRate;
		
		private System.Nullable<bool> _GSTExempt;
		
		private EntitySet<InvoiceReferenceNumber> _ReferenceNumbers;
		
		private EntitySet<InvoiceLineItem> _InvoiceLineItems;
		
		private EntitySet<InvoiceExtra> _InvoiceExtras;
		
		private EntityRef<Address> _BillingAddress;
		
		private EntityRef<Contact> _Contact;
		
		private EntityRef<Job> _Job;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnJobIDChanging(System.Nullable<long> value);
    partial void OnJobIDChanged();
    partial void OnAddressIDChanging(System.Nullable<long> value);
    partial void OnAddressIDChanged();
    partial void OnContactIDChanging(System.Nullable<long> value);
    partial void OnContactIDChanged();
    partial void OnNumberChanging(System.Nullable<int> value);
    partial void OnNumberChanged();
    partial void OnRevisionChanging(System.Nullable<int> value);
    partial void OnRevisionChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnInvoiceDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInvoiceDateChanged();
    partial void OnHoursChanging(System.Nullable<int> value);
    partial void OnHoursChanged();
    partial void OnHourlyRateChanging(System.Nullable<decimal> value);
    partial void OnHourlyRateChanged();
    partial void OnGSTExemptChanging(System.Nullable<bool> value);
    partial void OnGSTExemptChanged();
    #endregion
		
		public Invoice()
		{
			this._ReferenceNumbers = new EntitySet<InvoiceReferenceNumber>(new Action<InvoiceReferenceNumber>(this.attach_ReferenceNumbers), new Action<InvoiceReferenceNumber>(this.detach_ReferenceNumbers));
			this._InvoiceLineItems = new EntitySet<InvoiceLineItem>(new Action<InvoiceLineItem>(this.attach_InvoiceLineItems), new Action<InvoiceLineItem>(this.detach_InvoiceLineItems));
			this._InvoiceExtras = new EntitySet<InvoiceExtra>(new Action<InvoiceExtra>(this.attach_InvoiceExtras), new Action<InvoiceExtra>(this.detach_InvoiceExtras));
			this._BillingAddress = default(EntityRef<Address>);
			this._Contact = default(EntityRef<Contact>);
			this._Job = default(EntityRef<Job>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobID")]
		public System.Nullable<long> JobID
		{
			get
			{
				return this._JobID;
			}
			set
			{
				if ((this._JobID != value))
				{
					if (this._Job.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJobIDChanging(value);
					this.SendPropertyChanging();
					this._JobID = value;
					this.SendPropertyChanged("JobID");
					this.OnJobIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressID")]
		public System.Nullable<long> AddressID
		{
			get
			{
				return this._AddressID;
			}
			set
			{
				if ((this._AddressID != value))
				{
					if (this._BillingAddress.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAddressIDChanging(value);
					this.SendPropertyChanging();
					this._AddressID = value;
					this.SendPropertyChanged("AddressID");
					this.OnAddressIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactID")]
		public System.Nullable<long> ContactID
		{
			get
			{
				return this._ContactID;
			}
			set
			{
				if ((this._ContactID != value))
				{
					if (this._Contact.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContactIDChanging(value);
					this.SendPropertyChanging();
					this._ContactID = value;
					this.SendPropertyChanged("ContactID");
					this.OnContactIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number")]
		public System.Nullable<int> Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this.OnNumberChanging(value);
					this.SendPropertyChanging();
					this._Number = value;
					this.SendPropertyChanged("Number");
					this.OnNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Revision")]
		public System.Nullable<int> Revision
		{
			get
			{
				return this._Revision;
			}
			set
			{
				if ((this._Revision != value))
				{
					this.OnRevisionChanging(value);
					this.SendPropertyChanging();
					this._Revision = value;
					this.SendPropertyChanged("Revision");
					this.OnRevisionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceDate")]
		public System.Nullable<System.DateTime> InvoiceDate
		{
			get
			{
				return this._InvoiceDate;
			}
			set
			{
				if ((this._InvoiceDate != value))
				{
					this.OnInvoiceDateChanging(value);
					this.SendPropertyChanging();
					this._InvoiceDate = value;
					this.SendPropertyChanged("InvoiceDate");
					this.OnInvoiceDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hours")]
		public System.Nullable<int> Hours
		{
			get
			{
				return this._Hours;
			}
			set
			{
				if ((this._Hours != value))
				{
					this.OnHoursChanging(value);
					this.SendPropertyChanging();
					this._Hours = value;
					this.SendPropertyChanged("Hours");
					this.OnHoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HourlyRate")]
		public System.Nullable<decimal> HourlyRate
		{
			get
			{
				return this._HourlyRate;
			}
			set
			{
				if ((this._HourlyRate != value))
				{
					this.OnHourlyRateChanging(value);
					this.SendPropertyChanging();
					this._HourlyRate = value;
					this.SendPropertyChanged("HourlyRate");
					this.OnHourlyRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GSTExempt")]
		public System.Nullable<bool> GSTExempt
		{
			get
			{
				return this._GSTExempt;
			}
			set
			{
				if ((this._GSTExempt != value))
				{
					this.OnGSTExemptChanging(value);
					this.SendPropertyChanging();
					this._GSTExempt = value;
					this.SendPropertyChanged("GSTExempt");
					this.OnGSTExemptChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Invoice_InvoiceReferenceNumber", Storage="_ReferenceNumbers", ThisKey="ID", OtherKey="InvoiceID")]
		public EntitySet<InvoiceReferenceNumber> ReferenceNumbers
		{
			get
			{
				return this._ReferenceNumbers;
			}
			set
			{
				this._ReferenceNumbers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Invoice_InvoiceLineItem", Storage="_InvoiceLineItems", ThisKey="ID", OtherKey="InvoiceID")]
		public EntitySet<InvoiceLineItem> InvoiceLineItems
		{
			get
			{
				return this._InvoiceLineItems;
			}
			set
			{
				this._InvoiceLineItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Invoice_InvoiceExtra", Storage="_InvoiceExtras", ThisKey="ID", OtherKey="InvoiceID")]
		public EntitySet<InvoiceExtra> InvoiceExtras
		{
			get
			{
				return this._InvoiceExtras;
			}
			set
			{
				this._InvoiceExtras.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_Invoice", Storage="_BillingAddress", ThisKey="AddressID", OtherKey="ID", IsForeignKey=true)]
		public Address BillingAddress
		{
			get
			{
				return this._BillingAddress.Entity;
			}
			set
			{
				Address previousValue = this._BillingAddress.Entity;
				if (((previousValue != value) 
							|| (this._BillingAddress.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BillingAddress.Entity = null;
						previousValue.Invoices.Remove(this);
					}
					this._BillingAddress.Entity = value;
					if ((value != null))
					{
						value.Invoices.Add(this);
						this._AddressID = value.ID;
					}
					else
					{
						this._AddressID = default(Nullable<long>);
					}
					this.SendPropertyChanged("BillingAddress");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contact_Invoice", Storage="_Contact", ThisKey="ContactID", OtherKey="ID", IsForeignKey=true)]
		public Contact Contact
		{
			get
			{
				return this._Contact.Entity;
			}
			set
			{
				Contact previousValue = this._Contact.Entity;
				if (((previousValue != value) 
							|| (this._Contact.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Contact.Entity = null;
						previousValue.Invoices.Remove(this);
					}
					this._Contact.Entity = value;
					if ((value != null))
					{
						value.Invoices.Add(this);
						this._ContactID = value.ID;
					}
					else
					{
						this._ContactID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Contact");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Job_Invoice", Storage="_Job", ThisKey="JobID", OtherKey="ID", IsForeignKey=true)]
		public Job Job
		{
			get
			{
				return this._Job.Entity;
			}
			set
			{
				Job previousValue = this._Job.Entity;
				if (((previousValue != value) 
							|| (this._Job.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Job.Entity = null;
						previousValue.Invoices.Remove(this);
					}
					this._Job.Entity = value;
					if ((value != null))
					{
						value.Invoices.Add(this);
						this._JobID = value.ID;
					}
					else
					{
						this._JobID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Job");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ReferenceNumbers(InvoiceReferenceNumber entity)
		{
			this.SendPropertyChanging();
			entity.Invoice = this;
		}
		
		private void detach_ReferenceNumbers(InvoiceReferenceNumber entity)
		{
			this.SendPropertyChanging();
			entity.Invoice = null;
		}
		
		private void attach_InvoiceLineItems(InvoiceLineItem entity)
		{
			this.SendPropertyChanging();
			entity.Invoice = this;
		}
		
		private void detach_InvoiceLineItems(InvoiceLineItem entity)
		{
			this.SendPropertyChanging();
			entity.Invoice = null;
		}
		
		private void attach_InvoiceExtras(InvoiceExtra entity)
		{
			this.SendPropertyChanging();
			entity.Invoice = this;
		}
		
		private void detach_InvoiceExtras(InvoiceExtra entity)
		{
			this.SendPropertyChanging();
			entity.Invoice = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class InvoiceReferenceNumber : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Nullable<long> _InvoiceID;
		
		private string _Field;
		
		private string _Value;
		
		private EntityRef<Invoice> _Invoice;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnInvoiceIDChanging(System.Nullable<long> value);
    partial void OnInvoiceIDChanged();
    partial void OnFieldChanging(string value);
    partial void OnFieldChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    #endregion
		
		public InvoiceReferenceNumber()
		{
			this._Invoice = default(EntityRef<Invoice>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceID")]
		public System.Nullable<long> InvoiceID
		{
			get
			{
				return this._InvoiceID;
			}
			set
			{
				if ((this._InvoiceID != value))
				{
					if (this._Invoice.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInvoiceIDChanging(value);
					this.SendPropertyChanging();
					this._InvoiceID = value;
					this.SendPropertyChanged("InvoiceID");
					this.OnInvoiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Field")]
		public string Field
		{
			get
			{
				return this._Field;
			}
			set
			{
				if ((this._Field != value))
				{
					this.OnFieldChanging(value);
					this.SendPropertyChanging();
					this._Field = value;
					this.SendPropertyChanged("Field");
					this.OnFieldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value")]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Invoice_InvoiceReferenceNumber", Storage="_Invoice", ThisKey="InvoiceID", OtherKey="ID", IsForeignKey=true)]
		public Invoice Invoice
		{
			get
			{
				return this._Invoice.Entity;
			}
			set
			{
				Invoice previousValue = this._Invoice.Entity;
				if (((previousValue != value) 
							|| (this._Invoice.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Invoice.Entity = null;
						previousValue.ReferenceNumbers.Remove(this);
					}
					this._Invoice.Entity = value;
					if ((value != null))
					{
						value.ReferenceNumbers.Add(this);
						this._InvoiceID = value.ID;
					}
					else
					{
						this._InvoiceID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Invoice");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class InvoiceLineItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Nullable<long> _InvoiceID;
		
		private string _Description;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private string _Departure;
		
		private string _Destination;
		
		private System.Nullable<double> _Hours;
		
		private System.Nullable<decimal> _Cost;
		
		private EntityRef<Invoice> _Invoice;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnInvoiceIDChanging(System.Nullable<long> value);
    partial void OnInvoiceIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnDepartureChanging(string value);
    partial void OnDepartureChanged();
    partial void OnDestinationChanging(string value);
    partial void OnDestinationChanged();
    partial void OnHoursChanging(System.Nullable<double> value);
    partial void OnHoursChanged();
    partial void OnCostChanging(System.Nullable<decimal> value);
    partial void OnCostChanged();
    #endregion
		
		public InvoiceLineItem()
		{
			this._Invoice = default(EntityRef<Invoice>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceID")]
		public System.Nullable<long> InvoiceID
		{
			get
			{
				return this._InvoiceID;
			}
			set
			{
				if ((this._InvoiceID != value))
				{
					if (this._Invoice.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInvoiceIDChanging(value);
					this.SendPropertyChanging();
					this._InvoiceID = value;
					this.SendPropertyChanged("InvoiceID");
					this.OnInvoiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Departure")]
		public string Departure
		{
			get
			{
				return this._Departure;
			}
			set
			{
				if ((this._Departure != value))
				{
					this.OnDepartureChanging(value);
					this.SendPropertyChanging();
					this._Departure = value;
					this.SendPropertyChanged("Departure");
					this.OnDepartureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Destination")]
		public string Destination
		{
			get
			{
				return this._Destination;
			}
			set
			{
				if ((this._Destination != value))
				{
					this.OnDestinationChanging(value);
					this.SendPropertyChanging();
					this._Destination = value;
					this.SendPropertyChanged("Destination");
					this.OnDestinationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hours")]
		public System.Nullable<double> Hours
		{
			get
			{
				return this._Hours;
			}
			set
			{
				if ((this._Hours != value))
				{
					this.OnHoursChanging(value);
					this.SendPropertyChanging();
					this._Hours = value;
					this.SendPropertyChanged("Hours");
					this.OnHoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cost")]
		public System.Nullable<decimal> Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this.OnCostChanging(value);
					this.SendPropertyChanging();
					this._Cost = value;
					this.SendPropertyChanged("Cost");
					this.OnCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Invoice_InvoiceLineItem", Storage="_Invoice", ThisKey="InvoiceID", OtherKey="ID", IsForeignKey=true)]
		public Invoice Invoice
		{
			get
			{
				return this._Invoice.Entity;
			}
			set
			{
				Invoice previousValue = this._Invoice.Entity;
				if (((previousValue != value) 
							|| (this._Invoice.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Invoice.Entity = null;
						previousValue.InvoiceLineItems.Remove(this);
					}
					this._Invoice.Entity = value;
					if ((value != null))
					{
						value.InvoiceLineItems.Add(this);
						this._InvoiceID = value.ID;
					}
					else
					{
						this._InvoiceID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Invoice");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class InvoiceExtra : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Nullable<long> _InvoiceID;
		
		private string _Description;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private string _Departure;
		
		private string _Destination;
		
		private System.Nullable<double> _Hours;
		
		private System.Nullable<decimal> _Cost;
		
		private EntityRef<Invoice> _Invoice;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnInvoiceIDChanging(System.Nullable<long> value);
    partial void OnInvoiceIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnDepartureChanging(string value);
    partial void OnDepartureChanged();
    partial void OnDestinationChanging(string value);
    partial void OnDestinationChanged();
    partial void OnHoursChanging(System.Nullable<double> value);
    partial void OnHoursChanged();
    partial void OnCostChanging(System.Nullable<decimal> value);
    partial void OnCostChanged();
    #endregion
		
		public InvoiceExtra()
		{
			this._Invoice = default(EntityRef<Invoice>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceID")]
		public System.Nullable<long> InvoiceID
		{
			get
			{
				return this._InvoiceID;
			}
			set
			{
				if ((this._InvoiceID != value))
				{
					if (this._Invoice.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInvoiceIDChanging(value);
					this.SendPropertyChanging();
					this._InvoiceID = value;
					this.SendPropertyChanged("InvoiceID");
					this.OnInvoiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Departure")]
		public string Departure
		{
			get
			{
				return this._Departure;
			}
			set
			{
				if ((this._Departure != value))
				{
					this.OnDepartureChanging(value);
					this.SendPropertyChanging();
					this._Departure = value;
					this.SendPropertyChanged("Departure");
					this.OnDepartureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Destination")]
		public string Destination
		{
			get
			{
				return this._Destination;
			}
			set
			{
				if ((this._Destination != value))
				{
					this.OnDestinationChanging(value);
					this.SendPropertyChanging();
					this._Destination = value;
					this.SendPropertyChanged("Destination");
					this.OnDestinationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hours")]
		public System.Nullable<double> Hours
		{
			get
			{
				return this._Hours;
			}
			set
			{
				if ((this._Hours != value))
				{
					this.OnHoursChanging(value);
					this.SendPropertyChanging();
					this._Hours = value;
					this.SendPropertyChanged("Hours");
					this.OnHoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cost")]
		public System.Nullable<decimal> Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this.OnCostChanging(value);
					this.SendPropertyChanging();
					this._Cost = value;
					this.SendPropertyChanged("Cost");
					this.OnCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Invoice_InvoiceExtra", Storage="_Invoice", ThisKey="InvoiceID", OtherKey="ID", IsForeignKey=true)]
		public Invoice Invoice
		{
			get
			{
				return this._Invoice.Entity;
			}
			set
			{
				Invoice previousValue = this._Invoice.Entity;
				if (((previousValue != value) 
							|| (this._Invoice.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Invoice.Entity = null;
						previousValue.InvoiceExtras.Remove(this);
					}
					this._Invoice.Entity = value;
					if ((value != null))
					{
						value.InvoiceExtras.Add(this);
						this._InvoiceID = value.ID;
					}
					else
					{
						this._InvoiceID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Invoice");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class CustomerType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<long> _ID;
		
		private string _Name;
		
		private System.Nullable<bool> _IsEnterprise;
		
		private EntitySet<Company> _Companies;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Nullable<long> value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnIsEnterpriseChanging(System.Nullable<bool> value);
    partial void OnIsEnterpriseChanged();
    #endregion
		
		public CustomerType()
		{
			this._Companies = new EntitySet<Company>(new Action<Company>(this.attach_Companies), new Action<Company>(this.detach_Companies));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, IsPrimaryKey=true, IsDbGenerated=true)]
		public System.Nullable<long> ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsEnterprise")]
		public System.Nullable<bool> IsEnterprise
		{
			get
			{
				return this._IsEnterprise;
			}
			set
			{
				if ((this._IsEnterprise != value))
				{
					this.OnIsEnterpriseChanging(value);
					this.SendPropertyChanging();
					this._IsEnterprise = value;
					this.SendPropertyChanged("IsEnterprise");
					this.OnIsEnterpriseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerType_Company", Storage="_Companies", ThisKey="ID", OtherKey="CustomerTypeID")]
		public EntitySet<Company> Companies
		{
			get
			{
				return this._Companies;
			}
			set
			{
				this._Companies.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Companies(Company entity)
		{
			this.SendPropertyChanging();
			entity.CustomerType = this;
		}
		
		private void detach_Companies(Company entity)
		{
			this.SendPropertyChanging();
			entity.CustomerType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class ContactMethod : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<long> _ID;
		
		private string _Name;
		
		private EntitySet<Contact> _Contacts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Nullable<long> value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public ContactMethod()
		{
			this._Contacts = new EntitySet<Contact>(new Action<Contact>(this.attach_Contacts), new Action<Contact>(this.detach_Contacts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, IsPrimaryKey=true, IsDbGenerated=true)]
		public System.Nullable<long> ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ContactMethod_Contact", Storage="_Contacts", ThisKey="ID", OtherKey="ContactMethodID")]
		public EntitySet<Contact> Contacts
		{
			get
			{
				return this._Contacts;
			}
			set
			{
				this._Contacts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Contacts(Contact entity)
		{
			this.SendPropertyChanging();
			entity.PreferedContactMethod = this;
		}
		
		private void detach_Contacts(Contact entity)
		{
			this.SendPropertyChanging();
			entity.PreferedContactMethod = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class Configuration : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _Name;
		
		private string _Value;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    #endregion
		
		public Configuration()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value")]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
